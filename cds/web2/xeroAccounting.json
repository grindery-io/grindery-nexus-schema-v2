{
    "key": "xeroAccounting",
    "name": "Xero Accounting API",
    "version": "2.38.0",
    "platformVersion": "1.0.0",
    "actions": [
      {
        "key": "getaccounts_accounts_get",
        "name": "Retrieves the full chart of accounts",
        "display": {
          "label": "Retrieves the full chart of accounts",
          "description": "Retrieves the full chart of accounts",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==&quot;ACTIVE&quot; AND Type==&quot;BANK&quot;",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==&quot;ACTIVE&quot; AND Type==&quot;BANK&quot;",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Name ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Name ASC",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createaccount_accounts_put",
        "name": "Creates a new chart of accounts",
        "display": {
          "label": "Creates a new chart of accounts",
          "description": "Creates a new chart of accounts",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body.Code",
              "label": "Code",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 4400",
              "required": false,
              "helpText": "Customer defined alpha numeric account code e.g 200 or SALES (max length = 10)",
              "sample": 4400
            },
            {
              "key": "body.Name",
              "label": "Name",
              "type": "string",
              "validation": {
                "max": 150
              },
              "placeholder": "Example: Food Sales",
              "required": false,
              "helpText": "Name of account (max length = 150)",
              "sample": "Food Sales"
            },
            {
              "key": "body.AccountID",
              "label": "Account ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "The Xero identifier for an account – specified as a string following  the endpoint name   e.g. /297c2dc5-cc47-4afd-8ec8-74990b8761e9",
              "sample": "00000000-0000-0000-0000-000000000000"
            },
            {
              "key": "body.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "BANK",
                  "CURRENT",
                  "CURRLIAB",
                  "DEPRECIATN",
                  "DIRECTCOSTS",
                  "EQUITY",
                  "EXPENSE",
                  "FIXED",
                  "INVENTORY",
                  "LIABILITY",
                  "NONCURRENT",
                  "OTHERINCOME",
                  "OVERHEADS",
                  "PREPAYMENT",
                  "REVENUE",
                  "SALES",
                  "TERMLIAB",
                  "PAYGLIABILITY",
                  "PAYG",
                  "SUPERANNUATIONEXPENSE",
                  "SUPERANNUATIONLIABILITY",
                  "WAGESEXPENSE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Account Types",
              "choices": [
                {
                  "value": "BANK",
                  "label": "BANK",
                  "sample": "BANK"
                },
                {
                  "value": "CURRENT",
                  "label": "CURRENT",
                  "sample": "CURRENT"
                },
                {
                  "value": "CURRLIAB",
                  "label": "CURRLIAB",
                  "sample": "CURRLIAB"
                },
                {
                  "value": "DEPRECIATN",
                  "label": "DEPRECIATN",
                  "sample": "DEPRECIATN"
                },
                {
                  "value": "DIRECTCOSTS",
                  "label": "DIRECTCOSTS",
                  "sample": "DIRECTCOSTS"
                },
                {
                  "value": "EQUITY",
                  "label": "EQUITY",
                  "sample": "EQUITY"
                },
                {
                  "value": "EXPENSE",
                  "label": "EXPENSE",
                  "sample": "EXPENSE"
                },
                {
                  "value": "FIXED",
                  "label": "FIXED",
                  "sample": "FIXED"
                },
                {
                  "value": "INVENTORY",
                  "label": "INVENTORY",
                  "sample": "INVENTORY"
                },
                {
                  "value": "LIABILITY",
                  "label": "LIABILITY",
                  "sample": "LIABILITY"
                },
                {
                  "value": "NONCURRENT",
                  "label": "NONCURRENT",
                  "sample": "NONCURRENT"
                },
                {
                  "value": "OTHERINCOME",
                  "label": "OTHERINCOME",
                  "sample": "OTHERINCOME"
                },
                {
                  "value": "OVERHEADS",
                  "label": "OVERHEADS",
                  "sample": "OVERHEADS"
                },
                {
                  "value": "PREPAYMENT",
                  "label": "PREPAYMENT",
                  "sample": "PREPAYMENT"
                },
                {
                  "value": "REVENUE",
                  "label": "REVENUE",
                  "sample": "REVENUE"
                },
                {
                  "value": "SALES",
                  "label": "SALES",
                  "sample": "SALES"
                },
                {
                  "value": "TERMLIAB",
                  "label": "TERMLIAB",
                  "sample": "TERMLIAB"
                },
                {
                  "value": "PAYGLIABILITY",
                  "label": "PAYGLIABILITY",
                  "sample": "PAYGLIABILITY"
                },
                {
                  "value": "PAYG",
                  "label": "PAYG",
                  "sample": "PAYG"
                },
                {
                  "value": "SUPERANNUATIONEXPENSE",
                  "label": "SUPERANNUATIONEXPENSE",
                  "sample": "SUPERANNUATIONEXPENSE"
                },
                {
                  "value": "SUPERANNUATIONLIABILITY",
                  "label": "SUPERANNUATIONLIABILITY",
                  "sample": "SUPERANNUATIONLIABILITY"
                },
                {
                  "value": "WAGESEXPENSE",
                  "label": "WAGESEXPENSE",
                  "sample": "WAGESEXPENSE"
                }
              ]
            },
            {
              "key": "body.BankAccountNumber",
              "label": "Bank Account Number",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "For bank accounts only (Account Type BANK)"
            },
            {
              "key": "body.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "ACTIVE",
                  "ARCHIVED",
                  "DELETED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Accounts with a status of ACTIVE can be updated to ARCHIVED. See Account Status Codes",
              "choices": [
                {
                  "value": "ACTIVE",
                  "label": "ACTIVE",
                  "sample": "ACTIVE"
                },
                {
                  "value": "ARCHIVED",
                  "label": "ARCHIVED",
                  "sample": "ARCHIVED"
                },
                {
                  "value": "DELETED",
                  "label": "DELETED",
                  "sample": "DELETED"
                }
              ]
            },
            {
              "key": "body.Description",
              "label": "Description",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Description of the Account. Valid for all types of accounts except bank accounts (max length = 4000)"
            },
            {
              "key": "body.BankAccountType",
              "label": "Bank Account Type",
              "type": "string",
              "validation": {
                "values": [
                  "BANK",
                  "CREDITCARD",
                  "PAYPAL",
                  "NONE",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "For bank accounts only. See Bank Account types",
              "choices": [
                {
                  "value": "BANK",
                  "label": "BANK",
                  "sample": "BANK"
                },
                {
                  "value": "CREDITCARD",
                  "label": "CREDITCARD",
                  "sample": "CREDITCARD"
                },
                {
                  "value": "PAYPAL",
                  "label": "PAYPAL",
                  "sample": "PAYPAL"
                },
                {
                  "value": "NONE",
                  "label": "NONE",
                  "sample": "NONE"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.CurrencyCode",
              "label": "Currency Code",
              "type": "string",
              "validation": {
                "values": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BYR",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EEK",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LTL",
                  "LVL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SKK",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "STD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "3 letter alpha code for the currency – see list of currency codes",
              "choices": [
                {
                  "value": "AED",
                  "label": "AED",
                  "sample": "AED"
                },
                {
                  "value": "AFN",
                  "label": "AFN",
                  "sample": "AFN"
                },
                {
                  "value": "ALL",
                  "label": "ALL",
                  "sample": "ALL"
                },
                {
                  "value": "AMD",
                  "label": "AMD",
                  "sample": "AMD"
                },
                {
                  "value": "ANG",
                  "label": "ANG",
                  "sample": "ANG"
                },
                {
                  "value": "AOA",
                  "label": "AOA",
                  "sample": "AOA"
                },
                {
                  "value": "ARS",
                  "label": "ARS",
                  "sample": "ARS"
                },
                {
                  "value": "AUD",
                  "label": "AUD",
                  "sample": "AUD"
                },
                {
                  "value": "AWG",
                  "label": "AWG",
                  "sample": "AWG"
                },
                {
                  "value": "AZN",
                  "label": "AZN",
                  "sample": "AZN"
                },
                {
                  "value": "BAM",
                  "label": "BAM",
                  "sample": "BAM"
                },
                {
                  "value": "BBD",
                  "label": "BBD",
                  "sample": "BBD"
                },
                {
                  "value": "BDT",
                  "label": "BDT",
                  "sample": "BDT"
                },
                {
                  "value": "BGN",
                  "label": "BGN",
                  "sample": "BGN"
                },
                {
                  "value": "BHD",
                  "label": "BHD",
                  "sample": "BHD"
                },
                {
                  "value": "BIF",
                  "label": "BIF",
                  "sample": "BIF"
                },
                {
                  "value": "BMD",
                  "label": "BMD",
                  "sample": "BMD"
                },
                {
                  "value": "BND",
                  "label": "BND",
                  "sample": "BND"
                },
                {
                  "value": "BOB",
                  "label": "BOB",
                  "sample": "BOB"
                },
                {
                  "value": "BRL",
                  "label": "BRL",
                  "sample": "BRL"
                },
                {
                  "value": "BSD",
                  "label": "BSD",
                  "sample": "BSD"
                },
                {
                  "value": "BTN",
                  "label": "BTN",
                  "sample": "BTN"
                },
                {
                  "value": "BWP",
                  "label": "BWP",
                  "sample": "BWP"
                },
                {
                  "value": "BYN",
                  "label": "BYN",
                  "sample": "BYN"
                },
                {
                  "value": "BYR",
                  "label": "BYR",
                  "sample": "BYR"
                },
                {
                  "value": "BZD",
                  "label": "BZD",
                  "sample": "BZD"
                },
                {
                  "value": "CAD",
                  "label": "CAD",
                  "sample": "CAD"
                },
                {
                  "value": "CDF",
                  "label": "CDF",
                  "sample": "CDF"
                },
                {
                  "value": "CHF",
                  "label": "CHF",
                  "sample": "CHF"
                },
                {
                  "value": "CLF",
                  "label": "CLF",
                  "sample": "CLF"
                },
                {
                  "value": "CLP",
                  "label": "CLP",
                  "sample": "CLP"
                },
                {
                  "value": "CNY",
                  "label": "CNY",
                  "sample": "CNY"
                },
                {
                  "value": "COP",
                  "label": "COP",
                  "sample": "COP"
                },
                {
                  "value": "CRC",
                  "label": "CRC",
                  "sample": "CRC"
                },
                {
                  "value": "CUC",
                  "label": "CUC",
                  "sample": "CUC"
                },
                {
                  "value": "CUP",
                  "label": "CUP",
                  "sample": "CUP"
                },
                {
                  "value": "CVE",
                  "label": "CVE",
                  "sample": "CVE"
                },
                {
                  "value": "CZK",
                  "label": "CZK",
                  "sample": "CZK"
                },
                {
                  "value": "DJF",
                  "label": "DJF",
                  "sample": "DJF"
                },
                {
                  "value": "DKK",
                  "label": "DKK",
                  "sample": "DKK"
                },
                {
                  "value": "DOP",
                  "label": "DOP",
                  "sample": "DOP"
                },
                {
                  "value": "DZD",
                  "label": "DZD",
                  "sample": "DZD"
                },
                {
                  "value": "EEK",
                  "label": "EEK",
                  "sample": "EEK"
                },
                {
                  "value": "EGP",
                  "label": "EGP",
                  "sample": "EGP"
                },
                {
                  "value": "ERN",
                  "label": "ERN",
                  "sample": "ERN"
                },
                {
                  "value": "ETB",
                  "label": "ETB",
                  "sample": "ETB"
                },
                {
                  "value": "EUR",
                  "label": "EUR",
                  "sample": "EUR"
                },
                {
                  "value": "FJD",
                  "label": "FJD",
                  "sample": "FJD"
                },
                {
                  "value": "FKP",
                  "label": "FKP",
                  "sample": "FKP"
                },
                {
                  "value": "GBP",
                  "label": "GBP",
                  "sample": "GBP"
                },
                {
                  "value": "GEL",
                  "label": "GEL",
                  "sample": "GEL"
                },
                {
                  "value": "GHS",
                  "label": "GHS",
                  "sample": "GHS"
                },
                {
                  "value": "GIP",
                  "label": "GIP",
                  "sample": "GIP"
                },
                {
                  "value": "GMD",
                  "label": "GMD",
                  "sample": "GMD"
                },
                {
                  "value": "GNF",
                  "label": "GNF",
                  "sample": "GNF"
                },
                {
                  "value": "GTQ",
                  "label": "GTQ",
                  "sample": "GTQ"
                },
                {
                  "value": "GYD",
                  "label": "GYD",
                  "sample": "GYD"
                },
                {
                  "value": "HKD",
                  "label": "HKD",
                  "sample": "HKD"
                },
                {
                  "value": "HNL",
                  "label": "HNL",
                  "sample": "HNL"
                },
                {
                  "value": "HRK",
                  "label": "HRK",
                  "sample": "HRK"
                },
                {
                  "value": "HTG",
                  "label": "HTG",
                  "sample": "HTG"
                },
                {
                  "value": "HUF",
                  "label": "HUF",
                  "sample": "HUF"
                },
                {
                  "value": "IDR",
                  "label": "IDR",
                  "sample": "IDR"
                },
                {
                  "value": "ILS",
                  "label": "ILS",
                  "sample": "ILS"
                },
                {
                  "value": "INR",
                  "label": "INR",
                  "sample": "INR"
                },
                {
                  "value": "IQD",
                  "label": "IQD",
                  "sample": "IQD"
                },
                {
                  "value": "IRR",
                  "label": "IRR",
                  "sample": "IRR"
                },
                {
                  "value": "ISK",
                  "label": "ISK",
                  "sample": "ISK"
                },
                {
                  "value": "JMD",
                  "label": "JMD",
                  "sample": "JMD"
                },
                {
                  "value": "JOD",
                  "label": "JOD",
                  "sample": "JOD"
                },
                {
                  "value": "JPY",
                  "label": "JPY",
                  "sample": "JPY"
                },
                {
                  "value": "KES",
                  "label": "KES",
                  "sample": "KES"
                },
                {
                  "value": "KGS",
                  "label": "KGS",
                  "sample": "KGS"
                },
                {
                  "value": "KHR",
                  "label": "KHR",
                  "sample": "KHR"
                },
                {
                  "value": "KMF",
                  "label": "KMF",
                  "sample": "KMF"
                },
                {
                  "value": "KPW",
                  "label": "KPW",
                  "sample": "KPW"
                },
                {
                  "value": "KRW",
                  "label": "KRW",
                  "sample": "KRW"
                },
                {
                  "value": "KWD",
                  "label": "KWD",
                  "sample": "KWD"
                },
                {
                  "value": "KYD",
                  "label": "KYD",
                  "sample": "KYD"
                },
                {
                  "value": "KZT",
                  "label": "KZT",
                  "sample": "KZT"
                },
                {
                  "value": "LAK",
                  "label": "LAK",
                  "sample": "LAK"
                },
                {
                  "value": "LBP",
                  "label": "LBP",
                  "sample": "LBP"
                },
                {
                  "value": "LKR",
                  "label": "LKR",
                  "sample": "LKR"
                },
                {
                  "value": "LRD",
                  "label": "LRD",
                  "sample": "LRD"
                },
                {
                  "value": "LSL",
                  "label": "LSL",
                  "sample": "LSL"
                },
                {
                  "value": "LTL",
                  "label": "LTL",
                  "sample": "LTL"
                },
                {
                  "value": "LVL",
                  "label": "LVL",
                  "sample": "LVL"
                },
                {
                  "value": "LYD",
                  "label": "LYD",
                  "sample": "LYD"
                },
                {
                  "value": "MAD",
                  "label": "MAD",
                  "sample": "MAD"
                },
                {
                  "value": "MDL",
                  "label": "MDL",
                  "sample": "MDL"
                },
                {
                  "value": "MGA",
                  "label": "MGA",
                  "sample": "MGA"
                },
                {
                  "value": "MKD",
                  "label": "MKD",
                  "sample": "MKD"
                },
                {
                  "value": "MMK",
                  "label": "MMK",
                  "sample": "MMK"
                },
                {
                  "value": "MNT",
                  "label": "MNT",
                  "sample": "MNT"
                },
                {
                  "value": "MOP",
                  "label": "MOP",
                  "sample": "MOP"
                },
                {
                  "value": "MRO",
                  "label": "MRO",
                  "sample": "MRO"
                },
                {
                  "value": "MRU",
                  "label": "MRU",
                  "sample": "MRU"
                },
                {
                  "value": "MUR",
                  "label": "MUR",
                  "sample": "MUR"
                },
                {
                  "value": "MVR",
                  "label": "MVR",
                  "sample": "MVR"
                },
                {
                  "value": "MWK",
                  "label": "MWK",
                  "sample": "MWK"
                },
                {
                  "value": "MXN",
                  "label": "MXN",
                  "sample": "MXN"
                },
                {
                  "value": "MXV",
                  "label": "MXV",
                  "sample": "MXV"
                },
                {
                  "value": "MYR",
                  "label": "MYR",
                  "sample": "MYR"
                },
                {
                  "value": "MZN",
                  "label": "MZN",
                  "sample": "MZN"
                },
                {
                  "value": "NAD",
                  "label": "NAD",
                  "sample": "NAD"
                },
                {
                  "value": "NGN",
                  "label": "NGN",
                  "sample": "NGN"
                },
                {
                  "value": "NIO",
                  "label": "NIO",
                  "sample": "NIO"
                },
                {
                  "value": "NOK",
                  "label": "NOK",
                  "sample": "NOK"
                },
                {
                  "value": "NPR",
                  "label": "NPR",
                  "sample": "NPR"
                },
                {
                  "value": "NZD",
                  "label": "NZD",
                  "sample": "NZD"
                },
                {
                  "value": "OMR",
                  "label": "OMR",
                  "sample": "OMR"
                },
                {
                  "value": "PAB",
                  "label": "PAB",
                  "sample": "PAB"
                },
                {
                  "value": "PEN",
                  "label": "PEN",
                  "sample": "PEN"
                },
                {
                  "value": "PGK",
                  "label": "PGK",
                  "sample": "PGK"
                },
                {
                  "value": "PHP",
                  "label": "PHP",
                  "sample": "PHP"
                },
                {
                  "value": "PKR",
                  "label": "PKR",
                  "sample": "PKR"
                },
                {
                  "value": "PLN",
                  "label": "PLN",
                  "sample": "PLN"
                },
                {
                  "value": "PYG",
                  "label": "PYG",
                  "sample": "PYG"
                },
                {
                  "value": "QAR",
                  "label": "QAR",
                  "sample": "QAR"
                },
                {
                  "value": "RON",
                  "label": "RON",
                  "sample": "RON"
                },
                {
                  "value": "RSD",
                  "label": "RSD",
                  "sample": "RSD"
                },
                {
                  "value": "RUB",
                  "label": "RUB",
                  "sample": "RUB"
                },
                {
                  "value": "RWF",
                  "label": "RWF",
                  "sample": "RWF"
                },
                {
                  "value": "SAR",
                  "label": "SAR",
                  "sample": "SAR"
                },
                {
                  "value": "SBD",
                  "label": "SBD",
                  "sample": "SBD"
                },
                {
                  "value": "SCR",
                  "label": "SCR",
                  "sample": "SCR"
                },
                {
                  "value": "SDG",
                  "label": "SDG",
                  "sample": "SDG"
                },
                {
                  "value": "SEK",
                  "label": "SEK",
                  "sample": "SEK"
                },
                {
                  "value": "SGD",
                  "label": "SGD",
                  "sample": "SGD"
                },
                {
                  "value": "SHP",
                  "label": "SHP",
                  "sample": "SHP"
                },
                {
                  "value": "SKK",
                  "label": "SKK",
                  "sample": "SKK"
                },
                {
                  "value": "SLE",
                  "label": "SLE",
                  "sample": "SLE"
                },
                {
                  "value": "SLL",
                  "label": "SLL",
                  "sample": "SLL"
                },
                {
                  "value": "SOS",
                  "label": "SOS",
                  "sample": "SOS"
                },
                {
                  "value": "SRD",
                  "label": "SRD",
                  "sample": "SRD"
                },
                {
                  "value": "STD",
                  "label": "STD",
                  "sample": "STD"
                },
                {
                  "value": "STN",
                  "label": "STN",
                  "sample": "STN"
                },
                {
                  "value": "SVC",
                  "label": "SVC",
                  "sample": "SVC"
                },
                {
                  "value": "SYP",
                  "label": "SYP",
                  "sample": "SYP"
                },
                {
                  "value": "SZL",
                  "label": "SZL",
                  "sample": "SZL"
                },
                {
                  "value": "THB",
                  "label": "THB",
                  "sample": "THB"
                },
                {
                  "value": "TJS",
                  "label": "TJS",
                  "sample": "TJS"
                },
                {
                  "value": "TMT",
                  "label": "TMT",
                  "sample": "TMT"
                },
                {
                  "value": "TND",
                  "label": "TND",
                  "sample": "TND"
                },
                {
                  "value": "TOP",
                  "label": "TOP",
                  "sample": "TOP"
                },
                {
                  "value": "TRY",
                  "label": "TRY",
                  "sample": "TRY"
                },
                {
                  "value": "TTD",
                  "label": "TTD",
                  "sample": "TTD"
                },
                {
                  "value": "TWD",
                  "label": "TWD",
                  "sample": "TWD"
                },
                {
                  "value": "TZS",
                  "label": "TZS",
                  "sample": "TZS"
                },
                {
                  "value": "UAH",
                  "label": "UAH",
                  "sample": "UAH"
                },
                {
                  "value": "UGX",
                  "label": "UGX",
                  "sample": "UGX"
                },
                {
                  "value": "USD",
                  "label": "USD",
                  "sample": "USD"
                },
                {
                  "value": "UYU",
                  "label": "UYU",
                  "sample": "UYU"
                },
                {
                  "value": "UZS",
                  "label": "UZS",
                  "sample": "UZS"
                },
                {
                  "value": "VEF",
                  "label": "VEF",
                  "sample": "VEF"
                },
                {
                  "value": "VES",
                  "label": "VES",
                  "sample": "VES"
                },
                {
                  "value": "VND",
                  "label": "VND",
                  "sample": "VND"
                },
                {
                  "value": "VUV",
                  "label": "VUV",
                  "sample": "VUV"
                },
                {
                  "value": "WST",
                  "label": "WST",
                  "sample": "WST"
                },
                {
                  "value": "XAF",
                  "label": "XAF",
                  "sample": "XAF"
                },
                {
                  "value": "XCD",
                  "label": "XCD",
                  "sample": "XCD"
                },
                {
                  "value": "XOF",
                  "label": "XOF",
                  "sample": "XOF"
                },
                {
                  "value": "XPF",
                  "label": "XPF",
                  "sample": "XPF"
                },
                {
                  "value": "YER",
                  "label": "YER",
                  "sample": "YER"
                },
                {
                  "value": "ZAR",
                  "label": "ZAR",
                  "sample": "ZAR"
                },
                {
                  "value": "ZMW",
                  "label": "ZMW",
                  "sample": "ZMW"
                },
                {
                  "value": "ZMK",
                  "label": "ZMK",
                  "sample": "ZMK"
                },
                {
                  "value": "ZWD",
                  "label": "ZWD",
                  "sample": "ZWD"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.TaxType",
              "label": "Tax Type",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The tax type from taxRates"
            },
            {
              "key": "body.EnablePaymentsToAccount",
              "label": "Enable Payments To Account",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Boolean – describes whether account can have payments applied to it"
            },
            {
              "key": "body.ShowInExpenseClaims",
              "label": "Show In Expense Claims",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Boolean – describes whether account code is available for use with expense claims"
            },
            {
              "key": "body.Class",
              "label": "Class",
              "type": "string",
              "validation": {
                "values": [
                  "ASSET",
                  "EQUITY",
                  "EXPENSE",
                  "LIABILITY",
                  "REVENUE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Account Class Types",
              "choices": [
                {
                  "value": "ASSET",
                  "label": "ASSET",
                  "sample": "ASSET"
                },
                {
                  "value": "EQUITY",
                  "label": "EQUITY",
                  "sample": "EQUITY"
                },
                {
                  "value": "EXPENSE",
                  "label": "EXPENSE",
                  "sample": "EXPENSE"
                },
                {
                  "value": "LIABILITY",
                  "label": "LIABILITY",
                  "sample": "LIABILITY"
                },
                {
                  "value": "REVENUE",
                  "label": "REVENUE",
                  "sample": "REVENUE"
                }
              ]
            },
            {
              "key": "body.SystemAccount",
              "label": "System Account",
              "type": "string",
              "validation": {
                "values": [
                  "DEBTORS",
                  "CREDITORS",
                  "BANKCURRENCYGAIN",
                  "GST",
                  "GSTONIMPORTS",
                  "HISTORICAL",
                  "REALISEDCURRENCYGAIN",
                  "RETAINEDEARNINGS",
                  "ROUNDING",
                  "TRACKINGTRANSFERS",
                  "UNPAIDEXPCLM",
                  "UNREALISEDCURRENCYGAIN",
                  "WAGEPAYABLES",
                  "CISASSETS",
                  "CISASSET",
                  "CISLABOUR",
                  "CISLABOUREXPENSE",
                  "CISLABOURINCOME",
                  "CISLIABILITY",
                  "CISMATERIALS",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "If this is a system account then this element is returned. See System Account types. Note that non-system accounts may have this element set as either “” or null.",
              "choices": [
                {
                  "value": "DEBTORS",
                  "label": "DEBTORS",
                  "sample": "DEBTORS"
                },
                {
                  "value": "CREDITORS",
                  "label": "CREDITORS",
                  "sample": "CREDITORS"
                },
                {
                  "value": "BANKCURRENCYGAIN",
                  "label": "BANKCURRENCYGAIN",
                  "sample": "BANKCURRENCYGAIN"
                },
                {
                  "value": "GST",
                  "label": "GST",
                  "sample": "GST"
                },
                {
                  "value": "GSTONIMPORTS",
                  "label": "GSTONIMPORTS",
                  "sample": "GSTONIMPORTS"
                },
                {
                  "value": "HISTORICAL",
                  "label": "HISTORICAL",
                  "sample": "HISTORICAL"
                },
                {
                  "value": "REALISEDCURRENCYGAIN",
                  "label": "REALISEDCURRENCYGAIN",
                  "sample": "REALISEDCURRENCYGAIN"
                },
                {
                  "value": "RETAINEDEARNINGS",
                  "label": "RETAINEDEARNINGS",
                  "sample": "RETAINEDEARNINGS"
                },
                {
                  "value": "ROUNDING",
                  "label": "ROUNDING",
                  "sample": "ROUNDING"
                },
                {
                  "value": "TRACKINGTRANSFERS",
                  "label": "TRACKINGTRANSFERS",
                  "sample": "TRACKINGTRANSFERS"
                },
                {
                  "value": "UNPAIDEXPCLM",
                  "label": "UNPAIDEXPCLM",
                  "sample": "UNPAIDEXPCLM"
                },
                {
                  "value": "UNREALISEDCURRENCYGAIN",
                  "label": "UNREALISEDCURRENCYGAIN",
                  "sample": "UNREALISEDCURRENCYGAIN"
                },
                {
                  "value": "WAGEPAYABLES",
                  "label": "WAGEPAYABLES",
                  "sample": "WAGEPAYABLES"
                },
                {
                  "value": "CISASSETS",
                  "label": "CISASSETS",
                  "sample": "CISASSETS"
                },
                {
                  "value": "CISASSET",
                  "label": "CISASSET",
                  "sample": "CISASSET"
                },
                {
                  "value": "CISLABOUR",
                  "label": "CISLABOUR",
                  "sample": "CISLABOUR"
                },
                {
                  "value": "CISLABOUREXPENSE",
                  "label": "CISLABOUREXPENSE",
                  "sample": "CISLABOUREXPENSE"
                },
                {
                  "value": "CISLABOURINCOME",
                  "label": "CISLABOURINCOME",
                  "sample": "CISLABOURINCOME"
                },
                {
                  "value": "CISLIABILITY",
                  "label": "CISLIABILITY",
                  "sample": "CISLIABILITY"
                },
                {
                  "value": "CISMATERIALS",
                  "label": "CISMATERIALS",
                  "sample": "CISMATERIALS"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.ReportingCode",
              "label": "Reporting Code",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Shown if set"
            },
            {
              "key": "body.ReportingCodeName",
              "label": "Reporting Code Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Shown if set"
            },
            {
              "key": "body.HasAttachments",
              "label": "Has Attachments",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "boolean to indicate if an account has an attachment (read only)",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "Last modified date UTC format",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.AddToWatchlist",
              "label": "Add To Watchlist",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Boolean – describes whether the account is shown in the watchlist widget on the dashboard"
            },
            {
              "key": "body.ValidationErrors",
              "label": "Validation Errors",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Accounts\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getaccount_accounts_accountid_get",
        "name": "Retrieves a single chart of accounts by using a unique account Id",
        "display": {
          "label": "Retrieves a single chart of accounts by using a unique account Id",
          "description": "Retrieves a single chart of accounts by using a unique account Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.AccountID",
              "label": "Account ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Account object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateaccount_accounts_accountid_post",
        "name": "Updates a chart of accounts",
        "display": {
          "label": "Updates a chart of accounts",
          "description": "Updates a chart of accounts",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.AccountID",
              "label": "Account ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Account object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.Accounts",
              "label": "Accounts",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Accounts/{AccountID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "deleteaccount_accounts_accountid_delete",
        "name": "Deletes a chart of accounts",
        "display": {
          "label": "Deletes a chart of accounts",
          "description": "Deletes a chart of accounts",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.AccountID",
              "label": "Account ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Account object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getaccountattachments_accounts_accountid_attachments_get",
        "name": "Retrieves attachments for a specific accounts by using a unique account Id",
        "display": {
          "label": "Retrieves attachments for a specific accounts by using a unique account Id",
          "description": "Retrieves attachments for a specific accounts by using a unique account Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.AccountID",
              "label": "Account ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Account object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getaccountattachmentbyid_accounts_accountid_attachments_attachmentid_get",
        "name": "Retrieves a specific attachment from a specific account using a unique attachment Id",
        "display": {
          "label": "Retrieves a specific attachment from a specific account using a unique attachment Id",
          "description": "Retrieves a specific attachment from a specific account using a unique attachment Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.AccountID",
              "label": "Account ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Account object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.AttachmentID",
              "label": "Attachment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Attachment object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getaccountattachmentbyfilename_accounts_accountid_attachments_filename_get",
        "name": "Retrieves an attachment for a specific account by filename",
        "display": {
          "label": "Retrieves an attachment for a specific account by filename",
          "description": "Retrieves an attachment for a specific account by filename",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.AccountID",
              "label": "Account ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Account object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateaccountattachmentbyfilename_accounts_accountid_attachments_filename_post",
        "name": "Updates attachment on a specific account by filename",
        "display": {
          "label": "Updates attachment on a specific account by filename",
          "description": "Updates attachment on a specific account by filename",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.AccountID",
              "label": "Account ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Account object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Accounts/{AccountID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createaccountattachmentbyfilename_accounts_accountid_attachments_filename_put",
        "name": "Creates an attachment on a specific account",
        "display": {
          "label": "Creates an attachment on a specific account",
          "description": "Creates an attachment on a specific account",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.AccountID",
              "label": "Account ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Account object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Accounts/{AccountID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbatchpayments_batchpayments_get",
        "name": "Retrieves either one or many batch payments for invoices",
        "display": {
          "label": "Retrieves either one or many batch payments for invoices",
          "description": "Retrieves either one or many batch payments for invoices",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"AUTHORISED\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"AUTHORISED\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Date ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Date ASC",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createbatchpayment_batchpayments_put",
        "name": "Creates one or many batch payments for invoices",
        "display": {
          "label": "Creates one or many batch payments for invoices",
          "description": "Creates one or many batch payments for invoices",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.BatchPayments",
              "label": "Batch Payments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/BatchPayments\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "deletebatchpayment_batchpayments_post",
        "name": "Updates a specific batch payment for invoices and credit notes",
        "display": {
          "label": "Updates a specific batch payment for invoices and credit notes",
          "description": "Updates a specific batch payment for invoices and credit notes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body.BatchPaymentID",
              "label": "Batch Payment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": true,
              "helpText": "The Xero generated unique identifier for the bank transaction (read-only)"
            },
            {
              "key": "body.Status",
              "label": "Status",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "helpText": "The status of the batch payment.",
              "default": "DELETED"
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/BatchPayments\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbatchpayment_batchpayments_batchpaymentid_get",
        "name": "Retrieves a specific batch payment using a unique batch payment Id",
        "display": {
          "label": "Retrieves a specific batch payment using a unique batch payment Id",
          "description": "Retrieves a specific batch payment using a unique batch payment Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BatchPaymentID",
              "label": "Batch Payment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for BatchPayment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "deletebatchpaymentbyurlparam_batchpayments_batchpaymentid_post",
        "name": "Updates a specific batch payment for invoices and credit notes",
        "display": {
          "label": "Updates a specific batch payment for invoices and credit notes",
          "description": "Updates a specific batch payment for invoices and credit notes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BatchPaymentID",
              "label": "Batch Payment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for BatchPayment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.Status",
              "label": "Status",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "helpText": "The status of the batch payment.",
              "default": "DELETED"
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/BatchPayments/{BatchPaymentID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbatchpaymenthistory_batchpayments_batchpaymentid_history_get",
        "name": "Retrieves history from a specific batch payment",
        "display": {
          "label": "Retrieves history from a specific batch payment",
          "description": "Retrieves history from a specific batch payment",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BatchPaymentID",
              "label": "Batch Payment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for BatchPayment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createbatchpaymenthistoryrecord_batchpayments_batchpaymentid_history_put",
        "name": "Creates a history record for a specific batch payment",
        "display": {
          "label": "Creates a history record for a specific batch payment",
          "description": "Creates a history record for a specific batch payment",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BatchPaymentID",
              "label": "Batch Payment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for BatchPayment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/BatchPayments/{BatchPaymentID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbanktransactions_banktransactions_get",
        "name": "Retrieves any spent or received money transactions",
        "display": {
          "label": "Retrieves any spent or received money transactions",
          "description": "Retrieves any spent or received money transactions",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"AUTHORISED\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"AUTHORISED\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Type ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Type ASC",
              "computed": false
            },
            {
              "key": "query.page",
              "label": "Page",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 1",
              "required": false,
              "helpText": "Up to 100 bank transactions will be returned in a single API call with line items details",
              "sample": 1,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createbanktransactions_banktransactions_put",
        "name": "Creates one or more spent or received money transaction",
        "display": {
          "label": "Creates one or more spent or received money transaction",
          "description": "Creates one or more spent or received money transaction",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.BankTransactions",
              "label": "Bank Transactions",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/BankTransactions\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateorcreatebanktransactions_banktransactions_post",
        "name": "Updates or creates one or more spent or received money transaction",
        "display": {
          "label": "Updates or creates one or more spent or received money transaction",
          "description": "Updates or creates one or more spent or received money transaction",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.BankTransactions",
              "label": "Bank Transactions",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/BankTransactions\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbanktransaction_banktransactions_banktransactionid_get",
        "name": "Retrieves a single spent or received money transaction by using a unique bank transaction Id",
        "display": {
          "label": "Retrieves a single spent or received money transaction by using a unique bank transaction Id",
          "description": "Retrieves a single spent or received money transaction by using a unique bank transaction Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransactionID",
              "label": "Bank Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatebanktransaction_banktransactions_banktransactionid_post",
        "name": "Updates a single spent or received money transaction",
        "display": {
          "label": "Updates a single spent or received money transaction",
          "description": "Updates a single spent or received money transaction",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransactionID",
              "label": "Bank Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.BankTransactions",
              "label": "Bank Transactions",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/BankTransactions/{BankTransactionID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbanktransactionattachments_banktransactions_banktransactionid_attachments_get",
        "name": "Retrieves any attachments from a specific bank transactions",
        "display": {
          "label": "Retrieves any attachments from a specific bank transactions",
          "description": "Retrieves any attachments from a specific bank transactions",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransactionID",
              "label": "Bank Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbanktransactionattachmentbyid_banktransactions_banktransactionid_attachments_attachmentid_get",
        "name": "Retrieves specific attachments from a specific BankTransaction using a unique attachment Id",
        "display": {
          "label": "Retrieves specific attachments from a specific BankTransaction using a unique attachment Id",
          "description": "Retrieves specific attachments from a specific BankTransaction using a unique attachment Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransactionID",
              "label": "Bank Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.AttachmentID",
              "label": "Attachment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Attachment object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbanktransactionattachmentbyfilename_banktransactions_banktransactionid_attachments_filename_get",
        "name": "Retrieves a specific attachment from a specific bank transaction by filename",
        "display": {
          "label": "Retrieves a specific attachment from a specific bank transaction by filename",
          "description": "Retrieves a specific attachment from a specific bank transaction by filename",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransactionID",
              "label": "Bank Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatebanktransactionattachmentbyfilename_banktransactions_banktransactionid_attachments_filename_post",
        "name": "Updates a specific attachment from a specific bank transaction by filename",
        "display": {
          "label": "Updates a specific attachment from a specific bank transaction by filename",
          "description": "Updates a specific attachment from a specific bank transaction by filename",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransactionID",
              "label": "Bank Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/BankTransactions/{BankTransactionID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createbanktransactionattachmentbyfilename_banktransactions_banktransactionid_attachments_filename_put",
        "name": "Creates an attachment for a specific bank transaction by filename",
        "display": {
          "label": "Creates an attachment for a specific bank transaction by filename",
          "description": "Creates an attachment for a specific bank transaction by filename",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransactionID",
              "label": "Bank Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/BankTransactions/{BankTransactionID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbanktransactionshistory_banktransactions_banktransactionid_history_get",
        "name": "Retrieves history from a specific bank transaction using a unique bank transaction Id",
        "display": {
          "label": "Retrieves history from a specific bank transaction using a unique bank transaction Id",
          "description": "Retrieves history from a specific bank transaction using a unique bank transaction Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransactionID",
              "label": "Bank Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createbanktransactionhistoryrecord_banktransactions_banktransactionid_history_put",
        "name": "Creates a history record for a specific bank transactions",
        "display": {
          "label": "Creates a history record for a specific bank transactions",
          "description": "Creates a history record for a specific bank transactions",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransactionID",
              "label": "Bank Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/BankTransactions/{BankTransactionID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbanktransfers_banktransfers_get",
        "name": "Retrieves all bank transfers",
        "display": {
          "label": "Retrieves all bank transfers",
          "description": "Retrieves all bank transfers",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: HasAttachments==true",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "HasAttachments==true",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Amount ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Amount ASC",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createbanktransfer_banktransfers_put",
        "name": "Creates a bank transfer",
        "display": {
          "label": "Creates a bank transfer",
          "description": "Creates a bank transfer",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body.BankTransfers",
              "label": "Bank Transfers",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/BankTransfers\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbanktransfer_banktransfers_banktransferid_get",
        "name": "Retrieves specific bank transfers by using a unique bank transfer Id",
        "display": {
          "label": "Retrieves specific bank transfers by using a unique bank transfer Id",
          "description": "Retrieves specific bank transfers by using a unique bank transfer Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransferID",
              "label": "Bank Transfer ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transfer",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbanktransferattachments_banktransfers_banktransferid_attachments_get",
        "name": "Retrieves attachments from a specific bank transfer",
        "display": {
          "label": "Retrieves attachments from a specific bank transfer",
          "description": "Retrieves attachments from a specific bank transfer",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransferID",
              "label": "Bank Transfer ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transfer",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbanktransferattachmentbyid_banktransfers_banktransferid_attachments_attachmentid_get",
        "name": "Retrieves a specific attachment from a specific bank transfer using a unique attachment ID",
        "display": {
          "label": "Retrieves a specific attachment from a specific bank transfer using a unique attachment ID",
          "description": "Retrieves a specific attachment from a specific bank transfer using a unique attachment ID",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransferID",
              "label": "Bank Transfer ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transfer",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.AttachmentID",
              "label": "Attachment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Attachment object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbanktransferattachmentbyfilename_banktransfers_banktransferid_attachments_filename_get",
        "name": "Retrieves a specific attachment on a specific bank transfer by file name",
        "display": {
          "label": "Retrieves a specific attachment on a specific bank transfer by file name",
          "description": "Retrieves a specific attachment on a specific bank transfer by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransferID",
              "label": "Bank Transfer ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transfer",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatebanktransferattachmentbyfilename_banktransfers_banktransferid_attachments_filename_post",
        "name": "post /BankTransfers/{BankTransferID}/Attachments/{FileName}",
        "display": {
          "label": "post /BankTransfers/{BankTransferID}/Attachments/{FileName}",
          "description": "post /BankTransfers/{BankTransferID}/Attachments/{FileName}",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransferID",
              "label": "Bank Transfer ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transfer",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/BankTransfers/{BankTransferID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createbanktransferattachmentbyfilename_banktransfers_banktransferid_attachments_filename_put",
        "name": "put /BankTransfers/{BankTransferID}/Attachments/{FileName}",
        "display": {
          "label": "put /BankTransfers/{BankTransferID}/Attachments/{FileName}",
          "description": "put /BankTransfers/{BankTransferID}/Attachments/{FileName}",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransferID",
              "label": "Bank Transfer ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transfer",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/BankTransfers/{BankTransferID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbanktransferhistory_banktransfers_banktransferid_history_get",
        "name": "Retrieves history from a specific bank transfer using a unique bank transfer Id",
        "display": {
          "label": "Retrieves history from a specific bank transfer using a unique bank transfer Id",
          "description": "Retrieves history from a specific bank transfer using a unique bank transfer Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransferID",
              "label": "Bank Transfer ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transfer",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createbanktransferhistoryrecord_banktransfers_banktransferid_history_put",
        "name": "Creates a history record for a specific bank transfer",
        "display": {
          "label": "Creates a history record for a specific bank transfer",
          "description": "Creates a history record for a specific bank transfer",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BankTransferID",
              "label": "Bank Transfer ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Xero generated unique identifier for a bank transfer",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/BankTransfers/{BankTransferID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbrandingthemes_brandingthemes_get",
        "name": "Retrieves all the branding themes",
        "display": {
          "label": "Retrieves all the branding themes",
          "description": "Retrieves all the branding themes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbrandingtheme_brandingthemes_brandingthemeid_get",
        "name": "Retrieves a specific branding theme using a unique branding theme Id",
        "display": {
          "label": "Retrieves a specific branding theme using a unique branding theme Id",
          "description": "Retrieves a specific branding theme using a unique branding theme Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BrandingThemeID",
              "label": "Branding Theme ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Branding Theme",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbrandingthemepaymentservices_brandingthemes_brandingthemeid_paymentservices_get",
        "name": "Retrieves the payment services for a specific branding theme",
        "display": {
          "label": "Retrieves the payment services for a specific branding theme",
          "description": "Retrieves the payment services for a specific branding theme",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BrandingThemeID",
              "label": "Branding Theme ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Branding Theme",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createbrandingthemepaymentservices_brandingthemes_brandingthemeid_paymentservices_post",
        "name": "Creates a new custom payment service for a specific branding theme",
        "display": {
          "label": "Creates a new custom payment service for a specific branding theme",
          "description": "Creates a new custom payment service for a specific branding theme",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BrandingThemeID",
              "label": "Branding Theme ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Branding Theme",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.PaymentServices",
              "label": "Payment Services",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/BrandingThemes/{BrandingThemeID}/PaymentServices\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbudgets_budgets_get",
        "name": "Retrieve a list of budgets",
        "display": {
          "label": "Retrieve a list of budgets",
          "description": "Retrieve a list of budgets",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.IDs",
              "label": "IDs",
              "type": "string",
              "validation": {},
              "placeholder": "Example: &quot;00000000-0000-0000-0000-000000000000&quot;",
              "required": false,
              "helpText": "Filter by BudgetID. Allows you to retrieve a specific individual budget.",
              "sample": "&quot;00000000-0000-0000-0000-000000000000&quot;",
              "computed": false
            },
            {
              "key": "query.DateTo",
              "label": "Date To",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "Filter by start date",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.DateFrom",
              "label": "Date From",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "Filter by end date",
              "sample": "2019-10-31",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getbudget_budgets_budgetid_get",
        "name": "Retrieves a specific budget, which includes budget lines",
        "display": {
          "label": "Retrieves a specific budget, which includes budget lines",
          "description": "Retrieves a specific budget, which includes budget lines",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.BudgetID",
              "label": "Budget ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Budgets",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.DateTo",
              "label": "Date To",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "Filter by start date",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.DateFrom",
              "label": "Date From",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "Filter by end date",
              "sample": "2019-10-31",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcontacts_contacts_get",
        "name": "Retrieves all contacts in a Xero organisation",
        "display": {
          "label": "Retrieves all contacts in a Xero organisation",
          "description": "Retrieves all contacts in a Xero organisation",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: ContactStatus==&quot;ACTIVE&quot;",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "ContactStatus==&quot;ACTIVE&quot;",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Name ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Name ASC",
              "computed": false
            },
            {
              "key": "query.IDs",
              "label": "IDs",
              "type": "string",
              "validation": {},
              "placeholder": "Example: &quot;00000000-0000-0000-0000-000000000000&quot;",
              "required": false,
              "helpText": "Filter by a comma separated list of ContactIDs. Allows you to retrieve a specific set of contacts in a single call.",
              "sample": "&quot;00000000-0000-0000-0000-000000000000&quot;",
              "computed": false
            },
            {
              "key": "query.page",
              "label": "Page",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 1",
              "required": false,
              "helpText": "e.g. page=1 - Up to 100 contacts will be returned in a single API call.",
              "sample": 1,
              "computed": false
            },
            {
              "key": "query.includeArchived",
              "label": "Include Archived",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "e.g. includeArchived=true - Contacts with a status of ARCHIVED will be included in the response",
              "sample": true,
              "computed": false
            },
            {
              "key": "query.summaryOnly",
              "label": "Summary Only",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "Use summaryOnly=true in GET Contacts and Invoices endpoint to retrieve a smaller version of the response object. This returns only lightweight fields, excluding computation-heavy fields from the response, making the API calls quick and efficient.",
              "sample": true,
              "computed": false
            },
            {
              "key": "query.searchTerm",
              "label": "Search Term",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Joe Bloggs",
              "required": false,
              "helpText": "Search parameter that performs a case-insensitive text search across the Name, FirstName, LastName, ContactNumber and EmailAddress fields.",
              "sample": "Joe Bloggs",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createcontacts_contacts_put",
        "name": "Creates multiple contacts (bulk) in a Xero organisation",
        "display": {
          "label": "Creates multiple contacts (bulk) in a Xero organisation",
          "description": "Creates multiple contacts (bulk) in a Xero organisation",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.Contacts",
              "label": "Contacts",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Contacts\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateorcreatecontacts_contacts_post",
        "name": "Updates or creates one or more contacts in a Xero organisation",
        "display": {
          "label": "Updates or creates one or more contacts in a Xero organisation",
          "description": "Updates or creates one or more contacts in a Xero organisation",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.Contacts",
              "label": "Contacts",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Contacts\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcontactbycontactnumber_contacts_contactnumber_get",
        "name": "Retrieves a specific contact by contact number in a Xero organisation",
        "display": {
          "label": "Retrieves a specific contact by contact number in a Xero organisation",
          "description": "Retrieves a specific contact by contact number in a Xero organisation",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactNumber",
              "label": "Contact Number",
              "type": "string",
              "validation": {},
              "placeholder": "Example: SB2",
              "required": true,
              "helpText": "This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50).",
              "sample": "SB2",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcontact_contacts_contactid_get",
        "name": "Retrieves a specific contacts in a Xero organisation using a unique contact Id",
        "display": {
          "label": "Retrieves a specific contacts in a Xero organisation using a unique contact Id",
          "description": "Retrieves a specific contacts in a Xero organisation using a unique contact Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatecontact_contacts_contactid_post",
        "name": "Updates a specific contact in a Xero organisation",
        "display": {
          "label": "Updates a specific contact in a Xero organisation",
          "description": "Updates a specific contact in a Xero organisation",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.Contacts",
              "label": "Contacts",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Contacts/{ContactID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcontactattachments_contacts_contactid_attachments_get",
        "name": "Retrieves attachments for a specific contact in a Xero organisation",
        "display": {
          "label": "Retrieves attachments for a specific contact in a Xero organisation",
          "description": "Retrieves attachments for a specific contact in a Xero organisation",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcontactattachmentbyid_contacts_contactid_attachments_attachmentid_get",
        "name": "Retrieves a specific attachment from a specific contact using a unique attachment Id",
        "display": {
          "label": "Retrieves a specific attachment from a specific contact using a unique attachment Id",
          "description": "Retrieves a specific attachment from a specific contact using a unique attachment Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.AttachmentID",
              "label": "Attachment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Attachment object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcontactattachmentbyfilename_contacts_contactid_attachments_filename_get",
        "name": "Retrieves a specific attachment from a specific contact by file name",
        "display": {
          "label": "Retrieves a specific attachment from a specific contact by file name",
          "description": "Retrieves a specific attachment from a specific contact by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatecontactattachmentbyfilename_contacts_contactid_attachments_filename_post",
        "name": "post /Contacts/{ContactID}/Attachments/{FileName}",
        "display": {
          "label": "post /Contacts/{ContactID}/Attachments/{FileName}",
          "description": "post /Contacts/{ContactID}/Attachments/{FileName}",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Contacts/{ContactID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createcontactattachmentbyfilename_contacts_contactid_attachments_filename_put",
        "name": "put /Contacts/{ContactID}/Attachments/{FileName}",
        "display": {
          "label": "put /Contacts/{ContactID}/Attachments/{FileName}",
          "description": "put /Contacts/{ContactID}/Attachments/{FileName}",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Contacts/{ContactID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcontactcissettings_contacts_contactid_cissettings_get",
        "name": "Retrieves CIS settings for a specific contact in a Xero organisation",
        "display": {
          "label": "Retrieves CIS settings for a specific contact in a Xero organisation",
          "description": "Retrieves CIS settings for a specific contact in a Xero organisation",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcontacthistory_contacts_contactid_history_get",
        "name": "Retrieves history records for a specific contact",
        "display": {
          "label": "Retrieves history records for a specific contact",
          "description": "Retrieves history records for a specific contact",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createcontacthistory_contacts_contactid_history_put",
        "name": "Creates a new history record for a specific contact",
        "display": {
          "label": "Creates a new history record for a specific contact",
          "description": "Creates a new history record for a specific contact",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Contacts/{ContactID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcontactgroups_contactgroups_get",
        "name": "Retrieves the contact Id and name of each contact group",
        "display": {
          "label": "Retrieves the contact Id and name of each contact group",
          "description": "Retrieves the contact Id and name of each contact group",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"ACTIVE\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"ACTIVE\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Name ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Name ASC",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createcontactgroup_contactgroups_put",
        "name": "Creates a contact group",
        "display": {
          "label": "Creates a contact group",
          "description": "Creates a contact group",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body.ContactGroups",
              "label": "Contact Groups",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/ContactGroups\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcontactgroup_contactgroups_contactgroupid_get",
        "name": "Retrieves a specific contact group by using a unique contact group Id",
        "display": {
          "label": "Retrieves a specific contact group by using a unique contact group Id",
          "description": "Retrieves a specific contact group by using a unique contact group Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactGroupID",
              "label": "Contact Group ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact Group",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatecontactgroup_contactgroups_contactgroupid_post",
        "name": "Updates a specific contact group",
        "display": {
          "label": "Updates a specific contact group",
          "description": "Updates a specific contact group",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactGroupID",
              "label": "Contact Group ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact Group",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.ContactGroups",
              "label": "Contact Groups",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/ContactGroups/{ContactGroupID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createcontactgroupcontacts_contactgroups_contactgroupid_contacts_put",
        "name": "Creates contacts to a specific contact group",
        "display": {
          "label": "Creates contacts to a specific contact group",
          "description": "Creates contacts to a specific contact group",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactGroupID",
              "label": "Contact Group ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact Group",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.Contacts",
              "label": "Contacts",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/ContactGroups/{ContactGroupID}/Contacts\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "deletecontactgroupcontacts_contactgroups_contactgroupid_contacts_delete",
        "name": "Deletes all contacts from a specific contact group",
        "display": {
          "label": "Deletes all contacts from a specific contact group",
          "description": "Deletes all contacts from a specific contact group",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactGroupID",
              "label": "Contact Group ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact Group",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "deletecontactgroupcontact_contactgroups_contactgroupid_contacts_contactid_delete",
        "name": "Deletes a specific contact from a contact group using a unique contact Id",
        "display": {
          "label": "Deletes a specific contact from a contact group using a unique contact Id",
          "description": "Deletes a specific contact from a contact group using a unique contact Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ContactGroupID",
              "label": "Contact Group ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact Group",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcreditnotes_creditnotes_get",
        "name": "Retrieves any credit notes",
        "display": {
          "label": "Retrieves any credit notes",
          "description": "Retrieves any credit notes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"DRAFT\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"DRAFT\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: CreditNoteNumber ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "CreditNoteNumber ASC",
              "computed": false
            },
            {
              "key": "query.page",
              "label": "Page",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 1",
              "required": false,
              "helpText": "e.g. page=1 – Up to 100 credit notes will be returned in a single API call with line items shown for each credit note",
              "sample": 1,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createcreditnotes_creditnotes_put",
        "name": "Creates a new credit note",
        "display": {
          "label": "Creates a new credit note",
          "description": "Creates a new credit note",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.CreditNotes",
              "label": "Credit Notes",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/CreditNotes\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateorcreatecreditnotes_creditnotes_post",
        "name": "Updates or creates one or more credit notes",
        "display": {
          "label": "Updates or creates one or more credit notes",
          "description": "Updates or creates one or more credit notes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.CreditNotes",
              "label": "Credit Notes",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/CreditNotes\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcreditnote_creditnotes_creditnoteid_get",
        "name": "Retrieves a specific credit note using a unique credit note Id",
        "display": {
          "label": "Retrieves a specific credit note using a unique credit note Id",
          "description": "Retrieves a specific credit note using a unique credit note Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.CreditNoteID",
              "label": "Credit Note ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Credit Note",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatecreditnote_creditnotes_creditnoteid_post",
        "name": "Updates a specific credit note",
        "display": {
          "label": "Updates a specific credit note",
          "description": "Updates a specific credit note",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.CreditNoteID",
              "label": "Credit Note ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Credit Note",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.CreditNotes",
              "label": "Credit Notes",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/CreditNotes/{CreditNoteID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcreditnoteattachments_creditnotes_creditnoteid_attachments_get",
        "name": "Retrieves attachments for a specific credit notes",
        "display": {
          "label": "Retrieves attachments for a specific credit notes",
          "description": "Retrieves attachments for a specific credit notes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.CreditNoteID",
              "label": "Credit Note ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Credit Note",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcreditnoteattachmentbyid_creditnotes_creditnoteid_attachments_attachmentid_get",
        "name": "Retrieves a specific attachment from a specific credit note using a unique attachment Id",
        "display": {
          "label": "Retrieves a specific attachment from a specific credit note using a unique attachment Id",
          "description": "Retrieves a specific attachment from a specific credit note using a unique attachment Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.CreditNoteID",
              "label": "Credit Note ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Credit Note",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.AttachmentID",
              "label": "Attachment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Attachment object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcreditnoteattachmentbyfilename_creditnotes_creditnoteid_attachments_filename_get",
        "name": "Retrieves a specific attachment on a specific credit note by file name",
        "display": {
          "label": "Retrieves a specific attachment on a specific credit note by file name",
          "description": "Retrieves a specific attachment on a specific credit note by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.CreditNoteID",
              "label": "Credit Note ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Credit Note",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatecreditnoteattachmentbyfilename_creditnotes_creditnoteid_attachments_filename_post",
        "name": "Updates attachments on a specific credit note by file name",
        "display": {
          "label": "Updates attachments on a specific credit note by file name",
          "description": "Updates attachments on a specific credit note by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.CreditNoteID",
              "label": "Credit Note ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Credit Note",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/CreditNotes/{CreditNoteID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createcreditnoteattachmentbyfilename_creditnotes_creditnoteid_attachments_filename_put",
        "name": "Creates an attachment for a specific credit note",
        "display": {
          "label": "Creates an attachment for a specific credit note",
          "description": "Creates an attachment for a specific credit note",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.CreditNoteID",
              "label": "Credit Note ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Credit Note",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "query.IncludeOnline",
              "label": "Include Online",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "Allows an attachment to be seen by the end customer within their online invoice",
              "sample": true,
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/CreditNotes/{CreditNoteID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcreditnoteaspdf_creditnotes_creditnoteid_pdf_get",
        "name": "Retrieves credit notes as PDF files",
        "display": {
          "label": "Retrieves credit notes as PDF files",
          "description": "Retrieves credit notes as PDF files",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.CreditNoteID",
              "label": "Credit Note ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Credit Note",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createcreditnoteallocation_creditnotes_creditnoteid_allocations_put",
        "name": "Creates allocation for a specific credit note",
        "display": {
          "label": "Creates allocation for a specific credit note",
          "description": "Creates allocation for a specific credit note",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.CreditNoteID",
              "label": "Credit Note ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Credit Note",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.Allocations",
              "label": "Allocations",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/CreditNotes/{CreditNoteID}/Allocations\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcreditnotehistory_creditnotes_creditnoteid_history_get",
        "name": "Retrieves history records of a specific credit note",
        "display": {
          "label": "Retrieves history records of a specific credit note",
          "description": "Retrieves history records of a specific credit note",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.CreditNoteID",
              "label": "Credit Note ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Credit Note",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createcreditnotehistory_creditnotes_creditnoteid_history_put",
        "name": "Retrieves history records of a specific credit note",
        "display": {
          "label": "Retrieves history records of a specific credit note",
          "description": "Retrieves history records of a specific credit note",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.CreditNoteID",
              "label": "Credit Note ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Credit Note",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/CreditNotes/{CreditNoteID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getcurrencies_currencies_get",
        "name": "Retrieves currencies for your Xero organisation",
        "display": {
          "label": "Retrieves currencies for your Xero organisation",
          "description": "Retrieves currencies for your Xero organisation",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Code==\"USD\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Code==\"USD\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Code ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Code ASC",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createcurrency_currencies_put",
        "name": "Create a new currency for a Xero organisation",
        "display": {
          "label": "Create a new currency for a Xero organisation",
          "description": "Create a new currency for a Xero organisation",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body.Code",
              "label": "Code",
              "type": "string",
              "validation": {
                "values": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BYR",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EEK",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LTL",
                  "LVL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SKK",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "STD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "3 letter alpha code for the currency – see list of currency codes",
              "choices": [
                {
                  "value": "AED",
                  "label": "AED",
                  "sample": "AED"
                },
                {
                  "value": "AFN",
                  "label": "AFN",
                  "sample": "AFN"
                },
                {
                  "value": "ALL",
                  "label": "ALL",
                  "sample": "ALL"
                },
                {
                  "value": "AMD",
                  "label": "AMD",
                  "sample": "AMD"
                },
                {
                  "value": "ANG",
                  "label": "ANG",
                  "sample": "ANG"
                },
                {
                  "value": "AOA",
                  "label": "AOA",
                  "sample": "AOA"
                },
                {
                  "value": "ARS",
                  "label": "ARS",
                  "sample": "ARS"
                },
                {
                  "value": "AUD",
                  "label": "AUD",
                  "sample": "AUD"
                },
                {
                  "value": "AWG",
                  "label": "AWG",
                  "sample": "AWG"
                },
                {
                  "value": "AZN",
                  "label": "AZN",
                  "sample": "AZN"
                },
                {
                  "value": "BAM",
                  "label": "BAM",
                  "sample": "BAM"
                },
                {
                  "value": "BBD",
                  "label": "BBD",
                  "sample": "BBD"
                },
                {
                  "value": "BDT",
                  "label": "BDT",
                  "sample": "BDT"
                },
                {
                  "value": "BGN",
                  "label": "BGN",
                  "sample": "BGN"
                },
                {
                  "value": "BHD",
                  "label": "BHD",
                  "sample": "BHD"
                },
                {
                  "value": "BIF",
                  "label": "BIF",
                  "sample": "BIF"
                },
                {
                  "value": "BMD",
                  "label": "BMD",
                  "sample": "BMD"
                },
                {
                  "value": "BND",
                  "label": "BND",
                  "sample": "BND"
                },
                {
                  "value": "BOB",
                  "label": "BOB",
                  "sample": "BOB"
                },
                {
                  "value": "BRL",
                  "label": "BRL",
                  "sample": "BRL"
                },
                {
                  "value": "BSD",
                  "label": "BSD",
                  "sample": "BSD"
                },
                {
                  "value": "BTN",
                  "label": "BTN",
                  "sample": "BTN"
                },
                {
                  "value": "BWP",
                  "label": "BWP",
                  "sample": "BWP"
                },
                {
                  "value": "BYN",
                  "label": "BYN",
                  "sample": "BYN"
                },
                {
                  "value": "BYR",
                  "label": "BYR",
                  "sample": "BYR"
                },
                {
                  "value": "BZD",
                  "label": "BZD",
                  "sample": "BZD"
                },
                {
                  "value": "CAD",
                  "label": "CAD",
                  "sample": "CAD"
                },
                {
                  "value": "CDF",
                  "label": "CDF",
                  "sample": "CDF"
                },
                {
                  "value": "CHF",
                  "label": "CHF",
                  "sample": "CHF"
                },
                {
                  "value": "CLF",
                  "label": "CLF",
                  "sample": "CLF"
                },
                {
                  "value": "CLP",
                  "label": "CLP",
                  "sample": "CLP"
                },
                {
                  "value": "CNY",
                  "label": "CNY",
                  "sample": "CNY"
                },
                {
                  "value": "COP",
                  "label": "COP",
                  "sample": "COP"
                },
                {
                  "value": "CRC",
                  "label": "CRC",
                  "sample": "CRC"
                },
                {
                  "value": "CUC",
                  "label": "CUC",
                  "sample": "CUC"
                },
                {
                  "value": "CUP",
                  "label": "CUP",
                  "sample": "CUP"
                },
                {
                  "value": "CVE",
                  "label": "CVE",
                  "sample": "CVE"
                },
                {
                  "value": "CZK",
                  "label": "CZK",
                  "sample": "CZK"
                },
                {
                  "value": "DJF",
                  "label": "DJF",
                  "sample": "DJF"
                },
                {
                  "value": "DKK",
                  "label": "DKK",
                  "sample": "DKK"
                },
                {
                  "value": "DOP",
                  "label": "DOP",
                  "sample": "DOP"
                },
                {
                  "value": "DZD",
                  "label": "DZD",
                  "sample": "DZD"
                },
                {
                  "value": "EEK",
                  "label": "EEK",
                  "sample": "EEK"
                },
                {
                  "value": "EGP",
                  "label": "EGP",
                  "sample": "EGP"
                },
                {
                  "value": "ERN",
                  "label": "ERN",
                  "sample": "ERN"
                },
                {
                  "value": "ETB",
                  "label": "ETB",
                  "sample": "ETB"
                },
                {
                  "value": "EUR",
                  "label": "EUR",
                  "sample": "EUR"
                },
                {
                  "value": "FJD",
                  "label": "FJD",
                  "sample": "FJD"
                },
                {
                  "value": "FKP",
                  "label": "FKP",
                  "sample": "FKP"
                },
                {
                  "value": "GBP",
                  "label": "GBP",
                  "sample": "GBP"
                },
                {
                  "value": "GEL",
                  "label": "GEL",
                  "sample": "GEL"
                },
                {
                  "value": "GHS",
                  "label": "GHS",
                  "sample": "GHS"
                },
                {
                  "value": "GIP",
                  "label": "GIP",
                  "sample": "GIP"
                },
                {
                  "value": "GMD",
                  "label": "GMD",
                  "sample": "GMD"
                },
                {
                  "value": "GNF",
                  "label": "GNF",
                  "sample": "GNF"
                },
                {
                  "value": "GTQ",
                  "label": "GTQ",
                  "sample": "GTQ"
                },
                {
                  "value": "GYD",
                  "label": "GYD",
                  "sample": "GYD"
                },
                {
                  "value": "HKD",
                  "label": "HKD",
                  "sample": "HKD"
                },
                {
                  "value": "HNL",
                  "label": "HNL",
                  "sample": "HNL"
                },
                {
                  "value": "HRK",
                  "label": "HRK",
                  "sample": "HRK"
                },
                {
                  "value": "HTG",
                  "label": "HTG",
                  "sample": "HTG"
                },
                {
                  "value": "HUF",
                  "label": "HUF",
                  "sample": "HUF"
                },
                {
                  "value": "IDR",
                  "label": "IDR",
                  "sample": "IDR"
                },
                {
                  "value": "ILS",
                  "label": "ILS",
                  "sample": "ILS"
                },
                {
                  "value": "INR",
                  "label": "INR",
                  "sample": "INR"
                },
                {
                  "value": "IQD",
                  "label": "IQD",
                  "sample": "IQD"
                },
                {
                  "value": "IRR",
                  "label": "IRR",
                  "sample": "IRR"
                },
                {
                  "value": "ISK",
                  "label": "ISK",
                  "sample": "ISK"
                },
                {
                  "value": "JMD",
                  "label": "JMD",
                  "sample": "JMD"
                },
                {
                  "value": "JOD",
                  "label": "JOD",
                  "sample": "JOD"
                },
                {
                  "value": "JPY",
                  "label": "JPY",
                  "sample": "JPY"
                },
                {
                  "value": "KES",
                  "label": "KES",
                  "sample": "KES"
                },
                {
                  "value": "KGS",
                  "label": "KGS",
                  "sample": "KGS"
                },
                {
                  "value": "KHR",
                  "label": "KHR",
                  "sample": "KHR"
                },
                {
                  "value": "KMF",
                  "label": "KMF",
                  "sample": "KMF"
                },
                {
                  "value": "KPW",
                  "label": "KPW",
                  "sample": "KPW"
                },
                {
                  "value": "KRW",
                  "label": "KRW",
                  "sample": "KRW"
                },
                {
                  "value": "KWD",
                  "label": "KWD",
                  "sample": "KWD"
                },
                {
                  "value": "KYD",
                  "label": "KYD",
                  "sample": "KYD"
                },
                {
                  "value": "KZT",
                  "label": "KZT",
                  "sample": "KZT"
                },
                {
                  "value": "LAK",
                  "label": "LAK",
                  "sample": "LAK"
                },
                {
                  "value": "LBP",
                  "label": "LBP",
                  "sample": "LBP"
                },
                {
                  "value": "LKR",
                  "label": "LKR",
                  "sample": "LKR"
                },
                {
                  "value": "LRD",
                  "label": "LRD",
                  "sample": "LRD"
                },
                {
                  "value": "LSL",
                  "label": "LSL",
                  "sample": "LSL"
                },
                {
                  "value": "LTL",
                  "label": "LTL",
                  "sample": "LTL"
                },
                {
                  "value": "LVL",
                  "label": "LVL",
                  "sample": "LVL"
                },
                {
                  "value": "LYD",
                  "label": "LYD",
                  "sample": "LYD"
                },
                {
                  "value": "MAD",
                  "label": "MAD",
                  "sample": "MAD"
                },
                {
                  "value": "MDL",
                  "label": "MDL",
                  "sample": "MDL"
                },
                {
                  "value": "MGA",
                  "label": "MGA",
                  "sample": "MGA"
                },
                {
                  "value": "MKD",
                  "label": "MKD",
                  "sample": "MKD"
                },
                {
                  "value": "MMK",
                  "label": "MMK",
                  "sample": "MMK"
                },
                {
                  "value": "MNT",
                  "label": "MNT",
                  "sample": "MNT"
                },
                {
                  "value": "MOP",
                  "label": "MOP",
                  "sample": "MOP"
                },
                {
                  "value": "MRO",
                  "label": "MRO",
                  "sample": "MRO"
                },
                {
                  "value": "MRU",
                  "label": "MRU",
                  "sample": "MRU"
                },
                {
                  "value": "MUR",
                  "label": "MUR",
                  "sample": "MUR"
                },
                {
                  "value": "MVR",
                  "label": "MVR",
                  "sample": "MVR"
                },
                {
                  "value": "MWK",
                  "label": "MWK",
                  "sample": "MWK"
                },
                {
                  "value": "MXN",
                  "label": "MXN",
                  "sample": "MXN"
                },
                {
                  "value": "MXV",
                  "label": "MXV",
                  "sample": "MXV"
                },
                {
                  "value": "MYR",
                  "label": "MYR",
                  "sample": "MYR"
                },
                {
                  "value": "MZN",
                  "label": "MZN",
                  "sample": "MZN"
                },
                {
                  "value": "NAD",
                  "label": "NAD",
                  "sample": "NAD"
                },
                {
                  "value": "NGN",
                  "label": "NGN",
                  "sample": "NGN"
                },
                {
                  "value": "NIO",
                  "label": "NIO",
                  "sample": "NIO"
                },
                {
                  "value": "NOK",
                  "label": "NOK",
                  "sample": "NOK"
                },
                {
                  "value": "NPR",
                  "label": "NPR",
                  "sample": "NPR"
                },
                {
                  "value": "NZD",
                  "label": "NZD",
                  "sample": "NZD"
                },
                {
                  "value": "OMR",
                  "label": "OMR",
                  "sample": "OMR"
                },
                {
                  "value": "PAB",
                  "label": "PAB",
                  "sample": "PAB"
                },
                {
                  "value": "PEN",
                  "label": "PEN",
                  "sample": "PEN"
                },
                {
                  "value": "PGK",
                  "label": "PGK",
                  "sample": "PGK"
                },
                {
                  "value": "PHP",
                  "label": "PHP",
                  "sample": "PHP"
                },
                {
                  "value": "PKR",
                  "label": "PKR",
                  "sample": "PKR"
                },
                {
                  "value": "PLN",
                  "label": "PLN",
                  "sample": "PLN"
                },
                {
                  "value": "PYG",
                  "label": "PYG",
                  "sample": "PYG"
                },
                {
                  "value": "QAR",
                  "label": "QAR",
                  "sample": "QAR"
                },
                {
                  "value": "RON",
                  "label": "RON",
                  "sample": "RON"
                },
                {
                  "value": "RSD",
                  "label": "RSD",
                  "sample": "RSD"
                },
                {
                  "value": "RUB",
                  "label": "RUB",
                  "sample": "RUB"
                },
                {
                  "value": "RWF",
                  "label": "RWF",
                  "sample": "RWF"
                },
                {
                  "value": "SAR",
                  "label": "SAR",
                  "sample": "SAR"
                },
                {
                  "value": "SBD",
                  "label": "SBD",
                  "sample": "SBD"
                },
                {
                  "value": "SCR",
                  "label": "SCR",
                  "sample": "SCR"
                },
                {
                  "value": "SDG",
                  "label": "SDG",
                  "sample": "SDG"
                },
                {
                  "value": "SEK",
                  "label": "SEK",
                  "sample": "SEK"
                },
                {
                  "value": "SGD",
                  "label": "SGD",
                  "sample": "SGD"
                },
                {
                  "value": "SHP",
                  "label": "SHP",
                  "sample": "SHP"
                },
                {
                  "value": "SKK",
                  "label": "SKK",
                  "sample": "SKK"
                },
                {
                  "value": "SLE",
                  "label": "SLE",
                  "sample": "SLE"
                },
                {
                  "value": "SLL",
                  "label": "SLL",
                  "sample": "SLL"
                },
                {
                  "value": "SOS",
                  "label": "SOS",
                  "sample": "SOS"
                },
                {
                  "value": "SRD",
                  "label": "SRD",
                  "sample": "SRD"
                },
                {
                  "value": "STD",
                  "label": "STD",
                  "sample": "STD"
                },
                {
                  "value": "STN",
                  "label": "STN",
                  "sample": "STN"
                },
                {
                  "value": "SVC",
                  "label": "SVC",
                  "sample": "SVC"
                },
                {
                  "value": "SYP",
                  "label": "SYP",
                  "sample": "SYP"
                },
                {
                  "value": "SZL",
                  "label": "SZL",
                  "sample": "SZL"
                },
                {
                  "value": "THB",
                  "label": "THB",
                  "sample": "THB"
                },
                {
                  "value": "TJS",
                  "label": "TJS",
                  "sample": "TJS"
                },
                {
                  "value": "TMT",
                  "label": "TMT",
                  "sample": "TMT"
                },
                {
                  "value": "TND",
                  "label": "TND",
                  "sample": "TND"
                },
                {
                  "value": "TOP",
                  "label": "TOP",
                  "sample": "TOP"
                },
                {
                  "value": "TRY",
                  "label": "TRY",
                  "sample": "TRY"
                },
                {
                  "value": "TTD",
                  "label": "TTD",
                  "sample": "TTD"
                },
                {
                  "value": "TWD",
                  "label": "TWD",
                  "sample": "TWD"
                },
                {
                  "value": "TZS",
                  "label": "TZS",
                  "sample": "TZS"
                },
                {
                  "value": "UAH",
                  "label": "UAH",
                  "sample": "UAH"
                },
                {
                  "value": "UGX",
                  "label": "UGX",
                  "sample": "UGX"
                },
                {
                  "value": "USD",
                  "label": "USD",
                  "sample": "USD"
                },
                {
                  "value": "UYU",
                  "label": "UYU",
                  "sample": "UYU"
                },
                {
                  "value": "UZS",
                  "label": "UZS",
                  "sample": "UZS"
                },
                {
                  "value": "VEF",
                  "label": "VEF",
                  "sample": "VEF"
                },
                {
                  "value": "VES",
                  "label": "VES",
                  "sample": "VES"
                },
                {
                  "value": "VND",
                  "label": "VND",
                  "sample": "VND"
                },
                {
                  "value": "VUV",
                  "label": "VUV",
                  "sample": "VUV"
                },
                {
                  "value": "WST",
                  "label": "WST",
                  "sample": "WST"
                },
                {
                  "value": "XAF",
                  "label": "XAF",
                  "sample": "XAF"
                },
                {
                  "value": "XCD",
                  "label": "XCD",
                  "sample": "XCD"
                },
                {
                  "value": "XOF",
                  "label": "XOF",
                  "sample": "XOF"
                },
                {
                  "value": "XPF",
                  "label": "XPF",
                  "sample": "XPF"
                },
                {
                  "value": "YER",
                  "label": "YER",
                  "sample": "YER"
                },
                {
                  "value": "ZAR",
                  "label": "ZAR",
                  "sample": "ZAR"
                },
                {
                  "value": "ZMW",
                  "label": "ZMW",
                  "sample": "ZMW"
                },
                {
                  "value": "ZMK",
                  "label": "ZMK",
                  "sample": "ZMK"
                },
                {
                  "value": "ZWD",
                  "label": "ZWD",
                  "sample": "ZWD"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.Description",
              "label": "Description",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Name of Currency"
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Currencies\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getemployees_employees_get",
        "name": "Retrieves employees used in Xero payrun",
        "display": {
          "label": "Retrieves employees used in Xero payrun",
          "description": "Retrieves employees used in Xero payrun",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"ACTIVE\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"ACTIVE\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: LastName ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "LastName ASC",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createemployees_employees_put",
        "name": "Creates new employees used in Xero payrun",
        "display": {
          "label": "Creates new employees used in Xero payrun",
          "description": "Creates new employees used in Xero payrun",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.Employees",
              "label": "Employees",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Employees\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateorcreateemployees_employees_post",
        "name": "Creates a single new employees used in Xero payrun",
        "display": {
          "label": "Creates a single new employees used in Xero payrun",
          "description": "Creates a single new employees used in Xero payrun",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.Employees",
              "label": "Employees",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Employees\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getemployee_employees_employeeid_get",
        "name": "Retrieves a specific employee used in Xero payrun using a unique employee Id",
        "display": {
          "label": "Retrieves a specific employee used in Xero payrun using a unique employee Id",
          "description": "Retrieves a specific employee used in Xero payrun using a unique employee Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.EmployeeID",
              "label": "Employee ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Employee",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getexpenseclaims_expenseclaims_get",
        "name": "Retrieves expense claims",
        "display": {
          "label": "Retrieves expense claims",
          "description": "Retrieves expense claims",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"SUBMITTED\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"SUBMITTED\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Status ASC",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createexpenseclaims_expenseclaims_put",
        "name": "Creates expense claims",
        "display": {
          "label": "Creates expense claims",
          "description": "Creates expense claims",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body.ExpenseClaims",
              "label": "Expense Claims",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/ExpenseClaims\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getexpenseclaim_expenseclaims_expenseclaimid_get",
        "name": "Retrieves a specific expense claim using a unique expense claim Id",
        "display": {
          "label": "Retrieves a specific expense claim using a unique expense claim Id",
          "description": "Retrieves a specific expense claim using a unique expense claim Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ExpenseClaimID",
              "label": "Expense Claim ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ExpenseClaim",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateexpenseclaim_expenseclaims_expenseclaimid_post",
        "name": "Updates a specific expense claims",
        "display": {
          "label": "Updates a specific expense claims",
          "description": "Updates a specific expense claims",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ExpenseClaimID",
              "label": "Expense Claim ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ExpenseClaim",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.ExpenseClaims",
              "label": "Expense Claims",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/ExpenseClaims/{ExpenseClaimID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getexpenseclaimhistory_expenseclaims_expenseclaimid_history_get",
        "name": "Retrieves history records of a specific expense claim",
        "display": {
          "label": "Retrieves history records of a specific expense claim",
          "description": "Retrieves history records of a specific expense claim",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ExpenseClaimID",
              "label": "Expense Claim ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ExpenseClaim",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createexpenseclaimhistory_expenseclaims_expenseclaimid_history_put",
        "name": "Creates a history record for a specific expense claim",
        "display": {
          "label": "Creates a history record for a specific expense claim",
          "description": "Creates a history record for a specific expense claim",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ExpenseClaimID",
              "label": "Expense Claim ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ExpenseClaim",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/ExpenseClaims/{ExpenseClaimID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getinvoices_invoices_get",
        "name": "Retrieves sales invoices or purchase bills",
        "display": {
          "label": "Retrieves sales invoices or purchase bills",
          "description": "Retrieves sales invoices or purchase bills",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"DRAFT\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"DRAFT\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: InvoiceNumber ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "InvoiceNumber ASC",
              "computed": false
            },
            {
              "key": "query.IDs",
              "label": "IDs",
              "type": "string",
              "validation": {},
              "placeholder": "Example: &quot;00000000-0000-0000-0000-000000000000&quot;",
              "required": false,
              "helpText": "Filter by a comma-separated list of InvoicesIDs.",
              "sample": "&quot;00000000-0000-0000-0000-000000000000&quot;",
              "computed": false
            },
            {
              "key": "query.InvoiceNumbers",
              "label": "Invoice Numbers",
              "type": "string",
              "validation": {},
              "placeholder": "Example: &quot;INV-001&quot;, &quot;INV-002&quot;",
              "required": false,
              "helpText": "Filter by a comma-separated list of InvoiceNumbers.",
              "sample": "&quot;INV-001&quot;, &quot;INV-002&quot;",
              "computed": false
            },
            {
              "key": "query.ContactIDs",
              "label": "Contact IDs",
              "type": "string",
              "validation": {},
              "placeholder": "Example: &quot;00000000-0000-0000-0000-000000000000&quot;",
              "required": false,
              "helpText": "Filter by a comma-separated list of ContactIDs.",
              "sample": "&quot;00000000-0000-0000-0000-000000000000&quot;",
              "computed": false
            },
            {
              "key": "query.Statuses",
              "label": "Statuses",
              "type": "string",
              "validation": {},
              "placeholder": "Example: &quot;DRAFT&quot;, &quot;SUBMITTED&quot;",
              "required": false,
              "helpText": "Filter by a comma-separated list Statuses. For faster response times we recommend using these explicit parameters instead of passing OR conditions into the Where filter.",
              "sample": "&quot;DRAFT&quot;, &quot;SUBMITTED&quot;",
              "computed": false
            },
            {
              "key": "query.page",
              "label": "Page",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 1",
              "required": false,
              "helpText": "e.g. page=1 – Up to 100 invoices will be returned in a single API call with line items shown for each invoice",
              "sample": 1,
              "computed": false
            },
            {
              "key": "query.includeArchived",
              "label": "Include Archived",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "e.g. includeArchived=true - Invoices with a status of ARCHIVED will be included in the response",
              "sample": true,
              "computed": false
            },
            {
              "key": "query.createdByMyApp",
              "label": "Created By My App",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "When set to true you'll only retrieve Invoices created by your app",
              "sample": false,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "query.summaryOnly",
              "label": "Summary Only",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "Use summaryOnly=true in GET Contacts and Invoices endpoint to retrieve a smaller version of the response object. This returns only lightweight fields, excluding computation-heavy fields from the response, making the API calls quick and efficient.",
              "sample": true,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createinvoices_invoices_put",
        "name": "Creates one or more sales invoices or purchase bills",
        "display": {
          "label": "Creates one or more sales invoices or purchase bills",
          "description": "Creates one or more sales invoices or purchase bills",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.Invoices",
              "label": "Invoices",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Invoices\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateorcreateinvoices_invoices_post",
        "name": "Updates or creates one or more sales invoices or purchase bills",
        "display": {
          "label": "Updates or creates one or more sales invoices or purchase bills",
          "description": "Updates or creates one or more sales invoices or purchase bills",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.Invoices",
              "label": "Invoices",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Invoices\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getinvoice_invoices_invoiceid_get",
        "name": "Retrieves a specific sales invoice or purchase bill using a unique invoice Id",
        "display": {
          "label": "Retrieves a specific sales invoice or purchase bill using a unique invoice Id",
          "description": "Retrieves a specific sales invoice or purchase bill using a unique invoice Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateinvoice_invoices_invoiceid_post",
        "name": "Updates a specific sales invoices or purchase bills",
        "display": {
          "label": "Updates a specific sales invoices or purchase bills",
          "description": "Updates a specific sales invoices or purchase bills",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.Invoices",
              "label": "Invoices",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Invoices/{InvoiceID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getinvoiceaspdf_invoices_invoiceid_pdf_get",
        "name": "Retrieves invoices or purchase bills as PDF files",
        "display": {
          "label": "Retrieves invoices or purchase bills as PDF files",
          "description": "Retrieves invoices or purchase bills as PDF files",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getinvoiceattachments_invoices_invoiceid_attachments_get",
        "name": "Retrieves attachments for a specific invoice or purchase bill",
        "display": {
          "label": "Retrieves attachments for a specific invoice or purchase bill",
          "description": "Retrieves attachments for a specific invoice or purchase bill",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getinvoiceattachmentbyid_invoices_invoiceid_attachments_attachmentid_get",
        "name": "Retrieves a specific attachment from a specific invoices or purchase bills by using a unique attachment Id",
        "display": {
          "label": "Retrieves a specific attachment from a specific invoices or purchase bills by using a unique attachment Id",
          "description": "Retrieves a specific attachment from a specific invoices or purchase bills by using a unique attachment Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.AttachmentID",
              "label": "Attachment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Attachment object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getinvoiceattachmentbyfilename_invoices_invoiceid_attachments_filename_get",
        "name": "Retrieves an attachment from a specific invoice or purchase bill by filename",
        "display": {
          "label": "Retrieves an attachment from a specific invoice or purchase bill by filename",
          "description": "Retrieves an attachment from a specific invoice or purchase bill by filename",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateinvoiceattachmentbyfilename_invoices_invoiceid_attachments_filename_post",
        "name": "Updates an attachment from a specific invoices or purchase bill by filename",
        "display": {
          "label": "Updates an attachment from a specific invoices or purchase bill by filename",
          "description": "Updates an attachment from a specific invoices or purchase bill by filename",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Invoices/{InvoiceID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createinvoiceattachmentbyfilename_invoices_invoiceid_attachments_filename_put",
        "name": "Creates an attachment for a specific invoice or purchase bill by filename",
        "display": {
          "label": "Creates an attachment for a specific invoice or purchase bill by filename",
          "description": "Creates an attachment for a specific invoice or purchase bill by filename",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "query.IncludeOnline",
              "label": "Include Online",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "Allows an attachment to be seen by the end customer within their online invoice",
              "sample": true,
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Invoices/{InvoiceID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getonlineinvoice_invoices_invoiceid_onlineinvoice_get",
        "name": "Retrieves a URL to an online invoice",
        "display": {
          "label": "Retrieves a URL to an online invoice",
          "description": "Retrieves a URL to an online invoice",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "emailinvoice_invoices_invoiceid_email_post",
        "name": "Sends a copy of a specific invoice to related contact via email",
        "display": {
          "label": "Sends a copy of a specific invoice to related contact via email",
          "description": "Sends a copy of a specific invoice to related contact via email",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.Status",
              "label": "Status",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Need at least one field to create an empty JSON payload"
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Invoices/{InvoiceID}/Email\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getinvoicehistory_invoices_invoiceid_history_get",
        "name": "Retrieves history records for a specific invoice",
        "display": {
          "label": "Retrieves history records for a specific invoice",
          "description": "Retrieves history records for a specific invoice",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createinvoicehistory_invoices_invoiceid_history_put",
        "name": "Creates a history record for a specific invoice",
        "display": {
          "label": "Creates a history record for a specific invoice",
          "description": "Creates a history record for a specific invoice",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Invoices/{InvoiceID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getinvoicereminders_invoicereminders_settings_get",
        "name": "Retrieves invoice reminder settings",
        "display": {
          "label": "Retrieves invoice reminder settings",
          "description": "Retrieves invoice reminder settings",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getitems_items_get",
        "name": "Retrieves items",
        "display": {
          "label": "Retrieves items",
          "description": "Retrieves items",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: IsSold==true",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "IsSold==true",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Code ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Code ASC",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createitems_items_put",
        "name": "Creates one or more items",
        "display": {
          "label": "Creates one or more items",
          "description": "Creates one or more items",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.Items",
              "label": "Items",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Items\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateorcreateitems_items_post",
        "name": "Updates or creates one or more items",
        "display": {
          "label": "Updates or creates one or more items",
          "description": "Updates or creates one or more items",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.Items",
              "label": "Items",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Items\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getitem_items_itemid_get",
        "name": "Retrieves a specific item using a unique item Id",
        "display": {
          "label": "Retrieves a specific item using a unique item Id",
          "description": "Retrieves a specific item using a unique item Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ItemID",
              "label": "Item ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Item",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateitem_items_itemid_post",
        "name": "Updates a specific item",
        "display": {
          "label": "Updates a specific item",
          "description": "Updates a specific item",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ItemID",
              "label": "Item ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Item",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.Items",
              "label": "Items",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Items/{ItemID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "deleteitem_items_itemid_delete",
        "name": "Deletes a specific item",
        "display": {
          "label": "Deletes a specific item",
          "description": "Deletes a specific item",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ItemID",
              "label": "Item ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Item",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getitemhistory_items_itemid_history_get",
        "name": "Retrieves history for a specific item",
        "display": {
          "label": "Retrieves history for a specific item",
          "description": "Retrieves history for a specific item",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ItemID",
              "label": "Item ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Item",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createitemhistory_items_itemid_history_put",
        "name": "Creates a history record for a specific item",
        "display": {
          "label": "Creates a history record for a specific item",
          "description": "Creates a history record for a specific item",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ItemID",
              "label": "Item ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Item",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Items/{ItemID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getjournals_journals_get",
        "name": "Retrieves journals",
        "display": {
          "label": "Retrieves journals",
          "description": "Retrieves journals",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.offset",
              "label": "Offset",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 10",
              "required": false,
              "helpText": "Offset by a specified journal number. e.g. journals with a JournalNumber greater than the offset will be returned",
              "sample": 10,
              "computed": false
            },
            {
              "key": "query.paymentsOnly",
              "label": "Payments Only",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "Filter to retrieve journals on a cash basis. Journals are returned on an accrual basis by default.",
              "sample": true,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getjournal_journals_journalid_get",
        "name": "Retrieves a specific journal using a unique journal Id.",
        "display": {
          "label": "Retrieves a specific journal using a unique journal Id.",
          "description": "Retrieves a specific journal using a unique journal Id.",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.JournalID",
              "label": "Journal ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Journal",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getjournalbynumber_journals_journalnumber_get",
        "name": "Retrieves a specific journal using a unique journal number.",
        "display": {
          "label": "Retrieves a specific journal using a unique journal number.",
          "description": "Retrieves a specific journal using a unique journal number.",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.JournalNumber",
              "label": "Journal Number",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 1000",
              "required": true,
              "helpText": "Number of a Journal",
              "sample": 1000,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getlinkedtransactions_linkedtransactions_get",
        "name": "Retrieves linked transactions (billable expenses)",
        "display": {
          "label": "Retrieves linked transactions (billable expenses)",
          "description": "Retrieves linked transactions (billable expenses)",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.page",
              "label": "Page",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 1",
              "required": false,
              "helpText": "Up to 100 linked transactions will be returned in a single API call. Use the page parameter to specify the page to be returned e.g. page=1.",
              "sample": 1,
              "computed": false
            },
            {
              "key": "query.LinkedTransactionID",
              "label": "Linked Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "The Xero identifier for an Linked Transaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.SourceTransactionID",
              "label": "Source Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "Filter by the SourceTransactionID. Get the linked transactions created from a particular ACCPAY invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "Filter by the ContactID. Get all the linked transactions that have been assigned to a particular customer.",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.Status",
              "label": "Status",
              "type": "string",
              "validation": {},
              "placeholder": "Example: APPROVED",
              "required": false,
              "helpText": "Filter by the combination of ContactID and Status. Get  the linked transactions associated to a  customer and with a status",
              "sample": "APPROVED",
              "computed": false
            },
            {
              "key": "query.TargetTransactionID",
              "label": "Target Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "Filter by the TargetTransactionID. Get all the linked transactions allocated to a particular ACCREC invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createlinkedtransaction_linkedtransactions_put",
        "name": "Creates linked transactions (billable expenses)",
        "display": {
          "label": "Creates linked transactions (billable expenses)",
          "description": "Creates linked transactions (billable expenses)",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body.SourceTransactionID",
              "label": "Source Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Filter by the SourceTransactionID. Get all the linked transactions created from a particular ACCPAY invoice"
            },
            {
              "key": "body.SourceLineItemID",
              "label": "Source Line Item ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The line item identifier from the source transaction."
            },
            {
              "key": "body.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Filter by the combination of ContactID and Status. Get all the linked transactions that have been assigned to a particular customer and have a particular status e.g. GET /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED."
            },
            {
              "key": "body.TargetTransactionID",
              "label": "Target Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Filter by the TargetTransactionID. Get all the linked transactions  allocated to a particular ACCREC invoice"
            },
            {
              "key": "body.TargetLineItemID",
              "label": "Target Line Item ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The line item identifier from the target transaction. It is possible  to link multiple billable expenses to the same TargetLineItemID."
            },
            {
              "key": "body.LinkedTransactionID",
              "label": "Linked Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The Xero identifier for an Linked Transaction e.g./LinkedTransactions/297c2dc5-cc47-4afd-8ec8-74990b8761e9"
            },
            {
              "key": "body.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "APPROVED",
                  "DRAFT",
                  "ONDRAFT",
                  "BILLED",
                  "VOIDED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Filter by the combination of ContactID and Status. Get all the linked transactions that have been assigned to a particular customer and have a particular status e.g. GET /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.",
              "choices": [
                {
                  "value": "APPROVED",
                  "label": "APPROVED",
                  "sample": "APPROVED"
                },
                {
                  "value": "DRAFT",
                  "label": "DRAFT",
                  "sample": "DRAFT"
                },
                {
                  "value": "ONDRAFT",
                  "label": "ONDRAFT",
                  "sample": "ONDRAFT"
                },
                {
                  "value": "BILLED",
                  "label": "BILLED",
                  "sample": "BILLED"
                },
                {
                  "value": "VOIDED",
                  "label": "VOIDED",
                  "sample": "VOIDED"
                }
              ]
            },
            {
              "key": "body.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "BILLABLEEXPENSE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "This will always be BILLABLEEXPENSE. More types may be added in future.",
              "choices": [
                {
                  "value": "BILLABLEEXPENSE",
                  "label": "BILLABLEEXPENSE",
                  "sample": "BILLABLEEXPENSE"
                }
              ]
            },
            {
              "key": "body.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "The last modified date in UTC format",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.SourceTransactionTypeCode",
              "label": "Source Transaction Type Code",
              "type": "string",
              "validation": {
                "values": [
                  "ACCPAY",
                  "SPEND"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The Type of the source tranasction. This will be ACCPAY if the linked transaction was created from an invoice and SPEND if it was created from a bank transaction.",
              "choices": [
                {
                  "value": "ACCPAY",
                  "label": "ACCPAY",
                  "sample": "ACCPAY"
                },
                {
                  "value": "SPEND",
                  "label": "SPEND",
                  "sample": "SPEND"
                }
              ]
            },
            {
              "key": "body.ValidationErrors",
              "label": "Validation Errors",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/LinkedTransactions\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getlinkedtransaction_linkedtransactions_linkedtransactionid_get",
        "name": "Retrieves a specific linked transaction (billable expenses) using a unique linked transaction Id",
        "display": {
          "label": "Retrieves a specific linked transaction (billable expenses) using a unique linked transaction Id",
          "description": "Retrieves a specific linked transaction (billable expenses) using a unique linked transaction Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.LinkedTransactionID",
              "label": "Linked Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a LinkedTransaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatelinkedtransaction_linkedtransactions_linkedtransactionid_post",
        "name": "Updates a specific linked transactions (billable expenses)",
        "display": {
          "label": "Updates a specific linked transactions (billable expenses)",
          "description": "Updates a specific linked transactions (billable expenses)",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.LinkedTransactionID",
              "label": "Linked Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a LinkedTransaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.LinkedTransactions",
              "label": "Linked Transactions",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/LinkedTransactions/{LinkedTransactionID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "deletelinkedtransaction_linkedtransactions_linkedtransactionid_delete",
        "name": "Deletes a specific linked transactions (billable expenses)",
        "display": {
          "label": "Deletes a specific linked transactions (billable expenses)",
          "description": "Deletes a specific linked transactions (billable expenses)",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.LinkedTransactionID",
              "label": "Linked Transaction ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a LinkedTransaction",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getmanualjournals_manualjournals_get",
        "name": "Retrieves manual journals",
        "display": {
          "label": "Retrieves manual journals",
          "description": "Retrieves manual journals",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"DRAFT\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"DRAFT\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Date ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Date ASC",
              "computed": false
            },
            {
              "key": "query.page",
              "label": "Page",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 1",
              "required": false,
              "helpText": "e.g. page=1 – Up to 100 manual journals will be returned in a single API call with line items shown for each overpayment",
              "sample": 1,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createmanualjournals_manualjournals_put",
        "name": "Creates one or more manual journals",
        "display": {
          "label": "Creates one or more manual journals",
          "description": "Creates one or more manual journals",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.ManualJournals",
              "label": "Manual Journals",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/ManualJournals\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateorcreatemanualjournals_manualjournals_post",
        "name": "Updates or creates a single manual journal",
        "display": {
          "label": "Updates or creates a single manual journal",
          "description": "Updates or creates a single manual journal",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.ManualJournals",
              "label": "Manual Journals",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/ManualJournals\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getmanualjournal_manualjournals_manualjournalid_get",
        "name": "Retrieves a specific manual journal",
        "display": {
          "label": "Retrieves a specific manual journal",
          "description": "Retrieves a specific manual journal",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ManualJournalID",
              "label": "Manual Journal ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ManualJournal",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatemanualjournal_manualjournals_manualjournalid_post",
        "name": "Updates a specific manual journal",
        "display": {
          "label": "Updates a specific manual journal",
          "description": "Updates a specific manual journal",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ManualJournalID",
              "label": "Manual Journal ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ManualJournal",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.ManualJournals",
              "label": "Manual Journals",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/ManualJournals/{ManualJournalID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getmanualjournalattachments_manualjournals_manualjournalid_attachments_get",
        "name": "Retrieves attachment for a specific manual journal",
        "display": {
          "label": "Retrieves attachment for a specific manual journal",
          "description": "Retrieves attachment for a specific manual journal",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ManualJournalID",
              "label": "Manual Journal ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ManualJournal",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getmanualjournalattachmentbyid_manualjournals_manualjournalid_attachments_attachmentid_get",
        "name": "Allows you to retrieve a specific attachment from a specific manual journal using a unique attachment Id",
        "display": {
          "label": "Allows you to retrieve a specific attachment from a specific manual journal using a unique attachment Id",
          "description": "Allows you to retrieve a specific attachment from a specific manual journal using a unique attachment Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ManualJournalID",
              "label": "Manual Journal ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ManualJournal",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.AttachmentID",
              "label": "Attachment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Attachment object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getmanualjournalattachmentbyfilename_manualjournals_manualjournalid_attachments_filename_get",
        "name": "Retrieves a specific attachment from a specific manual journal by file name",
        "display": {
          "label": "Retrieves a specific attachment from a specific manual journal by file name",
          "description": "Retrieves a specific attachment from a specific manual journal by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ManualJournalID",
              "label": "Manual Journal ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ManualJournal",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatemanualjournalattachmentbyfilename_manualjournals_manualjournalid_attachments_filename_post",
        "name": "Updates a specific attachment from a specific manual journal by file name",
        "display": {
          "label": "Updates a specific attachment from a specific manual journal by file name",
          "description": "Updates a specific attachment from a specific manual journal by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ManualJournalID",
              "label": "Manual Journal ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ManualJournal",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/ManualJournals/{ManualJournalID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createmanualjournalattachmentbyfilename_manualjournals_manualjournalid_attachments_filename_put",
        "name": "Creates a specific attachment for a specific manual journal by file name",
        "display": {
          "label": "Creates a specific attachment for a specific manual journal by file name",
          "description": "Creates a specific attachment for a specific manual journal by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ManualJournalID",
              "label": "Manual Journal ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ManualJournal",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/ManualJournals/{ManualJournalID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getmanualjournalshistory_manualjournals_manualjournalid_history_get",
        "name": "Retrieves history for a specific manual journal",
        "display": {
          "label": "Retrieves history for a specific manual journal",
          "description": "Retrieves history for a specific manual journal",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ManualJournalID",
              "label": "Manual Journal ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ManualJournal",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createmanualjournalhistoryrecord_manualjournals_manualjournalid_history_put",
        "name": "Creates a history record for a specific manual journal",
        "display": {
          "label": "Creates a history record for a specific manual journal",
          "description": "Creates a history record for a specific manual journal",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ManualJournalID",
              "label": "Manual Journal ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a ManualJournal",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/ManualJournals/{ManualJournalID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getorganisations_organisation_get",
        "name": "Retrieves Xero organisation details",
        "display": {
          "label": "Retrieves Xero organisation details",
          "description": "Retrieves Xero organisation details",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getorganisationactions_organisation_actions_get",
        "name": "Retrieves a list of the key actions your app has permission to perform in the connected Xero organisation.",
        "display": {
          "label": "Retrieves a list of the key actions your app has permission to perform in the connected Xero organisation.",
          "description": "Retrieves a list of the key actions your app has permission to perform in the connected Xero organisation.",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getorganisationcissettings_organisation_organisationid_cissettings_get",
        "name": "Retrieves the CIS settings for the Xero organistaion.",
        "display": {
          "label": "Retrieves the CIS settings for the Xero organistaion.",
          "description": "Retrieves the CIS settings for the Xero organistaion.",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.OrganisationID",
              "label": "Organisation ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "The unique Xero identifier for an organisation",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getoverpayments_overpayments_get",
        "name": "Retrieves overpayments",
        "display": {
          "label": "Retrieves overpayments",
          "description": "Retrieves overpayments",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"AUTHORISED\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"AUTHORISED\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Status ASC",
              "computed": false
            },
            {
              "key": "query.page",
              "label": "Page",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 1",
              "required": false,
              "helpText": "e.g. page=1 – Up to 100 overpayments will be returned in a single API call with line items shown for each overpayment",
              "sample": 1,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getoverpayment_overpayments_overpaymentid_get",
        "name": "Retrieves a specific overpayment using a unique overpayment Id",
        "display": {
          "label": "Retrieves a specific overpayment using a unique overpayment Id",
          "description": "Retrieves a specific overpayment using a unique overpayment Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.OverpaymentID",
              "label": "Overpayment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Overpayment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createoverpaymentallocations_overpayments_overpaymentid_allocations_put",
        "name": "Creates a single allocation for a specific overpayment",
        "display": {
          "label": "Creates a single allocation for a specific overpayment",
          "description": "Creates a single allocation for a specific overpayment",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.OverpaymentID",
              "label": "Overpayment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Overpayment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.Allocations",
              "label": "Allocations",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Overpayments/{OverpaymentID}/Allocations\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getoverpaymenthistory_overpayments_overpaymentid_history_get",
        "name": "Retrieves history records of a specific overpayment",
        "display": {
          "label": "Retrieves history records of a specific overpayment",
          "description": "Retrieves history records of a specific overpayment",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.OverpaymentID",
              "label": "Overpayment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Overpayment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createoverpaymenthistory_overpayments_overpaymentid_history_put",
        "name": "Creates a history record for a specific overpayment",
        "display": {
          "label": "Creates a history record for a specific overpayment",
          "description": "Creates a history record for a specific overpayment",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.OverpaymentID",
              "label": "Overpayment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Overpayment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Overpayments/{OverpaymentID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getpayments_payments_get",
        "name": "Retrieves payments for invoices and credit notes",
        "display": {
          "label": "Retrieves payments for invoices and credit notes",
          "description": "Retrieves payments for invoices and credit notes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"AUTHORISED\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"AUTHORISED\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Amount ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Amount ASC",
              "computed": false
            },
            {
              "key": "query.page",
              "label": "Page",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 1",
              "required": false,
              "helpText": "Up to 100 payments will be returned in a single API call",
              "sample": 1,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createpayments_payments_put",
        "name": "Creates multiple payments for invoices or credit notes",
        "display": {
          "label": "Creates multiple payments for invoices or credit notes",
          "description": "Creates multiple payments for invoices or credit notes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.Payments",
              "label": "Payments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Payments\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createpayment_payments_post",
        "name": "Creates a single payment for invoice or credit notes",
        "display": {
          "label": "Creates a single payment for invoice or credit notes",
          "description": "Creates a single payment for invoice or credit notes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body.Invoice.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "ACCPAY",
                  "ACCPAYCREDIT",
                  "APOVERPAYMENT",
                  "APPREPAYMENT",
                  "ACCREC",
                  "ACCRECCREDIT",
                  "AROVERPAYMENT",
                  "ARPREPAYMENT"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Invoice Types",
              "choices": [
                {
                  "value": "ACCPAY",
                  "label": "ACCPAY",
                  "sample": "ACCPAY"
                },
                {
                  "value": "ACCPAYCREDIT",
                  "label": "ACCPAYCREDIT",
                  "sample": "ACCPAYCREDIT"
                },
                {
                  "value": "APOVERPAYMENT",
                  "label": "APOVERPAYMENT",
                  "sample": "APOVERPAYMENT"
                },
                {
                  "value": "APPREPAYMENT",
                  "label": "APPREPAYMENT",
                  "sample": "APPREPAYMENT"
                },
                {
                  "value": "ACCREC",
                  "label": "ACCREC",
                  "sample": "ACCREC"
                },
                {
                  "value": "ACCRECCREDIT",
                  "label": "ACCRECCREDIT",
                  "sample": "ACCRECCREDIT"
                },
                {
                  "value": "AROVERPAYMENT",
                  "label": "AROVERPAYMENT",
                  "sample": "AROVERPAYMENT"
                },
                {
                  "value": "ARPREPAYMENT",
                  "label": "ARPREPAYMENT",
                  "sample": "ARPREPAYMENT"
                }
              ]
            },
            {
              "key": "body.Invoice.Contact.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero identifier"
            },
            {
              "key": "body.Invoice.Contact.MergedToContactID",
              "label": "Merged To Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "ID for the destination of a merged contact. Only returned when using paging or when fetching a contact by ContactId or ContactNumber."
            },
            {
              "key": "body.Invoice.Contact.ContactNumber",
              "label": "Contact Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "This can be updated via the API only i.e. This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50). If the Contact Number is used, this is displayed as Contact Code in the Contacts UI in Xero."
            },
            {
              "key": "body.Invoice.Contact.AccountNumber",
              "label": "Account Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "A user defined account number. This can be updated via the API and the Xero UI (max length = 50)"
            },
            {
              "key": "body.Invoice.Contact.ContactStatus",
              "label": "Contact Status",
              "type": "string",
              "validation": {
                "values": [
                  "ACTIVE",
                  "ARCHIVED",
                  "GDPRREQUEST"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Current status of a contact – see contact status types",
              "choices": [
                {
                  "value": "ACTIVE",
                  "label": "ACTIVE",
                  "sample": "ACTIVE"
                },
                {
                  "value": "ARCHIVED",
                  "label": "ARCHIVED",
                  "sample": "ARCHIVED"
                },
                {
                  "value": "GDPRREQUEST",
                  "label": "GDPRREQUEST",
                  "sample": "GDPRREQUEST"
                }
              ]
            },
            {
              "key": "body.Invoice.Contact.Name",
              "label": "Name",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "Full name of contact/organisation (max length = 255)"
            },
            {
              "key": "body.Invoice.Contact.FirstName",
              "label": "First Name",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "First name of contact person (max length = 255)"
            },
            {
              "key": "body.Invoice.Contact.LastName",
              "label": "Last Name",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "Last name of contact person (max length = 255)"
            },
            {
              "key": "body.Invoice.Contact.CompanyNumber",
              "label": "Company Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "Company registration number (max length = 50)"
            },
            {
              "key": "body.Invoice.Contact.EmailAddress",
              "label": "Email Address",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "Email address of contact person (umlauts not supported) (max length  = 255)"
            },
            {
              "key": "body.Invoice.Contact.SkypeUserName",
              "label": "Skype User Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Skype user name of contact"
            },
            {
              "key": "body.Invoice.Contact.ContactPersons",
              "label": "Contact Persons",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Contact.BankAccountDetails",
              "label": "Bank Account Details",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Bank account number of contact"
            },
            {
              "key": "body.Invoice.Contact.TaxNumber",
              "label": "Tax Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "Tax number of contact – this is also known as the ABN (Australia), GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and global) in the Xero UI depending on which regionalized version of Xero you are using (max length = 50)"
            },
            {
              "key": "body.Invoice.Contact.AccountsReceivableTaxType",
              "label": "Accounts Receivable Tax Type",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The tax type from TaxRates"
            },
            {
              "key": "body.Invoice.Contact.AccountsPayableTaxType",
              "label": "Accounts Payable Tax Type",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The tax type from TaxRates"
            },
            {
              "key": "body.Invoice.Contact.Addresses",
              "label": "Addresses",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Contact.Phones",
              "label": "Phones",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Contact.IsSupplier",
              "label": "Is Supplier",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "true or false – Boolean that describes if a contact that has any AP  invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts payable invoice is generated against this contact."
            },
            {
              "key": "body.Invoice.Contact.IsCustomer",
              "label": "Is Customer",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "true or false – Boolean that describes if a contact has any AR invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts receivable invoice is generated against this contact."
            },
            {
              "key": "body.Invoice.Contact.SalesDefaultLineAmountType",
              "label": "Sales Default Line Amount Type",
              "type": "string",
              "validation": {
                "values": [
                  "INCLUSIVE",
                  "EXCLUSIVE",
                  "NONE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The default sales line amount type for a contact. Only available when summaryOnly parameter or paging is used, or when fetch by ContactId or ContactNumber.",
              "choices": [
                {
                  "value": "INCLUSIVE",
                  "label": "INCLUSIVE",
                  "sample": "INCLUSIVE"
                },
                {
                  "value": "EXCLUSIVE",
                  "label": "EXCLUSIVE",
                  "sample": "EXCLUSIVE"
                },
                {
                  "value": "NONE",
                  "label": "NONE",
                  "sample": "NONE"
                }
              ]
            },
            {
              "key": "body.Invoice.Contact.PurchasesDefaultLineAmountType",
              "label": "Purchases Default Line Amount Type",
              "type": "string",
              "validation": {
                "values": [
                  "INCLUSIVE",
                  "EXCLUSIVE",
                  "NONE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The default purchases line amount type for a contact Only available when summaryOnly parameter or paging is used, or when fetch by ContactId or ContactNumber.",
              "choices": [
                {
                  "value": "INCLUSIVE",
                  "label": "INCLUSIVE",
                  "sample": "INCLUSIVE"
                },
                {
                  "value": "EXCLUSIVE",
                  "label": "EXCLUSIVE",
                  "sample": "EXCLUSIVE"
                },
                {
                  "value": "NONE",
                  "label": "NONE",
                  "sample": "NONE"
                }
              ]
            },
            {
              "key": "body.Invoice.Contact.DefaultCurrency",
              "label": "Default Currency",
              "type": "string",
              "validation": {
                "values": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BYR",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EEK",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LTL",
                  "LVL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SKK",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "STD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "3 letter alpha code for the currency – see list of currency codes",
              "choices": [
                {
                  "value": "AED",
                  "label": "AED",
                  "sample": "AED"
                },
                {
                  "value": "AFN",
                  "label": "AFN",
                  "sample": "AFN"
                },
                {
                  "value": "ALL",
                  "label": "ALL",
                  "sample": "ALL"
                },
                {
                  "value": "AMD",
                  "label": "AMD",
                  "sample": "AMD"
                },
                {
                  "value": "ANG",
                  "label": "ANG",
                  "sample": "ANG"
                },
                {
                  "value": "AOA",
                  "label": "AOA",
                  "sample": "AOA"
                },
                {
                  "value": "ARS",
                  "label": "ARS",
                  "sample": "ARS"
                },
                {
                  "value": "AUD",
                  "label": "AUD",
                  "sample": "AUD"
                },
                {
                  "value": "AWG",
                  "label": "AWG",
                  "sample": "AWG"
                },
                {
                  "value": "AZN",
                  "label": "AZN",
                  "sample": "AZN"
                },
                {
                  "value": "BAM",
                  "label": "BAM",
                  "sample": "BAM"
                },
                {
                  "value": "BBD",
                  "label": "BBD",
                  "sample": "BBD"
                },
                {
                  "value": "BDT",
                  "label": "BDT",
                  "sample": "BDT"
                },
                {
                  "value": "BGN",
                  "label": "BGN",
                  "sample": "BGN"
                },
                {
                  "value": "BHD",
                  "label": "BHD",
                  "sample": "BHD"
                },
                {
                  "value": "BIF",
                  "label": "BIF",
                  "sample": "BIF"
                },
                {
                  "value": "BMD",
                  "label": "BMD",
                  "sample": "BMD"
                },
                {
                  "value": "BND",
                  "label": "BND",
                  "sample": "BND"
                },
                {
                  "value": "BOB",
                  "label": "BOB",
                  "sample": "BOB"
                },
                {
                  "value": "BRL",
                  "label": "BRL",
                  "sample": "BRL"
                },
                {
                  "value": "BSD",
                  "label": "BSD",
                  "sample": "BSD"
                },
                {
                  "value": "BTN",
                  "label": "BTN",
                  "sample": "BTN"
                },
                {
                  "value": "BWP",
                  "label": "BWP",
                  "sample": "BWP"
                },
                {
                  "value": "BYN",
                  "label": "BYN",
                  "sample": "BYN"
                },
                {
                  "value": "BYR",
                  "label": "BYR",
                  "sample": "BYR"
                },
                {
                  "value": "BZD",
                  "label": "BZD",
                  "sample": "BZD"
                },
                {
                  "value": "CAD",
                  "label": "CAD",
                  "sample": "CAD"
                },
                {
                  "value": "CDF",
                  "label": "CDF",
                  "sample": "CDF"
                },
                {
                  "value": "CHF",
                  "label": "CHF",
                  "sample": "CHF"
                },
                {
                  "value": "CLF",
                  "label": "CLF",
                  "sample": "CLF"
                },
                {
                  "value": "CLP",
                  "label": "CLP",
                  "sample": "CLP"
                },
                {
                  "value": "CNY",
                  "label": "CNY",
                  "sample": "CNY"
                },
                {
                  "value": "COP",
                  "label": "COP",
                  "sample": "COP"
                },
                {
                  "value": "CRC",
                  "label": "CRC",
                  "sample": "CRC"
                },
                {
                  "value": "CUC",
                  "label": "CUC",
                  "sample": "CUC"
                },
                {
                  "value": "CUP",
                  "label": "CUP",
                  "sample": "CUP"
                },
                {
                  "value": "CVE",
                  "label": "CVE",
                  "sample": "CVE"
                },
                {
                  "value": "CZK",
                  "label": "CZK",
                  "sample": "CZK"
                },
                {
                  "value": "DJF",
                  "label": "DJF",
                  "sample": "DJF"
                },
                {
                  "value": "DKK",
                  "label": "DKK",
                  "sample": "DKK"
                },
                {
                  "value": "DOP",
                  "label": "DOP",
                  "sample": "DOP"
                },
                {
                  "value": "DZD",
                  "label": "DZD",
                  "sample": "DZD"
                },
                {
                  "value": "EEK",
                  "label": "EEK",
                  "sample": "EEK"
                },
                {
                  "value": "EGP",
                  "label": "EGP",
                  "sample": "EGP"
                },
                {
                  "value": "ERN",
                  "label": "ERN",
                  "sample": "ERN"
                },
                {
                  "value": "ETB",
                  "label": "ETB",
                  "sample": "ETB"
                },
                {
                  "value": "EUR",
                  "label": "EUR",
                  "sample": "EUR"
                },
                {
                  "value": "FJD",
                  "label": "FJD",
                  "sample": "FJD"
                },
                {
                  "value": "FKP",
                  "label": "FKP",
                  "sample": "FKP"
                },
                {
                  "value": "GBP",
                  "label": "GBP",
                  "sample": "GBP"
                },
                {
                  "value": "GEL",
                  "label": "GEL",
                  "sample": "GEL"
                },
                {
                  "value": "GHS",
                  "label": "GHS",
                  "sample": "GHS"
                },
                {
                  "value": "GIP",
                  "label": "GIP",
                  "sample": "GIP"
                },
                {
                  "value": "GMD",
                  "label": "GMD",
                  "sample": "GMD"
                },
                {
                  "value": "GNF",
                  "label": "GNF",
                  "sample": "GNF"
                },
                {
                  "value": "GTQ",
                  "label": "GTQ",
                  "sample": "GTQ"
                },
                {
                  "value": "GYD",
                  "label": "GYD",
                  "sample": "GYD"
                },
                {
                  "value": "HKD",
                  "label": "HKD",
                  "sample": "HKD"
                },
                {
                  "value": "HNL",
                  "label": "HNL",
                  "sample": "HNL"
                },
                {
                  "value": "HRK",
                  "label": "HRK",
                  "sample": "HRK"
                },
                {
                  "value": "HTG",
                  "label": "HTG",
                  "sample": "HTG"
                },
                {
                  "value": "HUF",
                  "label": "HUF",
                  "sample": "HUF"
                },
                {
                  "value": "IDR",
                  "label": "IDR",
                  "sample": "IDR"
                },
                {
                  "value": "ILS",
                  "label": "ILS",
                  "sample": "ILS"
                },
                {
                  "value": "INR",
                  "label": "INR",
                  "sample": "INR"
                },
                {
                  "value": "IQD",
                  "label": "IQD",
                  "sample": "IQD"
                },
                {
                  "value": "IRR",
                  "label": "IRR",
                  "sample": "IRR"
                },
                {
                  "value": "ISK",
                  "label": "ISK",
                  "sample": "ISK"
                },
                {
                  "value": "JMD",
                  "label": "JMD",
                  "sample": "JMD"
                },
                {
                  "value": "JOD",
                  "label": "JOD",
                  "sample": "JOD"
                },
                {
                  "value": "JPY",
                  "label": "JPY",
                  "sample": "JPY"
                },
                {
                  "value": "KES",
                  "label": "KES",
                  "sample": "KES"
                },
                {
                  "value": "KGS",
                  "label": "KGS",
                  "sample": "KGS"
                },
                {
                  "value": "KHR",
                  "label": "KHR",
                  "sample": "KHR"
                },
                {
                  "value": "KMF",
                  "label": "KMF",
                  "sample": "KMF"
                },
                {
                  "value": "KPW",
                  "label": "KPW",
                  "sample": "KPW"
                },
                {
                  "value": "KRW",
                  "label": "KRW",
                  "sample": "KRW"
                },
                {
                  "value": "KWD",
                  "label": "KWD",
                  "sample": "KWD"
                },
                {
                  "value": "KYD",
                  "label": "KYD",
                  "sample": "KYD"
                },
                {
                  "value": "KZT",
                  "label": "KZT",
                  "sample": "KZT"
                },
                {
                  "value": "LAK",
                  "label": "LAK",
                  "sample": "LAK"
                },
                {
                  "value": "LBP",
                  "label": "LBP",
                  "sample": "LBP"
                },
                {
                  "value": "LKR",
                  "label": "LKR",
                  "sample": "LKR"
                },
                {
                  "value": "LRD",
                  "label": "LRD",
                  "sample": "LRD"
                },
                {
                  "value": "LSL",
                  "label": "LSL",
                  "sample": "LSL"
                },
                {
                  "value": "LTL",
                  "label": "LTL",
                  "sample": "LTL"
                },
                {
                  "value": "LVL",
                  "label": "LVL",
                  "sample": "LVL"
                },
                {
                  "value": "LYD",
                  "label": "LYD",
                  "sample": "LYD"
                },
                {
                  "value": "MAD",
                  "label": "MAD",
                  "sample": "MAD"
                },
                {
                  "value": "MDL",
                  "label": "MDL",
                  "sample": "MDL"
                },
                {
                  "value": "MGA",
                  "label": "MGA",
                  "sample": "MGA"
                },
                {
                  "value": "MKD",
                  "label": "MKD",
                  "sample": "MKD"
                },
                {
                  "value": "MMK",
                  "label": "MMK",
                  "sample": "MMK"
                },
                {
                  "value": "MNT",
                  "label": "MNT",
                  "sample": "MNT"
                },
                {
                  "value": "MOP",
                  "label": "MOP",
                  "sample": "MOP"
                },
                {
                  "value": "MRO",
                  "label": "MRO",
                  "sample": "MRO"
                },
                {
                  "value": "MRU",
                  "label": "MRU",
                  "sample": "MRU"
                },
                {
                  "value": "MUR",
                  "label": "MUR",
                  "sample": "MUR"
                },
                {
                  "value": "MVR",
                  "label": "MVR",
                  "sample": "MVR"
                },
                {
                  "value": "MWK",
                  "label": "MWK",
                  "sample": "MWK"
                },
                {
                  "value": "MXN",
                  "label": "MXN",
                  "sample": "MXN"
                },
                {
                  "value": "MXV",
                  "label": "MXV",
                  "sample": "MXV"
                },
                {
                  "value": "MYR",
                  "label": "MYR",
                  "sample": "MYR"
                },
                {
                  "value": "MZN",
                  "label": "MZN",
                  "sample": "MZN"
                },
                {
                  "value": "NAD",
                  "label": "NAD",
                  "sample": "NAD"
                },
                {
                  "value": "NGN",
                  "label": "NGN",
                  "sample": "NGN"
                },
                {
                  "value": "NIO",
                  "label": "NIO",
                  "sample": "NIO"
                },
                {
                  "value": "NOK",
                  "label": "NOK",
                  "sample": "NOK"
                },
                {
                  "value": "NPR",
                  "label": "NPR",
                  "sample": "NPR"
                },
                {
                  "value": "NZD",
                  "label": "NZD",
                  "sample": "NZD"
                },
                {
                  "value": "OMR",
                  "label": "OMR",
                  "sample": "OMR"
                },
                {
                  "value": "PAB",
                  "label": "PAB",
                  "sample": "PAB"
                },
                {
                  "value": "PEN",
                  "label": "PEN",
                  "sample": "PEN"
                },
                {
                  "value": "PGK",
                  "label": "PGK",
                  "sample": "PGK"
                },
                {
                  "value": "PHP",
                  "label": "PHP",
                  "sample": "PHP"
                },
                {
                  "value": "PKR",
                  "label": "PKR",
                  "sample": "PKR"
                },
                {
                  "value": "PLN",
                  "label": "PLN",
                  "sample": "PLN"
                },
                {
                  "value": "PYG",
                  "label": "PYG",
                  "sample": "PYG"
                },
                {
                  "value": "QAR",
                  "label": "QAR",
                  "sample": "QAR"
                },
                {
                  "value": "RON",
                  "label": "RON",
                  "sample": "RON"
                },
                {
                  "value": "RSD",
                  "label": "RSD",
                  "sample": "RSD"
                },
                {
                  "value": "RUB",
                  "label": "RUB",
                  "sample": "RUB"
                },
                {
                  "value": "RWF",
                  "label": "RWF",
                  "sample": "RWF"
                },
                {
                  "value": "SAR",
                  "label": "SAR",
                  "sample": "SAR"
                },
                {
                  "value": "SBD",
                  "label": "SBD",
                  "sample": "SBD"
                },
                {
                  "value": "SCR",
                  "label": "SCR",
                  "sample": "SCR"
                },
                {
                  "value": "SDG",
                  "label": "SDG",
                  "sample": "SDG"
                },
                {
                  "value": "SEK",
                  "label": "SEK",
                  "sample": "SEK"
                },
                {
                  "value": "SGD",
                  "label": "SGD",
                  "sample": "SGD"
                },
                {
                  "value": "SHP",
                  "label": "SHP",
                  "sample": "SHP"
                },
                {
                  "value": "SKK",
                  "label": "SKK",
                  "sample": "SKK"
                },
                {
                  "value": "SLE",
                  "label": "SLE",
                  "sample": "SLE"
                },
                {
                  "value": "SLL",
                  "label": "SLL",
                  "sample": "SLL"
                },
                {
                  "value": "SOS",
                  "label": "SOS",
                  "sample": "SOS"
                },
                {
                  "value": "SRD",
                  "label": "SRD",
                  "sample": "SRD"
                },
                {
                  "value": "STD",
                  "label": "STD",
                  "sample": "STD"
                },
                {
                  "value": "STN",
                  "label": "STN",
                  "sample": "STN"
                },
                {
                  "value": "SVC",
                  "label": "SVC",
                  "sample": "SVC"
                },
                {
                  "value": "SYP",
                  "label": "SYP",
                  "sample": "SYP"
                },
                {
                  "value": "SZL",
                  "label": "SZL",
                  "sample": "SZL"
                },
                {
                  "value": "THB",
                  "label": "THB",
                  "sample": "THB"
                },
                {
                  "value": "TJS",
                  "label": "TJS",
                  "sample": "TJS"
                },
                {
                  "value": "TMT",
                  "label": "TMT",
                  "sample": "TMT"
                },
                {
                  "value": "TND",
                  "label": "TND",
                  "sample": "TND"
                },
                {
                  "value": "TOP",
                  "label": "TOP",
                  "sample": "TOP"
                },
                {
                  "value": "TRY",
                  "label": "TRY",
                  "sample": "TRY"
                },
                {
                  "value": "TTD",
                  "label": "TTD",
                  "sample": "TTD"
                },
                {
                  "value": "TWD",
                  "label": "TWD",
                  "sample": "TWD"
                },
                {
                  "value": "TZS",
                  "label": "TZS",
                  "sample": "TZS"
                },
                {
                  "value": "UAH",
                  "label": "UAH",
                  "sample": "UAH"
                },
                {
                  "value": "UGX",
                  "label": "UGX",
                  "sample": "UGX"
                },
                {
                  "value": "USD",
                  "label": "USD",
                  "sample": "USD"
                },
                {
                  "value": "UYU",
                  "label": "UYU",
                  "sample": "UYU"
                },
                {
                  "value": "UZS",
                  "label": "UZS",
                  "sample": "UZS"
                },
                {
                  "value": "VEF",
                  "label": "VEF",
                  "sample": "VEF"
                },
                {
                  "value": "VES",
                  "label": "VES",
                  "sample": "VES"
                },
                {
                  "value": "VND",
                  "label": "VND",
                  "sample": "VND"
                },
                {
                  "value": "VUV",
                  "label": "VUV",
                  "sample": "VUV"
                },
                {
                  "value": "WST",
                  "label": "WST",
                  "sample": "WST"
                },
                {
                  "value": "XAF",
                  "label": "XAF",
                  "sample": "XAF"
                },
                {
                  "value": "XCD",
                  "label": "XCD",
                  "sample": "XCD"
                },
                {
                  "value": "XOF",
                  "label": "XOF",
                  "sample": "XOF"
                },
                {
                  "value": "XPF",
                  "label": "XPF",
                  "sample": "XPF"
                },
                {
                  "value": "YER",
                  "label": "YER",
                  "sample": "YER"
                },
                {
                  "value": "ZAR",
                  "label": "ZAR",
                  "sample": "ZAR"
                },
                {
                  "value": "ZMW",
                  "label": "ZMW",
                  "sample": "ZMW"
                },
                {
                  "value": "ZMK",
                  "label": "ZMK",
                  "sample": "ZMK"
                },
                {
                  "value": "ZWD",
                  "label": "ZWD",
                  "sample": "ZWD"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.Invoice.Contact.XeroNetworkKey",
              "label": "Xero Network Key",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Store XeroNetworkKey for contacts."
            },
            {
              "key": "body.Invoice.Contact.SalesDefaultAccountCode",
              "label": "Sales Default Account Code",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The default sales account code for contacts"
            },
            {
              "key": "body.Invoice.Contact.PurchasesDefaultAccountCode",
              "label": "Purchases Default Account Code",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The default purchases account code for contacts"
            },
            {
              "key": "body.Invoice.Contact.SalesTrackingCategories",
              "label": "Sales Tracking Categories",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Contact.PurchasesTrackingCategories",
              "label": "Purchases Tracking Categories",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Contact.TrackingCategoryName",
              "label": "Tracking Category Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The name of the Tracking Category assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories"
            },
            {
              "key": "body.Invoice.Contact.TrackingCategoryOption",
              "label": "Tracking Category Option",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The name of the Tracking Option assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories"
            },
            {
              "key": "body.Invoice.Contact.PaymentTerms.Bills.Day",
              "label": "Day",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "",
              "required": false,
              "helpText": "Day of Month (0-31)"
            },
            {
              "key": "body.Invoice.Contact.PaymentTerms.Bills.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "DAYSAFTERBILLDATE",
                  "DAYSAFTERBILLMONTH",
                  "OFCURRENTMONTH",
                  "OFFOLLOWINGMONTH"
                ]
              },
              "placeholder": "",
              "required": false,
              "choices": [
                {
                  "value": "DAYSAFTERBILLDATE",
                  "label": "DAYSAFTERBILLDATE",
                  "sample": "DAYSAFTERBILLDATE"
                },
                {
                  "value": "DAYSAFTERBILLMONTH",
                  "label": "DAYSAFTERBILLMONTH",
                  "sample": "DAYSAFTERBILLMONTH"
                },
                {
                  "value": "OFCURRENTMONTH",
                  "label": "OFCURRENTMONTH",
                  "sample": "OFCURRENTMONTH"
                },
                {
                  "value": "OFFOLLOWINGMONTH",
                  "label": "OFFOLLOWINGMONTH",
                  "sample": "OFFOLLOWINGMONTH"
                }
              ]
            },
            {
              "key": "body.Invoice.Contact.PaymentTerms.Sales.Day",
              "label": "Day",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "",
              "required": false,
              "helpText": "Day of Month (0-31)"
            },
            {
              "key": "body.Invoice.Contact.PaymentTerms.Sales.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "DAYSAFTERBILLDATE",
                  "DAYSAFTERBILLMONTH",
                  "OFCURRENTMONTH",
                  "OFFOLLOWINGMONTH"
                ]
              },
              "placeholder": "",
              "required": false,
              "choices": [
                {
                  "value": "DAYSAFTERBILLDATE",
                  "label": "DAYSAFTERBILLDATE",
                  "sample": "DAYSAFTERBILLDATE"
                },
                {
                  "value": "DAYSAFTERBILLMONTH",
                  "label": "DAYSAFTERBILLMONTH",
                  "sample": "DAYSAFTERBILLMONTH"
                },
                {
                  "value": "OFCURRENTMONTH",
                  "label": "OFCURRENTMONTH",
                  "sample": "OFCURRENTMONTH"
                },
                {
                  "value": "OFFOLLOWINGMONTH",
                  "label": "OFFOLLOWINGMONTH",
                  "sample": "OFFOLLOWINGMONTH"
                }
              ]
            },
            {
              "key": "body.Invoice.Contact.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of last update to contact",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.Invoice.Contact.ContactGroups",
              "label": "Contact Groups",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Contact.Website",
              "label": "Website",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Website address for contact (read only)"
            },
            {
              "key": "body.Invoice.Contact.BrandingTheme.BrandingThemeID",
              "label": "Branding Theme ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero identifier"
            },
            {
              "key": "body.Invoice.Contact.BrandingTheme.Name",
              "label": "Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Name of branding theme"
            },
            {
              "key": "body.Invoice.Contact.BrandingTheme.LogoUrl",
              "label": "Logo Url",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The location of the image file used as the logo on this branding theme"
            },
            {
              "key": "body.Invoice.Contact.BrandingTheme.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "INVOICE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Always INVOICE",
              "choices": [
                {
                  "value": "INVOICE",
                  "label": "INVOICE",
                  "sample": "INVOICE"
                }
              ]
            },
            {
              "key": "body.Invoice.Contact.BrandingTheme.SortOrder",
              "label": "Sort Order",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "",
              "required": false,
              "helpText": "Integer – ranked order of branding theme. The default branding theme has a value of 0"
            },
            {
              "key": "body.Invoice.Contact.BrandingTheme.CreatedDateUTC",
              "label": "Created Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of creation date of branding theme",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.Invoice.Contact.BatchPayments",
              "label": "Batch Payments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Bank details for use on a batch payment stored with each contact"
            },
            {
              "key": "body.Invoice.Contact.Discount",
              "label": "Discount",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The default discount rate for the contact (read only)"
            },
            {
              "key": "body.Invoice.Contact.Balances.AccountsReceivable.Outstanding",
              "label": "Outstanding",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.Invoice.Contact.Balances.AccountsReceivable.Overdue",
              "label": "Overdue",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.Invoice.Contact.Balances.AccountsPayable.Outstanding",
              "label": "Outstanding",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.Invoice.Contact.Balances.AccountsPayable.Overdue",
              "label": "Overdue",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.Invoice.Contact.Attachments",
              "label": "Attachments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Contact.HasAttachments",
              "label": "Has Attachments",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "A boolean to indicate if a contact has an attachment",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.Invoice.Contact.ValidationErrors",
              "label": "Validation Errors",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Contact.HasValidationErrors",
              "label": "Has Validation Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "A boolean to indicate if a contact has an validation errors",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.Invoice.Contact.StatusAttributeString",
              "label": "Status Attribute String",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Status of object"
            },
            {
              "key": "body.Invoice.LineItems",
              "label": "Line Items",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Date",
              "label": "Date",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Date invoice was issued – YYYY-MM-DD. If the Date element is not specified it will default to the current date based on the timezone setting of the organisation"
            },
            {
              "key": "body.Invoice.DueDate",
              "label": "Due Date",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Date invoice is due – YYYY-MM-DD"
            },
            {
              "key": "body.Invoice.LineAmountTypes",
              "label": "Line Amount Types",
              "type": "string",
              "validation": {
                "values": [
                  "Exclusive",
                  "Inclusive",
                  "NoTax"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Line amounts are exclusive of tax by default if you don’t specify this element. See Line Amount Types",
              "choices": [
                {
                  "value": "Exclusive",
                  "label": "Exclusive",
                  "sample": "Exclusive"
                },
                {
                  "value": "Inclusive",
                  "label": "Inclusive",
                  "sample": "Inclusive"
                },
                {
                  "value": "NoTax",
                  "label": "NoTax",
                  "sample": "NoTax"
                }
              ]
            },
            {
              "key": "body.Invoice.InvoiceNumber",
              "label": "Invoice Number",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "ACCREC – Unique alpha numeric code identifying invoice (when missing will auto-generate from your Organisation Invoice Settings) (max length = 255)"
            },
            {
              "key": "body.Invoice.Reference",
              "label": "Reference",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "ACCREC only – additional reference number"
            },
            {
              "key": "body.Invoice.BrandingThemeID",
              "label": "Branding Theme ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "See BrandingThemes"
            },
            {
              "key": "body.Invoice.Url",
              "label": "Url",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "URL link to a source document – shown as “Go to [appName]” in the Xero app"
            },
            {
              "key": "body.Invoice.CurrencyCode",
              "label": "Currency Code",
              "type": "string",
              "validation": {
                "values": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BYR",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EEK",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LTL",
                  "LVL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SKK",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "STD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "3 letter alpha code for the currency – see list of currency codes",
              "choices": [
                {
                  "value": "AED",
                  "label": "AED",
                  "sample": "AED"
                },
                {
                  "value": "AFN",
                  "label": "AFN",
                  "sample": "AFN"
                },
                {
                  "value": "ALL",
                  "label": "ALL",
                  "sample": "ALL"
                },
                {
                  "value": "AMD",
                  "label": "AMD",
                  "sample": "AMD"
                },
                {
                  "value": "ANG",
                  "label": "ANG",
                  "sample": "ANG"
                },
                {
                  "value": "AOA",
                  "label": "AOA",
                  "sample": "AOA"
                },
                {
                  "value": "ARS",
                  "label": "ARS",
                  "sample": "ARS"
                },
                {
                  "value": "AUD",
                  "label": "AUD",
                  "sample": "AUD"
                },
                {
                  "value": "AWG",
                  "label": "AWG",
                  "sample": "AWG"
                },
                {
                  "value": "AZN",
                  "label": "AZN",
                  "sample": "AZN"
                },
                {
                  "value": "BAM",
                  "label": "BAM",
                  "sample": "BAM"
                },
                {
                  "value": "BBD",
                  "label": "BBD",
                  "sample": "BBD"
                },
                {
                  "value": "BDT",
                  "label": "BDT",
                  "sample": "BDT"
                },
                {
                  "value": "BGN",
                  "label": "BGN",
                  "sample": "BGN"
                },
                {
                  "value": "BHD",
                  "label": "BHD",
                  "sample": "BHD"
                },
                {
                  "value": "BIF",
                  "label": "BIF",
                  "sample": "BIF"
                },
                {
                  "value": "BMD",
                  "label": "BMD",
                  "sample": "BMD"
                },
                {
                  "value": "BND",
                  "label": "BND",
                  "sample": "BND"
                },
                {
                  "value": "BOB",
                  "label": "BOB",
                  "sample": "BOB"
                },
                {
                  "value": "BRL",
                  "label": "BRL",
                  "sample": "BRL"
                },
                {
                  "value": "BSD",
                  "label": "BSD",
                  "sample": "BSD"
                },
                {
                  "value": "BTN",
                  "label": "BTN",
                  "sample": "BTN"
                },
                {
                  "value": "BWP",
                  "label": "BWP",
                  "sample": "BWP"
                },
                {
                  "value": "BYN",
                  "label": "BYN",
                  "sample": "BYN"
                },
                {
                  "value": "BYR",
                  "label": "BYR",
                  "sample": "BYR"
                },
                {
                  "value": "BZD",
                  "label": "BZD",
                  "sample": "BZD"
                },
                {
                  "value": "CAD",
                  "label": "CAD",
                  "sample": "CAD"
                },
                {
                  "value": "CDF",
                  "label": "CDF",
                  "sample": "CDF"
                },
                {
                  "value": "CHF",
                  "label": "CHF",
                  "sample": "CHF"
                },
                {
                  "value": "CLF",
                  "label": "CLF",
                  "sample": "CLF"
                },
                {
                  "value": "CLP",
                  "label": "CLP",
                  "sample": "CLP"
                },
                {
                  "value": "CNY",
                  "label": "CNY",
                  "sample": "CNY"
                },
                {
                  "value": "COP",
                  "label": "COP",
                  "sample": "COP"
                },
                {
                  "value": "CRC",
                  "label": "CRC",
                  "sample": "CRC"
                },
                {
                  "value": "CUC",
                  "label": "CUC",
                  "sample": "CUC"
                },
                {
                  "value": "CUP",
                  "label": "CUP",
                  "sample": "CUP"
                },
                {
                  "value": "CVE",
                  "label": "CVE",
                  "sample": "CVE"
                },
                {
                  "value": "CZK",
                  "label": "CZK",
                  "sample": "CZK"
                },
                {
                  "value": "DJF",
                  "label": "DJF",
                  "sample": "DJF"
                },
                {
                  "value": "DKK",
                  "label": "DKK",
                  "sample": "DKK"
                },
                {
                  "value": "DOP",
                  "label": "DOP",
                  "sample": "DOP"
                },
                {
                  "value": "DZD",
                  "label": "DZD",
                  "sample": "DZD"
                },
                {
                  "value": "EEK",
                  "label": "EEK",
                  "sample": "EEK"
                },
                {
                  "value": "EGP",
                  "label": "EGP",
                  "sample": "EGP"
                },
                {
                  "value": "ERN",
                  "label": "ERN",
                  "sample": "ERN"
                },
                {
                  "value": "ETB",
                  "label": "ETB",
                  "sample": "ETB"
                },
                {
                  "value": "EUR",
                  "label": "EUR",
                  "sample": "EUR"
                },
                {
                  "value": "FJD",
                  "label": "FJD",
                  "sample": "FJD"
                },
                {
                  "value": "FKP",
                  "label": "FKP",
                  "sample": "FKP"
                },
                {
                  "value": "GBP",
                  "label": "GBP",
                  "sample": "GBP"
                },
                {
                  "value": "GEL",
                  "label": "GEL",
                  "sample": "GEL"
                },
                {
                  "value": "GHS",
                  "label": "GHS",
                  "sample": "GHS"
                },
                {
                  "value": "GIP",
                  "label": "GIP",
                  "sample": "GIP"
                },
                {
                  "value": "GMD",
                  "label": "GMD",
                  "sample": "GMD"
                },
                {
                  "value": "GNF",
                  "label": "GNF",
                  "sample": "GNF"
                },
                {
                  "value": "GTQ",
                  "label": "GTQ",
                  "sample": "GTQ"
                },
                {
                  "value": "GYD",
                  "label": "GYD",
                  "sample": "GYD"
                },
                {
                  "value": "HKD",
                  "label": "HKD",
                  "sample": "HKD"
                },
                {
                  "value": "HNL",
                  "label": "HNL",
                  "sample": "HNL"
                },
                {
                  "value": "HRK",
                  "label": "HRK",
                  "sample": "HRK"
                },
                {
                  "value": "HTG",
                  "label": "HTG",
                  "sample": "HTG"
                },
                {
                  "value": "HUF",
                  "label": "HUF",
                  "sample": "HUF"
                },
                {
                  "value": "IDR",
                  "label": "IDR",
                  "sample": "IDR"
                },
                {
                  "value": "ILS",
                  "label": "ILS",
                  "sample": "ILS"
                },
                {
                  "value": "INR",
                  "label": "INR",
                  "sample": "INR"
                },
                {
                  "value": "IQD",
                  "label": "IQD",
                  "sample": "IQD"
                },
                {
                  "value": "IRR",
                  "label": "IRR",
                  "sample": "IRR"
                },
                {
                  "value": "ISK",
                  "label": "ISK",
                  "sample": "ISK"
                },
                {
                  "value": "JMD",
                  "label": "JMD",
                  "sample": "JMD"
                },
                {
                  "value": "JOD",
                  "label": "JOD",
                  "sample": "JOD"
                },
                {
                  "value": "JPY",
                  "label": "JPY",
                  "sample": "JPY"
                },
                {
                  "value": "KES",
                  "label": "KES",
                  "sample": "KES"
                },
                {
                  "value": "KGS",
                  "label": "KGS",
                  "sample": "KGS"
                },
                {
                  "value": "KHR",
                  "label": "KHR",
                  "sample": "KHR"
                },
                {
                  "value": "KMF",
                  "label": "KMF",
                  "sample": "KMF"
                },
                {
                  "value": "KPW",
                  "label": "KPW",
                  "sample": "KPW"
                },
                {
                  "value": "KRW",
                  "label": "KRW",
                  "sample": "KRW"
                },
                {
                  "value": "KWD",
                  "label": "KWD",
                  "sample": "KWD"
                },
                {
                  "value": "KYD",
                  "label": "KYD",
                  "sample": "KYD"
                },
                {
                  "value": "KZT",
                  "label": "KZT",
                  "sample": "KZT"
                },
                {
                  "value": "LAK",
                  "label": "LAK",
                  "sample": "LAK"
                },
                {
                  "value": "LBP",
                  "label": "LBP",
                  "sample": "LBP"
                },
                {
                  "value": "LKR",
                  "label": "LKR",
                  "sample": "LKR"
                },
                {
                  "value": "LRD",
                  "label": "LRD",
                  "sample": "LRD"
                },
                {
                  "value": "LSL",
                  "label": "LSL",
                  "sample": "LSL"
                },
                {
                  "value": "LTL",
                  "label": "LTL",
                  "sample": "LTL"
                },
                {
                  "value": "LVL",
                  "label": "LVL",
                  "sample": "LVL"
                },
                {
                  "value": "LYD",
                  "label": "LYD",
                  "sample": "LYD"
                },
                {
                  "value": "MAD",
                  "label": "MAD",
                  "sample": "MAD"
                },
                {
                  "value": "MDL",
                  "label": "MDL",
                  "sample": "MDL"
                },
                {
                  "value": "MGA",
                  "label": "MGA",
                  "sample": "MGA"
                },
                {
                  "value": "MKD",
                  "label": "MKD",
                  "sample": "MKD"
                },
                {
                  "value": "MMK",
                  "label": "MMK",
                  "sample": "MMK"
                },
                {
                  "value": "MNT",
                  "label": "MNT",
                  "sample": "MNT"
                },
                {
                  "value": "MOP",
                  "label": "MOP",
                  "sample": "MOP"
                },
                {
                  "value": "MRO",
                  "label": "MRO",
                  "sample": "MRO"
                },
                {
                  "value": "MRU",
                  "label": "MRU",
                  "sample": "MRU"
                },
                {
                  "value": "MUR",
                  "label": "MUR",
                  "sample": "MUR"
                },
                {
                  "value": "MVR",
                  "label": "MVR",
                  "sample": "MVR"
                },
                {
                  "value": "MWK",
                  "label": "MWK",
                  "sample": "MWK"
                },
                {
                  "value": "MXN",
                  "label": "MXN",
                  "sample": "MXN"
                },
                {
                  "value": "MXV",
                  "label": "MXV",
                  "sample": "MXV"
                },
                {
                  "value": "MYR",
                  "label": "MYR",
                  "sample": "MYR"
                },
                {
                  "value": "MZN",
                  "label": "MZN",
                  "sample": "MZN"
                },
                {
                  "value": "NAD",
                  "label": "NAD",
                  "sample": "NAD"
                },
                {
                  "value": "NGN",
                  "label": "NGN",
                  "sample": "NGN"
                },
                {
                  "value": "NIO",
                  "label": "NIO",
                  "sample": "NIO"
                },
                {
                  "value": "NOK",
                  "label": "NOK",
                  "sample": "NOK"
                },
                {
                  "value": "NPR",
                  "label": "NPR",
                  "sample": "NPR"
                },
                {
                  "value": "NZD",
                  "label": "NZD",
                  "sample": "NZD"
                },
                {
                  "value": "OMR",
                  "label": "OMR",
                  "sample": "OMR"
                },
                {
                  "value": "PAB",
                  "label": "PAB",
                  "sample": "PAB"
                },
                {
                  "value": "PEN",
                  "label": "PEN",
                  "sample": "PEN"
                },
                {
                  "value": "PGK",
                  "label": "PGK",
                  "sample": "PGK"
                },
                {
                  "value": "PHP",
                  "label": "PHP",
                  "sample": "PHP"
                },
                {
                  "value": "PKR",
                  "label": "PKR",
                  "sample": "PKR"
                },
                {
                  "value": "PLN",
                  "label": "PLN",
                  "sample": "PLN"
                },
                {
                  "value": "PYG",
                  "label": "PYG",
                  "sample": "PYG"
                },
                {
                  "value": "QAR",
                  "label": "QAR",
                  "sample": "QAR"
                },
                {
                  "value": "RON",
                  "label": "RON",
                  "sample": "RON"
                },
                {
                  "value": "RSD",
                  "label": "RSD",
                  "sample": "RSD"
                },
                {
                  "value": "RUB",
                  "label": "RUB",
                  "sample": "RUB"
                },
                {
                  "value": "RWF",
                  "label": "RWF",
                  "sample": "RWF"
                },
                {
                  "value": "SAR",
                  "label": "SAR",
                  "sample": "SAR"
                },
                {
                  "value": "SBD",
                  "label": "SBD",
                  "sample": "SBD"
                },
                {
                  "value": "SCR",
                  "label": "SCR",
                  "sample": "SCR"
                },
                {
                  "value": "SDG",
                  "label": "SDG",
                  "sample": "SDG"
                },
                {
                  "value": "SEK",
                  "label": "SEK",
                  "sample": "SEK"
                },
                {
                  "value": "SGD",
                  "label": "SGD",
                  "sample": "SGD"
                },
                {
                  "value": "SHP",
                  "label": "SHP",
                  "sample": "SHP"
                },
                {
                  "value": "SKK",
                  "label": "SKK",
                  "sample": "SKK"
                },
                {
                  "value": "SLE",
                  "label": "SLE",
                  "sample": "SLE"
                },
                {
                  "value": "SLL",
                  "label": "SLL",
                  "sample": "SLL"
                },
                {
                  "value": "SOS",
                  "label": "SOS",
                  "sample": "SOS"
                },
                {
                  "value": "SRD",
                  "label": "SRD",
                  "sample": "SRD"
                },
                {
                  "value": "STD",
                  "label": "STD",
                  "sample": "STD"
                },
                {
                  "value": "STN",
                  "label": "STN",
                  "sample": "STN"
                },
                {
                  "value": "SVC",
                  "label": "SVC",
                  "sample": "SVC"
                },
                {
                  "value": "SYP",
                  "label": "SYP",
                  "sample": "SYP"
                },
                {
                  "value": "SZL",
                  "label": "SZL",
                  "sample": "SZL"
                },
                {
                  "value": "THB",
                  "label": "THB",
                  "sample": "THB"
                },
                {
                  "value": "TJS",
                  "label": "TJS",
                  "sample": "TJS"
                },
                {
                  "value": "TMT",
                  "label": "TMT",
                  "sample": "TMT"
                },
                {
                  "value": "TND",
                  "label": "TND",
                  "sample": "TND"
                },
                {
                  "value": "TOP",
                  "label": "TOP",
                  "sample": "TOP"
                },
                {
                  "value": "TRY",
                  "label": "TRY",
                  "sample": "TRY"
                },
                {
                  "value": "TTD",
                  "label": "TTD",
                  "sample": "TTD"
                },
                {
                  "value": "TWD",
                  "label": "TWD",
                  "sample": "TWD"
                },
                {
                  "value": "TZS",
                  "label": "TZS",
                  "sample": "TZS"
                },
                {
                  "value": "UAH",
                  "label": "UAH",
                  "sample": "UAH"
                },
                {
                  "value": "UGX",
                  "label": "UGX",
                  "sample": "UGX"
                },
                {
                  "value": "USD",
                  "label": "USD",
                  "sample": "USD"
                },
                {
                  "value": "UYU",
                  "label": "UYU",
                  "sample": "UYU"
                },
                {
                  "value": "UZS",
                  "label": "UZS",
                  "sample": "UZS"
                },
                {
                  "value": "VEF",
                  "label": "VEF",
                  "sample": "VEF"
                },
                {
                  "value": "VES",
                  "label": "VES",
                  "sample": "VES"
                },
                {
                  "value": "VND",
                  "label": "VND",
                  "sample": "VND"
                },
                {
                  "value": "VUV",
                  "label": "VUV",
                  "sample": "VUV"
                },
                {
                  "value": "WST",
                  "label": "WST",
                  "sample": "WST"
                },
                {
                  "value": "XAF",
                  "label": "XAF",
                  "sample": "XAF"
                },
                {
                  "value": "XCD",
                  "label": "XCD",
                  "sample": "XCD"
                },
                {
                  "value": "XOF",
                  "label": "XOF",
                  "sample": "XOF"
                },
                {
                  "value": "XPF",
                  "label": "XPF",
                  "sample": "XPF"
                },
                {
                  "value": "YER",
                  "label": "YER",
                  "sample": "YER"
                },
                {
                  "value": "ZAR",
                  "label": "ZAR",
                  "sample": "ZAR"
                },
                {
                  "value": "ZMW",
                  "label": "ZMW",
                  "sample": "ZMW"
                },
                {
                  "value": "ZMK",
                  "label": "ZMK",
                  "sample": "ZMK"
                },
                {
                  "value": "ZWD",
                  "label": "ZWD",
                  "sample": "ZWD"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.Invoice.CurrencyRate",
              "label": "Currency Rate",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The currency rate for a multicurrency invoice. If no rate is specified, the XE.com day rate is used. (max length = [18].[6])"
            },
            {
              "key": "body.Invoice.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "DRAFT",
                  "SUBMITTED",
                  "DELETED",
                  "AUTHORISED",
                  "PAID",
                  "VOIDED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Invoice Status Codes",
              "choices": [
                {
                  "value": "DRAFT",
                  "label": "DRAFT",
                  "sample": "DRAFT"
                },
                {
                  "value": "SUBMITTED",
                  "label": "SUBMITTED",
                  "sample": "SUBMITTED"
                },
                {
                  "value": "DELETED",
                  "label": "DELETED",
                  "sample": "DELETED"
                },
                {
                  "value": "AUTHORISED",
                  "label": "AUTHORISED",
                  "sample": "AUTHORISED"
                },
                {
                  "value": "PAID",
                  "label": "PAID",
                  "sample": "PAID"
                },
                {
                  "value": "VOIDED",
                  "label": "VOIDED",
                  "sample": "VOIDED"
                }
              ]
            },
            {
              "key": "body.Invoice.SentToContact",
              "label": "Sent To Contact",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Boolean to set whether the invoice in the Xero app should be marked as “sent”. This can be set only on invoices that have been approved"
            },
            {
              "key": "body.Invoice.ExpectedPaymentDate",
              "label": "Expected Payment Date",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Shown on sales invoices (Accounts Receivable) when this has been set"
            },
            {
              "key": "body.Invoice.PlannedPaymentDate",
              "label": "Planned Payment Date",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Shown on bills (Accounts Payable) when this has been set"
            },
            {
              "key": "body.Invoice.CISDeduction",
              "label": "CIS Deduction",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "CIS deduction for UK contractors"
            },
            {
              "key": "body.Invoice.CISRate",
              "label": "CIS Rate",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "CIS Deduction rate for the organisation"
            },
            {
              "key": "body.Invoice.SubTotal",
              "label": "Sub Total",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Total of invoice excluding taxes"
            },
            {
              "key": "body.Invoice.TotalTax",
              "label": "Total Tax",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Total tax on invoice"
            },
            {
              "key": "body.Invoice.Total",
              "label": "Total",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Total of Invoice tax inclusive (i.e. SubTotal + TotalTax). This will be ignored if it doesn’t equal the sum of the LineAmounts"
            },
            {
              "key": "body.Invoice.TotalDiscount",
              "label": "Total Discount",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Total of discounts applied on the invoice line items"
            },
            {
              "key": "body.Invoice.InvoiceID",
              "label": "Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero generated unique identifier for invoice"
            },
            {
              "key": "body.Invoice.RepeatingInvoiceID",
              "label": "Repeating Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero generated unique identifier for repeating invoices"
            },
            {
              "key": "body.Invoice.HasAttachments",
              "label": "Has Attachments",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "boolean to indicate if an invoice has an attachment",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.Invoice.IsDiscounted",
              "label": "Is Discounted",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "boolean to indicate if an invoice has a discount"
            },
            {
              "key": "body.Invoice.Payments",
              "label": "Payments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Prepayments",
              "label": "Prepayments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Overpayments",
              "label": "Overpayments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.AmountDue",
              "label": "Amount Due",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Amount remaining to be paid on invoice"
            },
            {
              "key": "body.Invoice.AmountPaid",
              "label": "Amount Paid",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Sum of payments received for invoice"
            },
            {
              "key": "body.Invoice.FullyPaidOnDate",
              "label": "Fully Paid On Date",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The date the invoice was fully paid. Only returned on fully paid invoices"
            },
            {
              "key": "body.Invoice.AmountCredited",
              "label": "Amount Credited",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Sum of all credit notes, over-payments and pre-payments applied to invoice"
            },
            {
              "key": "body.Invoice.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "Last modified date UTC format",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.Invoice.CreditNotes",
              "label": "Credit Notes",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Attachments",
              "label": "Attachments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.HasErrors",
              "label": "Has Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "A boolean to indicate if a invoice has an validation errors",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.Invoice.StatusAttributeString",
              "label": "Status Attribute String",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "A string to indicate if a invoice status"
            },
            {
              "key": "body.Invoice.ValidationErrors",
              "label": "Validation Errors",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Invoice.Warnings",
              "label": "Warnings",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.CreditNote.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "ACCPAYCREDIT",
                  "ACCRECCREDIT"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Credit Note Types",
              "choices": [
                {
                  "value": "ACCPAYCREDIT",
                  "label": "ACCPAYCREDIT",
                  "sample": "ACCPAYCREDIT"
                },
                {
                  "value": "ACCRECCREDIT",
                  "label": "ACCRECCREDIT",
                  "sample": "ACCRECCREDIT"
                }
              ]
            },
            {
              "key": "body.CreditNote.Contact.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero identifier"
            },
            {
              "key": "body.CreditNote.Contact.MergedToContactID",
              "label": "Merged To Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "ID for the destination of a merged contact. Only returned when using paging or when fetching a contact by ContactId or ContactNumber."
            },
            {
              "key": "body.CreditNote.Contact.ContactNumber",
              "label": "Contact Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "This can be updated via the API only i.e. This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50). If the Contact Number is used, this is displayed as Contact Code in the Contacts UI in Xero."
            },
            {
              "key": "body.CreditNote.Contact.AccountNumber",
              "label": "Account Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "A user defined account number. This can be updated via the API and the Xero UI (max length = 50)"
            },
            {
              "key": "body.CreditNote.Contact.ContactStatus",
              "label": "Contact Status",
              "type": "string",
              "validation": {
                "values": [
                  "ACTIVE",
                  "ARCHIVED",
                  "GDPRREQUEST"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Current status of a contact – see contact status types",
              "choices": [
                {
                  "value": "ACTIVE",
                  "label": "ACTIVE",
                  "sample": "ACTIVE"
                },
                {
                  "value": "ARCHIVED",
                  "label": "ARCHIVED",
                  "sample": "ARCHIVED"
                },
                {
                  "value": "GDPRREQUEST",
                  "label": "GDPRREQUEST",
                  "sample": "GDPRREQUEST"
                }
              ]
            },
            {
              "key": "body.CreditNote.Contact.Name",
              "label": "Name",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "Full name of contact/organisation (max length = 255)"
            },
            {
              "key": "body.CreditNote.Contact.FirstName",
              "label": "First Name",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "First name of contact person (max length = 255)"
            },
            {
              "key": "body.CreditNote.Contact.LastName",
              "label": "Last Name",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "Last name of contact person (max length = 255)"
            },
            {
              "key": "body.CreditNote.Contact.CompanyNumber",
              "label": "Company Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "Company registration number (max length = 50)"
            },
            {
              "key": "body.CreditNote.Contact.EmailAddress",
              "label": "Email Address",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "Email address of contact person (umlauts not supported) (max length  = 255)"
            },
            {
              "key": "body.CreditNote.Contact.SkypeUserName",
              "label": "Skype User Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Skype user name of contact"
            },
            {
              "key": "body.CreditNote.Contact.ContactPersons",
              "label": "Contact Persons",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.CreditNote.Contact.BankAccountDetails",
              "label": "Bank Account Details",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Bank account number of contact"
            },
            {
              "key": "body.CreditNote.Contact.TaxNumber",
              "label": "Tax Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "Tax number of contact – this is also known as the ABN (Australia), GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and global) in the Xero UI depending on which regionalized version of Xero you are using (max length = 50)"
            },
            {
              "key": "body.CreditNote.Contact.AccountsReceivableTaxType",
              "label": "Accounts Receivable Tax Type",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The tax type from TaxRates"
            },
            {
              "key": "body.CreditNote.Contact.AccountsPayableTaxType",
              "label": "Accounts Payable Tax Type",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The tax type from TaxRates"
            },
            {
              "key": "body.CreditNote.Contact.Addresses",
              "label": "Addresses",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.CreditNote.Contact.Phones",
              "label": "Phones",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.CreditNote.Contact.IsSupplier",
              "label": "Is Supplier",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "true or false – Boolean that describes if a contact that has any AP  invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts payable invoice is generated against this contact."
            },
            {
              "key": "body.CreditNote.Contact.IsCustomer",
              "label": "Is Customer",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "true or false – Boolean that describes if a contact has any AR invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts receivable invoice is generated against this contact."
            },
            {
              "key": "body.CreditNote.Contact.SalesDefaultLineAmountType",
              "label": "Sales Default Line Amount Type",
              "type": "string",
              "validation": {
                "values": [
                  "INCLUSIVE",
                  "EXCLUSIVE",
                  "NONE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The default sales line amount type for a contact. Only available when summaryOnly parameter or paging is used, or when fetch by ContactId or ContactNumber.",
              "choices": [
                {
                  "value": "INCLUSIVE",
                  "label": "INCLUSIVE",
                  "sample": "INCLUSIVE"
                },
                {
                  "value": "EXCLUSIVE",
                  "label": "EXCLUSIVE",
                  "sample": "EXCLUSIVE"
                },
                {
                  "value": "NONE",
                  "label": "NONE",
                  "sample": "NONE"
                }
              ]
            },
            {
              "key": "body.CreditNote.Contact.PurchasesDefaultLineAmountType",
              "label": "Purchases Default Line Amount Type",
              "type": "string",
              "validation": {
                "values": [
                  "INCLUSIVE",
                  "EXCLUSIVE",
                  "NONE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The default purchases line amount type for a contact Only available when summaryOnly parameter or paging is used, or when fetch by ContactId or ContactNumber.",
              "choices": [
                {
                  "value": "INCLUSIVE",
                  "label": "INCLUSIVE",
                  "sample": "INCLUSIVE"
                },
                {
                  "value": "EXCLUSIVE",
                  "label": "EXCLUSIVE",
                  "sample": "EXCLUSIVE"
                },
                {
                  "value": "NONE",
                  "label": "NONE",
                  "sample": "NONE"
                }
              ]
            },
            {
              "key": "body.CreditNote.Contact.DefaultCurrency",
              "label": "Default Currency",
              "type": "string",
              "validation": {
                "values": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BYR",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EEK",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LTL",
                  "LVL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SKK",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "STD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "3 letter alpha code for the currency – see list of currency codes",
              "choices": [
                {
                  "value": "AED",
                  "label": "AED",
                  "sample": "AED"
                },
                {
                  "value": "AFN",
                  "label": "AFN",
                  "sample": "AFN"
                },
                {
                  "value": "ALL",
                  "label": "ALL",
                  "sample": "ALL"
                },
                {
                  "value": "AMD",
                  "label": "AMD",
                  "sample": "AMD"
                },
                {
                  "value": "ANG",
                  "label": "ANG",
                  "sample": "ANG"
                },
                {
                  "value": "AOA",
                  "label": "AOA",
                  "sample": "AOA"
                },
                {
                  "value": "ARS",
                  "label": "ARS",
                  "sample": "ARS"
                },
                {
                  "value": "AUD",
                  "label": "AUD",
                  "sample": "AUD"
                },
                {
                  "value": "AWG",
                  "label": "AWG",
                  "sample": "AWG"
                },
                {
                  "value": "AZN",
                  "label": "AZN",
                  "sample": "AZN"
                },
                {
                  "value": "BAM",
                  "label": "BAM",
                  "sample": "BAM"
                },
                {
                  "value": "BBD",
                  "label": "BBD",
                  "sample": "BBD"
                },
                {
                  "value": "BDT",
                  "label": "BDT",
                  "sample": "BDT"
                },
                {
                  "value": "BGN",
                  "label": "BGN",
                  "sample": "BGN"
                },
                {
                  "value": "BHD",
                  "label": "BHD",
                  "sample": "BHD"
                },
                {
                  "value": "BIF",
                  "label": "BIF",
                  "sample": "BIF"
                },
                {
                  "value": "BMD",
                  "label": "BMD",
                  "sample": "BMD"
                },
                {
                  "value": "BND",
                  "label": "BND",
                  "sample": "BND"
                },
                {
                  "value": "BOB",
                  "label": "BOB",
                  "sample": "BOB"
                },
                {
                  "value": "BRL",
                  "label": "BRL",
                  "sample": "BRL"
                },
                {
                  "value": "BSD",
                  "label": "BSD",
                  "sample": "BSD"
                },
                {
                  "value": "BTN",
                  "label": "BTN",
                  "sample": "BTN"
                },
                {
                  "value": "BWP",
                  "label": "BWP",
                  "sample": "BWP"
                },
                {
                  "value": "BYN",
                  "label": "BYN",
                  "sample": "BYN"
                },
                {
                  "value": "BYR",
                  "label": "BYR",
                  "sample": "BYR"
                },
                {
                  "value": "BZD",
                  "label": "BZD",
                  "sample": "BZD"
                },
                {
                  "value": "CAD",
                  "label": "CAD",
                  "sample": "CAD"
                },
                {
                  "value": "CDF",
                  "label": "CDF",
                  "sample": "CDF"
                },
                {
                  "value": "CHF",
                  "label": "CHF",
                  "sample": "CHF"
                },
                {
                  "value": "CLF",
                  "label": "CLF",
                  "sample": "CLF"
                },
                {
                  "value": "CLP",
                  "label": "CLP",
                  "sample": "CLP"
                },
                {
                  "value": "CNY",
                  "label": "CNY",
                  "sample": "CNY"
                },
                {
                  "value": "COP",
                  "label": "COP",
                  "sample": "COP"
                },
                {
                  "value": "CRC",
                  "label": "CRC",
                  "sample": "CRC"
                },
                {
                  "value": "CUC",
                  "label": "CUC",
                  "sample": "CUC"
                },
                {
                  "value": "CUP",
                  "label": "CUP",
                  "sample": "CUP"
                },
                {
                  "value": "CVE",
                  "label": "CVE",
                  "sample": "CVE"
                },
                {
                  "value": "CZK",
                  "label": "CZK",
                  "sample": "CZK"
                },
                {
                  "value": "DJF",
                  "label": "DJF",
                  "sample": "DJF"
                },
                {
                  "value": "DKK",
                  "label": "DKK",
                  "sample": "DKK"
                },
                {
                  "value": "DOP",
                  "label": "DOP",
                  "sample": "DOP"
                },
                {
                  "value": "DZD",
                  "label": "DZD",
                  "sample": "DZD"
                },
                {
                  "value": "EEK",
                  "label": "EEK",
                  "sample": "EEK"
                },
                {
                  "value": "EGP",
                  "label": "EGP",
                  "sample": "EGP"
                },
                {
                  "value": "ERN",
                  "label": "ERN",
                  "sample": "ERN"
                },
                {
                  "value": "ETB",
                  "label": "ETB",
                  "sample": "ETB"
                },
                {
                  "value": "EUR",
                  "label": "EUR",
                  "sample": "EUR"
                },
                {
                  "value": "FJD",
                  "label": "FJD",
                  "sample": "FJD"
                },
                {
                  "value": "FKP",
                  "label": "FKP",
                  "sample": "FKP"
                },
                {
                  "value": "GBP",
                  "label": "GBP",
                  "sample": "GBP"
                },
                {
                  "value": "GEL",
                  "label": "GEL",
                  "sample": "GEL"
                },
                {
                  "value": "GHS",
                  "label": "GHS",
                  "sample": "GHS"
                },
                {
                  "value": "GIP",
                  "label": "GIP",
                  "sample": "GIP"
                },
                {
                  "value": "GMD",
                  "label": "GMD",
                  "sample": "GMD"
                },
                {
                  "value": "GNF",
                  "label": "GNF",
                  "sample": "GNF"
                },
                {
                  "value": "GTQ",
                  "label": "GTQ",
                  "sample": "GTQ"
                },
                {
                  "value": "GYD",
                  "label": "GYD",
                  "sample": "GYD"
                },
                {
                  "value": "HKD",
                  "label": "HKD",
                  "sample": "HKD"
                },
                {
                  "value": "HNL",
                  "label": "HNL",
                  "sample": "HNL"
                },
                {
                  "value": "HRK",
                  "label": "HRK",
                  "sample": "HRK"
                },
                {
                  "value": "HTG",
                  "label": "HTG",
                  "sample": "HTG"
                },
                {
                  "value": "HUF",
                  "label": "HUF",
                  "sample": "HUF"
                },
                {
                  "value": "IDR",
                  "label": "IDR",
                  "sample": "IDR"
                },
                {
                  "value": "ILS",
                  "label": "ILS",
                  "sample": "ILS"
                },
                {
                  "value": "INR",
                  "label": "INR",
                  "sample": "INR"
                },
                {
                  "value": "IQD",
                  "label": "IQD",
                  "sample": "IQD"
                },
                {
                  "value": "IRR",
                  "label": "IRR",
                  "sample": "IRR"
                },
                {
                  "value": "ISK",
                  "label": "ISK",
                  "sample": "ISK"
                },
                {
                  "value": "JMD",
                  "label": "JMD",
                  "sample": "JMD"
                },
                {
                  "value": "JOD",
                  "label": "JOD",
                  "sample": "JOD"
                },
                {
                  "value": "JPY",
                  "label": "JPY",
                  "sample": "JPY"
                },
                {
                  "value": "KES",
                  "label": "KES",
                  "sample": "KES"
                },
                {
                  "value": "KGS",
                  "label": "KGS",
                  "sample": "KGS"
                },
                {
                  "value": "KHR",
                  "label": "KHR",
                  "sample": "KHR"
                },
                {
                  "value": "KMF",
                  "label": "KMF",
                  "sample": "KMF"
                },
                {
                  "value": "KPW",
                  "label": "KPW",
                  "sample": "KPW"
                },
                {
                  "value": "KRW",
                  "label": "KRW",
                  "sample": "KRW"
                },
                {
                  "value": "KWD",
                  "label": "KWD",
                  "sample": "KWD"
                },
                {
                  "value": "KYD",
                  "label": "KYD",
                  "sample": "KYD"
                },
                {
                  "value": "KZT",
                  "label": "KZT",
                  "sample": "KZT"
                },
                {
                  "value": "LAK",
                  "label": "LAK",
                  "sample": "LAK"
                },
                {
                  "value": "LBP",
                  "label": "LBP",
                  "sample": "LBP"
                },
                {
                  "value": "LKR",
                  "label": "LKR",
                  "sample": "LKR"
                },
                {
                  "value": "LRD",
                  "label": "LRD",
                  "sample": "LRD"
                },
                {
                  "value": "LSL",
                  "label": "LSL",
                  "sample": "LSL"
                },
                {
                  "value": "LTL",
                  "label": "LTL",
                  "sample": "LTL"
                },
                {
                  "value": "LVL",
                  "label": "LVL",
                  "sample": "LVL"
                },
                {
                  "value": "LYD",
                  "label": "LYD",
                  "sample": "LYD"
                },
                {
                  "value": "MAD",
                  "label": "MAD",
                  "sample": "MAD"
                },
                {
                  "value": "MDL",
                  "label": "MDL",
                  "sample": "MDL"
                },
                {
                  "value": "MGA",
                  "label": "MGA",
                  "sample": "MGA"
                },
                {
                  "value": "MKD",
                  "label": "MKD",
                  "sample": "MKD"
                },
                {
                  "value": "MMK",
                  "label": "MMK",
                  "sample": "MMK"
                },
                {
                  "value": "MNT",
                  "label": "MNT",
                  "sample": "MNT"
                },
                {
                  "value": "MOP",
                  "label": "MOP",
                  "sample": "MOP"
                },
                {
                  "value": "MRO",
                  "label": "MRO",
                  "sample": "MRO"
                },
                {
                  "value": "MRU",
                  "label": "MRU",
                  "sample": "MRU"
                },
                {
                  "value": "MUR",
                  "label": "MUR",
                  "sample": "MUR"
                },
                {
                  "value": "MVR",
                  "label": "MVR",
                  "sample": "MVR"
                },
                {
                  "value": "MWK",
                  "label": "MWK",
                  "sample": "MWK"
                },
                {
                  "value": "MXN",
                  "label": "MXN",
                  "sample": "MXN"
                },
                {
                  "value": "MXV",
                  "label": "MXV",
                  "sample": "MXV"
                },
                {
                  "value": "MYR",
                  "label": "MYR",
                  "sample": "MYR"
                },
                {
                  "value": "MZN",
                  "label": "MZN",
                  "sample": "MZN"
                },
                {
                  "value": "NAD",
                  "label": "NAD",
                  "sample": "NAD"
                },
                {
                  "value": "NGN",
                  "label": "NGN",
                  "sample": "NGN"
                },
                {
                  "value": "NIO",
                  "label": "NIO",
                  "sample": "NIO"
                },
                {
                  "value": "NOK",
                  "label": "NOK",
                  "sample": "NOK"
                },
                {
                  "value": "NPR",
                  "label": "NPR",
                  "sample": "NPR"
                },
                {
                  "value": "NZD",
                  "label": "NZD",
                  "sample": "NZD"
                },
                {
                  "value": "OMR",
                  "label": "OMR",
                  "sample": "OMR"
                },
                {
                  "value": "PAB",
                  "label": "PAB",
                  "sample": "PAB"
                },
                {
                  "value": "PEN",
                  "label": "PEN",
                  "sample": "PEN"
                },
                {
                  "value": "PGK",
                  "label": "PGK",
                  "sample": "PGK"
                },
                {
                  "value": "PHP",
                  "label": "PHP",
                  "sample": "PHP"
                },
                {
                  "value": "PKR",
                  "label": "PKR",
                  "sample": "PKR"
                },
                {
                  "value": "PLN",
                  "label": "PLN",
                  "sample": "PLN"
                },
                {
                  "value": "PYG",
                  "label": "PYG",
                  "sample": "PYG"
                },
                {
                  "value": "QAR",
                  "label": "QAR",
                  "sample": "QAR"
                },
                {
                  "value": "RON",
                  "label": "RON",
                  "sample": "RON"
                },
                {
                  "value": "RSD",
                  "label": "RSD",
                  "sample": "RSD"
                },
                {
                  "value": "RUB",
                  "label": "RUB",
                  "sample": "RUB"
                },
                {
                  "value": "RWF",
                  "label": "RWF",
                  "sample": "RWF"
                },
                {
                  "value": "SAR",
                  "label": "SAR",
                  "sample": "SAR"
                },
                {
                  "value": "SBD",
                  "label": "SBD",
                  "sample": "SBD"
                },
                {
                  "value": "SCR",
                  "label": "SCR",
                  "sample": "SCR"
                },
                {
                  "value": "SDG",
                  "label": "SDG",
                  "sample": "SDG"
                },
                {
                  "value": "SEK",
                  "label": "SEK",
                  "sample": "SEK"
                },
                {
                  "value": "SGD",
                  "label": "SGD",
                  "sample": "SGD"
                },
                {
                  "value": "SHP",
                  "label": "SHP",
                  "sample": "SHP"
                },
                {
                  "value": "SKK",
                  "label": "SKK",
                  "sample": "SKK"
                },
                {
                  "value": "SLE",
                  "label": "SLE",
                  "sample": "SLE"
                },
                {
                  "value": "SLL",
                  "label": "SLL",
                  "sample": "SLL"
                },
                {
                  "value": "SOS",
                  "label": "SOS",
                  "sample": "SOS"
                },
                {
                  "value": "SRD",
                  "label": "SRD",
                  "sample": "SRD"
                },
                {
                  "value": "STD",
                  "label": "STD",
                  "sample": "STD"
                },
                {
                  "value": "STN",
                  "label": "STN",
                  "sample": "STN"
                },
                {
                  "value": "SVC",
                  "label": "SVC",
                  "sample": "SVC"
                },
                {
                  "value": "SYP",
                  "label": "SYP",
                  "sample": "SYP"
                },
                {
                  "value": "SZL",
                  "label": "SZL",
                  "sample": "SZL"
                },
                {
                  "value": "THB",
                  "label": "THB",
                  "sample": "THB"
                },
                {
                  "value": "TJS",
                  "label": "TJS",
                  "sample": "TJS"
                },
                {
                  "value": "TMT",
                  "label": "TMT",
                  "sample": "TMT"
                },
                {
                  "value": "TND",
                  "label": "TND",
                  "sample": "TND"
                },
                {
                  "value": "TOP",
                  "label": "TOP",
                  "sample": "TOP"
                },
                {
                  "value": "TRY",
                  "label": "TRY",
                  "sample": "TRY"
                },
                {
                  "value": "TTD",
                  "label": "TTD",
                  "sample": "TTD"
                },
                {
                  "value": "TWD",
                  "label": "TWD",
                  "sample": "TWD"
                },
                {
                  "value": "TZS",
                  "label": "TZS",
                  "sample": "TZS"
                },
                {
                  "value": "UAH",
                  "label": "UAH",
                  "sample": "UAH"
                },
                {
                  "value": "UGX",
                  "label": "UGX",
                  "sample": "UGX"
                },
                {
                  "value": "USD",
                  "label": "USD",
                  "sample": "USD"
                },
                {
                  "value": "UYU",
                  "label": "UYU",
                  "sample": "UYU"
                },
                {
                  "value": "UZS",
                  "label": "UZS",
                  "sample": "UZS"
                },
                {
                  "value": "VEF",
                  "label": "VEF",
                  "sample": "VEF"
                },
                {
                  "value": "VES",
                  "label": "VES",
                  "sample": "VES"
                },
                {
                  "value": "VND",
                  "label": "VND",
                  "sample": "VND"
                },
                {
                  "value": "VUV",
                  "label": "VUV",
                  "sample": "VUV"
                },
                {
                  "value": "WST",
                  "label": "WST",
                  "sample": "WST"
                },
                {
                  "value": "XAF",
                  "label": "XAF",
                  "sample": "XAF"
                },
                {
                  "value": "XCD",
                  "label": "XCD",
                  "sample": "XCD"
                },
                {
                  "value": "XOF",
                  "label": "XOF",
                  "sample": "XOF"
                },
                {
                  "value": "XPF",
                  "label": "XPF",
                  "sample": "XPF"
                },
                {
                  "value": "YER",
                  "label": "YER",
                  "sample": "YER"
                },
                {
                  "value": "ZAR",
                  "label": "ZAR",
                  "sample": "ZAR"
                },
                {
                  "value": "ZMW",
                  "label": "ZMW",
                  "sample": "ZMW"
                },
                {
                  "value": "ZMK",
                  "label": "ZMK",
                  "sample": "ZMK"
                },
                {
                  "value": "ZWD",
                  "label": "ZWD",
                  "sample": "ZWD"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.CreditNote.Contact.XeroNetworkKey",
              "label": "Xero Network Key",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Store XeroNetworkKey for contacts."
            },
            {
              "key": "body.CreditNote.Contact.SalesDefaultAccountCode",
              "label": "Sales Default Account Code",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The default sales account code for contacts"
            },
            {
              "key": "body.CreditNote.Contact.PurchasesDefaultAccountCode",
              "label": "Purchases Default Account Code",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The default purchases account code for contacts"
            },
            {
              "key": "body.CreditNote.Contact.SalesTrackingCategories",
              "label": "Sales Tracking Categories",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.CreditNote.Contact.PurchasesTrackingCategories",
              "label": "Purchases Tracking Categories",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.CreditNote.Contact.TrackingCategoryName",
              "label": "Tracking Category Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The name of the Tracking Category assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories"
            },
            {
              "key": "body.CreditNote.Contact.TrackingCategoryOption",
              "label": "Tracking Category Option",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The name of the Tracking Option assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories"
            },
            {
              "key": "body.CreditNote.Contact.PaymentTerms.Bills.Day",
              "label": "Day",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "",
              "required": false,
              "helpText": "Day of Month (0-31)"
            },
            {
              "key": "body.CreditNote.Contact.PaymentTerms.Bills.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "DAYSAFTERBILLDATE",
                  "DAYSAFTERBILLMONTH",
                  "OFCURRENTMONTH",
                  "OFFOLLOWINGMONTH"
                ]
              },
              "placeholder": "",
              "required": false,
              "choices": [
                {
                  "value": "DAYSAFTERBILLDATE",
                  "label": "DAYSAFTERBILLDATE",
                  "sample": "DAYSAFTERBILLDATE"
                },
                {
                  "value": "DAYSAFTERBILLMONTH",
                  "label": "DAYSAFTERBILLMONTH",
                  "sample": "DAYSAFTERBILLMONTH"
                },
                {
                  "value": "OFCURRENTMONTH",
                  "label": "OFCURRENTMONTH",
                  "sample": "OFCURRENTMONTH"
                },
                {
                  "value": "OFFOLLOWINGMONTH",
                  "label": "OFFOLLOWINGMONTH",
                  "sample": "OFFOLLOWINGMONTH"
                }
              ]
            },
            {
              "key": "body.CreditNote.Contact.PaymentTerms.Sales.Day",
              "label": "Day",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "",
              "required": false,
              "helpText": "Day of Month (0-31)"
            },
            {
              "key": "body.CreditNote.Contact.PaymentTerms.Sales.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "DAYSAFTERBILLDATE",
                  "DAYSAFTERBILLMONTH",
                  "OFCURRENTMONTH",
                  "OFFOLLOWINGMONTH"
                ]
              },
              "placeholder": "",
              "required": false,
              "choices": [
                {
                  "value": "DAYSAFTERBILLDATE",
                  "label": "DAYSAFTERBILLDATE",
                  "sample": "DAYSAFTERBILLDATE"
                },
                {
                  "value": "DAYSAFTERBILLMONTH",
                  "label": "DAYSAFTERBILLMONTH",
                  "sample": "DAYSAFTERBILLMONTH"
                },
                {
                  "value": "OFCURRENTMONTH",
                  "label": "OFCURRENTMONTH",
                  "sample": "OFCURRENTMONTH"
                },
                {
                  "value": "OFFOLLOWINGMONTH",
                  "label": "OFFOLLOWINGMONTH",
                  "sample": "OFFOLLOWINGMONTH"
                }
              ]
            },
            {
              "key": "body.CreditNote.Contact.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of last update to contact",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.CreditNote.Contact.ContactGroups",
              "label": "Contact Groups",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.CreditNote.Contact.Website",
              "label": "Website",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Website address for contact (read only)"
            },
            {
              "key": "body.CreditNote.Contact.BrandingTheme.BrandingThemeID",
              "label": "Branding Theme ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero identifier"
            },
            {
              "key": "body.CreditNote.Contact.BrandingTheme.Name",
              "label": "Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Name of branding theme"
            },
            {
              "key": "body.CreditNote.Contact.BrandingTheme.LogoUrl",
              "label": "Logo Url",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The location of the image file used as the logo on this branding theme"
            },
            {
              "key": "body.CreditNote.Contact.BrandingTheme.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "INVOICE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Always INVOICE",
              "choices": [
                {
                  "value": "INVOICE",
                  "label": "INVOICE",
                  "sample": "INVOICE"
                }
              ]
            },
            {
              "key": "body.CreditNote.Contact.BrandingTheme.SortOrder",
              "label": "Sort Order",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "",
              "required": false,
              "helpText": "Integer – ranked order of branding theme. The default branding theme has a value of 0"
            },
            {
              "key": "body.CreditNote.Contact.BrandingTheme.CreatedDateUTC",
              "label": "Created Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of creation date of branding theme",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.CreditNote.Contact.BatchPayments",
              "label": "Batch Payments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Bank details for use on a batch payment stored with each contact"
            },
            {
              "key": "body.CreditNote.Contact.Discount",
              "label": "Discount",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The default discount rate for the contact (read only)"
            },
            {
              "key": "body.CreditNote.Contact.Balances.AccountsReceivable.Outstanding",
              "label": "Outstanding",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.CreditNote.Contact.Balances.AccountsReceivable.Overdue",
              "label": "Overdue",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.CreditNote.Contact.Balances.AccountsPayable.Outstanding",
              "label": "Outstanding",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.CreditNote.Contact.Balances.AccountsPayable.Overdue",
              "label": "Overdue",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.CreditNote.Contact.Attachments",
              "label": "Attachments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.CreditNote.Contact.HasAttachments",
              "label": "Has Attachments",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "A boolean to indicate if a contact has an attachment",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.CreditNote.Contact.ValidationErrors",
              "label": "Validation Errors",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.CreditNote.Contact.HasValidationErrors",
              "label": "Has Validation Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "A boolean to indicate if a contact has an validation errors",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.CreditNote.Contact.StatusAttributeString",
              "label": "Status Attribute String",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Status of object"
            },
            {
              "key": "body.CreditNote.Date",
              "label": "Date",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The date the credit note is issued YYYY-MM-DD. If the Date element is not specified then it will default to the current date based on the timezone setting of the organisation"
            },
            {
              "key": "body.CreditNote.DueDate",
              "label": "Due Date",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Date invoice is due – YYYY-MM-DD"
            },
            {
              "key": "body.CreditNote.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "DRAFT",
                  "SUBMITTED",
                  "DELETED",
                  "AUTHORISED",
                  "PAID",
                  "VOIDED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Credit Note Status Codes",
              "choices": [
                {
                  "value": "DRAFT",
                  "label": "DRAFT",
                  "sample": "DRAFT"
                },
                {
                  "value": "SUBMITTED",
                  "label": "SUBMITTED",
                  "sample": "SUBMITTED"
                },
                {
                  "value": "DELETED",
                  "label": "DELETED",
                  "sample": "DELETED"
                },
                {
                  "value": "AUTHORISED",
                  "label": "AUTHORISED",
                  "sample": "AUTHORISED"
                },
                {
                  "value": "PAID",
                  "label": "PAID",
                  "sample": "PAID"
                },
                {
                  "value": "VOIDED",
                  "label": "VOIDED",
                  "sample": "VOIDED"
                }
              ]
            },
            {
              "key": "body.CreditNote.LineAmountTypes",
              "label": "Line Amount Types",
              "type": "string",
              "validation": {
                "values": [
                  "Exclusive",
                  "Inclusive",
                  "NoTax"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Line amounts are exclusive of tax by default if you don’t specify this element. See Line Amount Types",
              "choices": [
                {
                  "value": "Exclusive",
                  "label": "Exclusive",
                  "sample": "Exclusive"
                },
                {
                  "value": "Inclusive",
                  "label": "Inclusive",
                  "sample": "Inclusive"
                },
                {
                  "value": "NoTax",
                  "label": "NoTax",
                  "sample": "NoTax"
                }
              ]
            },
            {
              "key": "body.CreditNote.LineItems",
              "label": "Line Items",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.CreditNote.SubTotal",
              "label": "Sub Total",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The subtotal of the credit note excluding taxes"
            },
            {
              "key": "body.CreditNote.TotalTax",
              "label": "Total Tax",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The total tax on the credit note"
            },
            {
              "key": "body.CreditNote.Total",
              "label": "Total",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The total of the Credit Note(subtotal + total tax)"
            },
            {
              "key": "body.CreditNote.CISDeduction",
              "label": "CIS Deduction",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "CIS deduction for UK contractors"
            },
            {
              "key": "body.CreditNote.CISRate",
              "label": "CIS Rate",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "CIS Deduction rate for the organisation"
            },
            {
              "key": "body.CreditNote.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of last update to the credit note",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.CreditNote.CurrencyCode",
              "label": "Currency Code",
              "type": "string",
              "validation": {
                "values": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BYR",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EEK",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LTL",
                  "LVL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SKK",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "STD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "3 letter alpha code for the currency – see list of currency codes",
              "choices": [
                {
                  "value": "AED",
                  "label": "AED",
                  "sample": "AED"
                },
                {
                  "value": "AFN",
                  "label": "AFN",
                  "sample": "AFN"
                },
                {
                  "value": "ALL",
                  "label": "ALL",
                  "sample": "ALL"
                },
                {
                  "value": "AMD",
                  "label": "AMD",
                  "sample": "AMD"
                },
                {
                  "value": "ANG",
                  "label": "ANG",
                  "sample": "ANG"
                },
                {
                  "value": "AOA",
                  "label": "AOA",
                  "sample": "AOA"
                },
                {
                  "value": "ARS",
                  "label": "ARS",
                  "sample": "ARS"
                },
                {
                  "value": "AUD",
                  "label": "AUD",
                  "sample": "AUD"
                },
                {
                  "value": "AWG",
                  "label": "AWG",
                  "sample": "AWG"
                },
                {
                  "value": "AZN",
                  "label": "AZN",
                  "sample": "AZN"
                },
                {
                  "value": "BAM",
                  "label": "BAM",
                  "sample": "BAM"
                },
                {
                  "value": "BBD",
                  "label": "BBD",
                  "sample": "BBD"
                },
                {
                  "value": "BDT",
                  "label": "BDT",
                  "sample": "BDT"
                },
                {
                  "value": "BGN",
                  "label": "BGN",
                  "sample": "BGN"
                },
                {
                  "value": "BHD",
                  "label": "BHD",
                  "sample": "BHD"
                },
                {
                  "value": "BIF",
                  "label": "BIF",
                  "sample": "BIF"
                },
                {
                  "value": "BMD",
                  "label": "BMD",
                  "sample": "BMD"
                },
                {
                  "value": "BND",
                  "label": "BND",
                  "sample": "BND"
                },
                {
                  "value": "BOB",
                  "label": "BOB",
                  "sample": "BOB"
                },
                {
                  "value": "BRL",
                  "label": "BRL",
                  "sample": "BRL"
                },
                {
                  "value": "BSD",
                  "label": "BSD",
                  "sample": "BSD"
                },
                {
                  "value": "BTN",
                  "label": "BTN",
                  "sample": "BTN"
                },
                {
                  "value": "BWP",
                  "label": "BWP",
                  "sample": "BWP"
                },
                {
                  "value": "BYN",
                  "label": "BYN",
                  "sample": "BYN"
                },
                {
                  "value": "BYR",
                  "label": "BYR",
                  "sample": "BYR"
                },
                {
                  "value": "BZD",
                  "label": "BZD",
                  "sample": "BZD"
                },
                {
                  "value": "CAD",
                  "label": "CAD",
                  "sample": "CAD"
                },
                {
                  "value": "CDF",
                  "label": "CDF",
                  "sample": "CDF"
                },
                {
                  "value": "CHF",
                  "label": "CHF",
                  "sample": "CHF"
                },
                {
                  "value": "CLF",
                  "label": "CLF",
                  "sample": "CLF"
                },
                {
                  "value": "CLP",
                  "label": "CLP",
                  "sample": "CLP"
                },
                {
                  "value": "CNY",
                  "label": "CNY",
                  "sample": "CNY"
                },
                {
                  "value": "COP",
                  "label": "COP",
                  "sample": "COP"
                },
                {
                  "value": "CRC",
                  "label": "CRC",
                  "sample": "CRC"
                },
                {
                  "value": "CUC",
                  "label": "CUC",
                  "sample": "CUC"
                },
                {
                  "value": "CUP",
                  "label": "CUP",
                  "sample": "CUP"
                },
                {
                  "value": "CVE",
                  "label": "CVE",
                  "sample": "CVE"
                },
                {
                  "value": "CZK",
                  "label": "CZK",
                  "sample": "CZK"
                },
                {
                  "value": "DJF",
                  "label": "DJF",
                  "sample": "DJF"
                },
                {
                  "value": "DKK",
                  "label": "DKK",
                  "sample": "DKK"
                },
                {
                  "value": "DOP",
                  "label": "DOP",
                  "sample": "DOP"
                },
                {
                  "value": "DZD",
                  "label": "DZD",
                  "sample": "DZD"
                },
                {
                  "value": "EEK",
                  "label": "EEK",
                  "sample": "EEK"
                },
                {
                  "value": "EGP",
                  "label": "EGP",
                  "sample": "EGP"
                },
                {
                  "value": "ERN",
                  "label": "ERN",
                  "sample": "ERN"
                },
                {
                  "value": "ETB",
                  "label": "ETB",
                  "sample": "ETB"
                },
                {
                  "value": "EUR",
                  "label": "EUR",
                  "sample": "EUR"
                },
                {
                  "value": "FJD",
                  "label": "FJD",
                  "sample": "FJD"
                },
                {
                  "value": "FKP",
                  "label": "FKP",
                  "sample": "FKP"
                },
                {
                  "value": "GBP",
                  "label": "GBP",
                  "sample": "GBP"
                },
                {
                  "value": "GEL",
                  "label": "GEL",
                  "sample": "GEL"
                },
                {
                  "value": "GHS",
                  "label": "GHS",
                  "sample": "GHS"
                },
                {
                  "value": "GIP",
                  "label": "GIP",
                  "sample": "GIP"
                },
                {
                  "value": "GMD",
                  "label": "GMD",
                  "sample": "GMD"
                },
                {
                  "value": "GNF",
                  "label": "GNF",
                  "sample": "GNF"
                },
                {
                  "value": "GTQ",
                  "label": "GTQ",
                  "sample": "GTQ"
                },
                {
                  "value": "GYD",
                  "label": "GYD",
                  "sample": "GYD"
                },
                {
                  "value": "HKD",
                  "label": "HKD",
                  "sample": "HKD"
                },
                {
                  "value": "HNL",
                  "label": "HNL",
                  "sample": "HNL"
                },
                {
                  "value": "HRK",
                  "label": "HRK",
                  "sample": "HRK"
                },
                {
                  "value": "HTG",
                  "label": "HTG",
                  "sample": "HTG"
                },
                {
                  "value": "HUF",
                  "label": "HUF",
                  "sample": "HUF"
                },
                {
                  "value": "IDR",
                  "label": "IDR",
                  "sample": "IDR"
                },
                {
                  "value": "ILS",
                  "label": "ILS",
                  "sample": "ILS"
                },
                {
                  "value": "INR",
                  "label": "INR",
                  "sample": "INR"
                },
                {
                  "value": "IQD",
                  "label": "IQD",
                  "sample": "IQD"
                },
                {
                  "value": "IRR",
                  "label": "IRR",
                  "sample": "IRR"
                },
                {
                  "value": "ISK",
                  "label": "ISK",
                  "sample": "ISK"
                },
                {
                  "value": "JMD",
                  "label": "JMD",
                  "sample": "JMD"
                },
                {
                  "value": "JOD",
                  "label": "JOD",
                  "sample": "JOD"
                },
                {
                  "value": "JPY",
                  "label": "JPY",
                  "sample": "JPY"
                },
                {
                  "value": "KES",
                  "label": "KES",
                  "sample": "KES"
                },
                {
                  "value": "KGS",
                  "label": "KGS",
                  "sample": "KGS"
                },
                {
                  "value": "KHR",
                  "label": "KHR",
                  "sample": "KHR"
                },
                {
                  "value": "KMF",
                  "label": "KMF",
                  "sample": "KMF"
                },
                {
                  "value": "KPW",
                  "label": "KPW",
                  "sample": "KPW"
                },
                {
                  "value": "KRW",
                  "label": "KRW",
                  "sample": "KRW"
                },
                {
                  "value": "KWD",
                  "label": "KWD",
                  "sample": "KWD"
                },
                {
                  "value": "KYD",
                  "label": "KYD",
                  "sample": "KYD"
                },
                {
                  "value": "KZT",
                  "label": "KZT",
                  "sample": "KZT"
                },
                {
                  "value": "LAK",
                  "label": "LAK",
                  "sample": "LAK"
                },
                {
                  "value": "LBP",
                  "label": "LBP",
                  "sample": "LBP"
                },
                {
                  "value": "LKR",
                  "label": "LKR",
                  "sample": "LKR"
                },
                {
                  "value": "LRD",
                  "label": "LRD",
                  "sample": "LRD"
                },
                {
                  "value": "LSL",
                  "label": "LSL",
                  "sample": "LSL"
                },
                {
                  "value": "LTL",
                  "label": "LTL",
                  "sample": "LTL"
                },
                {
                  "value": "LVL",
                  "label": "LVL",
                  "sample": "LVL"
                },
                {
                  "value": "LYD",
                  "label": "LYD",
                  "sample": "LYD"
                },
                {
                  "value": "MAD",
                  "label": "MAD",
                  "sample": "MAD"
                },
                {
                  "value": "MDL",
                  "label": "MDL",
                  "sample": "MDL"
                },
                {
                  "value": "MGA",
                  "label": "MGA",
                  "sample": "MGA"
                },
                {
                  "value": "MKD",
                  "label": "MKD",
                  "sample": "MKD"
                },
                {
                  "value": "MMK",
                  "label": "MMK",
                  "sample": "MMK"
                },
                {
                  "value": "MNT",
                  "label": "MNT",
                  "sample": "MNT"
                },
                {
                  "value": "MOP",
                  "label": "MOP",
                  "sample": "MOP"
                },
                {
                  "value": "MRO",
                  "label": "MRO",
                  "sample": "MRO"
                },
                {
                  "value": "MRU",
                  "label": "MRU",
                  "sample": "MRU"
                },
                {
                  "value": "MUR",
                  "label": "MUR",
                  "sample": "MUR"
                },
                {
                  "value": "MVR",
                  "label": "MVR",
                  "sample": "MVR"
                },
                {
                  "value": "MWK",
                  "label": "MWK",
                  "sample": "MWK"
                },
                {
                  "value": "MXN",
                  "label": "MXN",
                  "sample": "MXN"
                },
                {
                  "value": "MXV",
                  "label": "MXV",
                  "sample": "MXV"
                },
                {
                  "value": "MYR",
                  "label": "MYR",
                  "sample": "MYR"
                },
                {
                  "value": "MZN",
                  "label": "MZN",
                  "sample": "MZN"
                },
                {
                  "value": "NAD",
                  "label": "NAD",
                  "sample": "NAD"
                },
                {
                  "value": "NGN",
                  "label": "NGN",
                  "sample": "NGN"
                },
                {
                  "value": "NIO",
                  "label": "NIO",
                  "sample": "NIO"
                },
                {
                  "value": "NOK",
                  "label": "NOK",
                  "sample": "NOK"
                },
                {
                  "value": "NPR",
                  "label": "NPR",
                  "sample": "NPR"
                },
                {
                  "value": "NZD",
                  "label": "NZD",
                  "sample": "NZD"
                },
                {
                  "value": "OMR",
                  "label": "OMR",
                  "sample": "OMR"
                },
                {
                  "value": "PAB",
                  "label": "PAB",
                  "sample": "PAB"
                },
                {
                  "value": "PEN",
                  "label": "PEN",
                  "sample": "PEN"
                },
                {
                  "value": "PGK",
                  "label": "PGK",
                  "sample": "PGK"
                },
                {
                  "value": "PHP",
                  "label": "PHP",
                  "sample": "PHP"
                },
                {
                  "value": "PKR",
                  "label": "PKR",
                  "sample": "PKR"
                },
                {
                  "value": "PLN",
                  "label": "PLN",
                  "sample": "PLN"
                },
                {
                  "value": "PYG",
                  "label": "PYG",
                  "sample": "PYG"
                },
                {
                  "value": "QAR",
                  "label": "QAR",
                  "sample": "QAR"
                },
                {
                  "value": "RON",
                  "label": "RON",
                  "sample": "RON"
                },
                {
                  "value": "RSD",
                  "label": "RSD",
                  "sample": "RSD"
                },
                {
                  "value": "RUB",
                  "label": "RUB",
                  "sample": "RUB"
                },
                {
                  "value": "RWF",
                  "label": "RWF",
                  "sample": "RWF"
                },
                {
                  "value": "SAR",
                  "label": "SAR",
                  "sample": "SAR"
                },
                {
                  "value": "SBD",
                  "label": "SBD",
                  "sample": "SBD"
                },
                {
                  "value": "SCR",
                  "label": "SCR",
                  "sample": "SCR"
                },
                {
                  "value": "SDG",
                  "label": "SDG",
                  "sample": "SDG"
                },
                {
                  "value": "SEK",
                  "label": "SEK",
                  "sample": "SEK"
                },
                {
                  "value": "SGD",
                  "label": "SGD",
                  "sample": "SGD"
                },
                {
                  "value": "SHP",
                  "label": "SHP",
                  "sample": "SHP"
                },
                {
                  "value": "SKK",
                  "label": "SKK",
                  "sample": "SKK"
                },
                {
                  "value": "SLE",
                  "label": "SLE",
                  "sample": "SLE"
                },
                {
                  "value": "SLL",
                  "label": "SLL",
                  "sample": "SLL"
                },
                {
                  "value": "SOS",
                  "label": "SOS",
                  "sample": "SOS"
                },
                {
                  "value": "SRD",
                  "label": "SRD",
                  "sample": "SRD"
                },
                {
                  "value": "STD",
                  "label": "STD",
                  "sample": "STD"
                },
                {
                  "value": "STN",
                  "label": "STN",
                  "sample": "STN"
                },
                {
                  "value": "SVC",
                  "label": "SVC",
                  "sample": "SVC"
                },
                {
                  "value": "SYP",
                  "label": "SYP",
                  "sample": "SYP"
                },
                {
                  "value": "SZL",
                  "label": "SZL",
                  "sample": "SZL"
                },
                {
                  "value": "THB",
                  "label": "THB",
                  "sample": "THB"
                },
                {
                  "value": "TJS",
                  "label": "TJS",
                  "sample": "TJS"
                },
                {
                  "value": "TMT",
                  "label": "TMT",
                  "sample": "TMT"
                },
                {
                  "value": "TND",
                  "label": "TND",
                  "sample": "TND"
                },
                {
                  "value": "TOP",
                  "label": "TOP",
                  "sample": "TOP"
                },
                {
                  "value": "TRY",
                  "label": "TRY",
                  "sample": "TRY"
                },
                {
                  "value": "TTD",
                  "label": "TTD",
                  "sample": "TTD"
                },
                {
                  "value": "TWD",
                  "label": "TWD",
                  "sample": "TWD"
                },
                {
                  "value": "TZS",
                  "label": "TZS",
                  "sample": "TZS"
                },
                {
                  "value": "UAH",
                  "label": "UAH",
                  "sample": "UAH"
                },
                {
                  "value": "UGX",
                  "label": "UGX",
                  "sample": "UGX"
                },
                {
                  "value": "USD",
                  "label": "USD",
                  "sample": "USD"
                },
                {
                  "value": "UYU",
                  "label": "UYU",
                  "sample": "UYU"
                },
                {
                  "value": "UZS",
                  "label": "UZS",
                  "sample": "UZS"
                },
                {
                  "value": "VEF",
                  "label": "VEF",
                  "sample": "VEF"
                },
                {
                  "value": "VES",
                  "label": "VES",
                  "sample": "VES"
                },
                {
                  "value": "VND",
                  "label": "VND",
                  "sample": "VND"
                },
                {
                  "value": "VUV",
                  "label": "VUV",
                  "sample": "VUV"
                },
                {
                  "value": "WST",
                  "label": "WST",
                  "sample": "WST"
                },
                {
                  "value": "XAF",
                  "label": "XAF",
                  "sample": "XAF"
                },
                {
                  "value": "XCD",
                  "label": "XCD",
                  "sample": "XCD"
                },
                {
                  "value": "XOF",
                  "label": "XOF",
                  "sample": "XOF"
                },
                {
                  "value": "XPF",
                  "label": "XPF",
                  "sample": "XPF"
                },
                {
                  "value": "YER",
                  "label": "YER",
                  "sample": "YER"
                },
                {
                  "value": "ZAR",
                  "label": "ZAR",
                  "sample": "ZAR"
                },
                {
                  "value": "ZMW",
                  "label": "ZMW",
                  "sample": "ZMW"
                },
                {
                  "value": "ZMK",
                  "label": "ZMK",
                  "sample": "ZMK"
                },
                {
                  "value": "ZWD",
                  "label": "ZWD",
                  "sample": "ZWD"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.CreditNote.FullyPaidOnDate",
              "label": "Fully Paid On Date",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Date when credit note was fully paid(UTC format)"
            },
            {
              "key": "body.CreditNote.CreditNoteID",
              "label": "Credit Note ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero generated unique identifier"
            },
            {
              "key": "body.CreditNote.CreditNoteNumber",
              "label": "Credit Note Number",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "ACCRECCREDIT – Unique alpha numeric code identifying credit note (when missing will auto-generate from your Organisation Invoice Settings)"
            },
            {
              "key": "body.CreditNote.Reference",
              "label": "Reference",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "ACCRECCREDIT only – additional reference number"
            },
            {
              "key": "body.CreditNote.SentToContact",
              "label": "Sent To Contact",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "boolean to indicate if a credit note has been sent to a contact via  the Xero app (currently read only)"
            },
            {
              "key": "body.CreditNote.CurrencyRate",
              "label": "Currency Rate",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The currency rate for a multicurrency invoice. If no rate is specified, the XE.com day rate is used"
            },
            {
              "key": "body.CreditNote.RemainingCredit",
              "label": "Remaining Credit",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The remaining credit balance on the Credit Note"
            },
            {
              "key": "body.CreditNote.Allocations",
              "label": "Allocations",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "body.CreditNote.AppliedAmount",
              "label": "Applied Amount",
              "type": "number",
              "validation": {},
              "placeholder": "Example: 2",
              "required": false,
              "helpText": "The amount of applied to an invoice",
              "sample": 2
            },
            {
              "key": "body.CreditNote.Payments",
              "label": "Payments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.CreditNote.BrandingThemeID",
              "label": "Branding Theme ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "See BrandingThemes"
            },
            {
              "key": "body.CreditNote.StatusAttributeString",
              "label": "Status Attribute String",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "A string to indicate if a invoice status"
            },
            {
              "key": "body.CreditNote.HasAttachments",
              "label": "Has Attachments",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "boolean to indicate if a credit note has an attachment",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.CreditNote.HasErrors",
              "label": "Has Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "A boolean to indicate if a credit note has an validation errors",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.CreditNote.ValidationErrors",
              "label": "Validation Errors",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.CreditNote.Warnings",
              "label": "Warnings",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Prepayment.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "RECEIVE-PREPAYMENT",
                  "SPEND-PREPAYMENT",
                  "ARPREPAYMENT",
                  "APPREPAYMENT"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Prepayment Types",
              "choices": [
                {
                  "value": "RECEIVE-PREPAYMENT",
                  "label": "RECEIVE-PREPAYMENT",
                  "sample": "RECEIVE-PREPAYMENT"
                },
                {
                  "value": "SPEND-PREPAYMENT",
                  "label": "SPEND-PREPAYMENT",
                  "sample": "SPEND-PREPAYMENT"
                },
                {
                  "value": "ARPREPAYMENT",
                  "label": "ARPREPAYMENT",
                  "sample": "ARPREPAYMENT"
                },
                {
                  "value": "APPREPAYMENT",
                  "label": "APPREPAYMENT",
                  "sample": "APPREPAYMENT"
                }
              ]
            },
            {
              "key": "body.Prepayment.Contact.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero identifier"
            },
            {
              "key": "body.Prepayment.Contact.MergedToContactID",
              "label": "Merged To Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "ID for the destination of a merged contact. Only returned when using paging or when fetching a contact by ContactId or ContactNumber."
            },
            {
              "key": "body.Prepayment.Contact.ContactNumber",
              "label": "Contact Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "This can be updated via the API only i.e. This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50). If the Contact Number is used, this is displayed as Contact Code in the Contacts UI in Xero."
            },
            {
              "key": "body.Prepayment.Contact.AccountNumber",
              "label": "Account Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "A user defined account number. This can be updated via the API and the Xero UI (max length = 50)"
            },
            {
              "key": "body.Prepayment.Contact.ContactStatus",
              "label": "Contact Status",
              "type": "string",
              "validation": {
                "values": [
                  "ACTIVE",
                  "ARCHIVED",
                  "GDPRREQUEST"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Current status of a contact – see contact status types",
              "choices": [
                {
                  "value": "ACTIVE",
                  "label": "ACTIVE",
                  "sample": "ACTIVE"
                },
                {
                  "value": "ARCHIVED",
                  "label": "ARCHIVED",
                  "sample": "ARCHIVED"
                },
                {
                  "value": "GDPRREQUEST",
                  "label": "GDPRREQUEST",
                  "sample": "GDPRREQUEST"
                }
              ]
            },
            {
              "key": "body.Prepayment.Contact.Name",
              "label": "Name",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "Full name of contact/organisation (max length = 255)"
            },
            {
              "key": "body.Prepayment.Contact.FirstName",
              "label": "First Name",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "First name of contact person (max length = 255)"
            },
            {
              "key": "body.Prepayment.Contact.LastName",
              "label": "Last Name",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "Last name of contact person (max length = 255)"
            },
            {
              "key": "body.Prepayment.Contact.CompanyNumber",
              "label": "Company Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "Company registration number (max length = 50)"
            },
            {
              "key": "body.Prepayment.Contact.EmailAddress",
              "label": "Email Address",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "Email address of contact person (umlauts not supported) (max length  = 255)"
            },
            {
              "key": "body.Prepayment.Contact.SkypeUserName",
              "label": "Skype User Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Skype user name of contact"
            },
            {
              "key": "body.Prepayment.Contact.ContactPersons",
              "label": "Contact Persons",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Prepayment.Contact.BankAccountDetails",
              "label": "Bank Account Details",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Bank account number of contact"
            },
            {
              "key": "body.Prepayment.Contact.TaxNumber",
              "label": "Tax Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "Tax number of contact – this is also known as the ABN (Australia), GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and global) in the Xero UI depending on which regionalized version of Xero you are using (max length = 50)"
            },
            {
              "key": "body.Prepayment.Contact.AccountsReceivableTaxType",
              "label": "Accounts Receivable Tax Type",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The tax type from TaxRates"
            },
            {
              "key": "body.Prepayment.Contact.AccountsPayableTaxType",
              "label": "Accounts Payable Tax Type",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The tax type from TaxRates"
            },
            {
              "key": "body.Prepayment.Contact.Addresses",
              "label": "Addresses",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Prepayment.Contact.Phones",
              "label": "Phones",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Prepayment.Contact.IsSupplier",
              "label": "Is Supplier",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "true or false – Boolean that describes if a contact that has any AP  invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts payable invoice is generated against this contact."
            },
            {
              "key": "body.Prepayment.Contact.IsCustomer",
              "label": "Is Customer",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "true or false – Boolean that describes if a contact has any AR invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts receivable invoice is generated against this contact."
            },
            {
              "key": "body.Prepayment.Contact.SalesDefaultLineAmountType",
              "label": "Sales Default Line Amount Type",
              "type": "string",
              "validation": {
                "values": [
                  "INCLUSIVE",
                  "EXCLUSIVE",
                  "NONE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The default sales line amount type for a contact. Only available when summaryOnly parameter or paging is used, or when fetch by ContactId or ContactNumber.",
              "choices": [
                {
                  "value": "INCLUSIVE",
                  "label": "INCLUSIVE",
                  "sample": "INCLUSIVE"
                },
                {
                  "value": "EXCLUSIVE",
                  "label": "EXCLUSIVE",
                  "sample": "EXCLUSIVE"
                },
                {
                  "value": "NONE",
                  "label": "NONE",
                  "sample": "NONE"
                }
              ]
            },
            {
              "key": "body.Prepayment.Contact.PurchasesDefaultLineAmountType",
              "label": "Purchases Default Line Amount Type",
              "type": "string",
              "validation": {
                "values": [
                  "INCLUSIVE",
                  "EXCLUSIVE",
                  "NONE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The default purchases line amount type for a contact Only available when summaryOnly parameter or paging is used, or when fetch by ContactId or ContactNumber.",
              "choices": [
                {
                  "value": "INCLUSIVE",
                  "label": "INCLUSIVE",
                  "sample": "INCLUSIVE"
                },
                {
                  "value": "EXCLUSIVE",
                  "label": "EXCLUSIVE",
                  "sample": "EXCLUSIVE"
                },
                {
                  "value": "NONE",
                  "label": "NONE",
                  "sample": "NONE"
                }
              ]
            },
            {
              "key": "body.Prepayment.Contact.DefaultCurrency",
              "label": "Default Currency",
              "type": "string",
              "validation": {
                "values": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BYR",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EEK",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LTL",
                  "LVL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SKK",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "STD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "3 letter alpha code for the currency – see list of currency codes",
              "choices": [
                {
                  "value": "AED",
                  "label": "AED",
                  "sample": "AED"
                },
                {
                  "value": "AFN",
                  "label": "AFN",
                  "sample": "AFN"
                },
                {
                  "value": "ALL",
                  "label": "ALL",
                  "sample": "ALL"
                },
                {
                  "value": "AMD",
                  "label": "AMD",
                  "sample": "AMD"
                },
                {
                  "value": "ANG",
                  "label": "ANG",
                  "sample": "ANG"
                },
                {
                  "value": "AOA",
                  "label": "AOA",
                  "sample": "AOA"
                },
                {
                  "value": "ARS",
                  "label": "ARS",
                  "sample": "ARS"
                },
                {
                  "value": "AUD",
                  "label": "AUD",
                  "sample": "AUD"
                },
                {
                  "value": "AWG",
                  "label": "AWG",
                  "sample": "AWG"
                },
                {
                  "value": "AZN",
                  "label": "AZN",
                  "sample": "AZN"
                },
                {
                  "value": "BAM",
                  "label": "BAM",
                  "sample": "BAM"
                },
                {
                  "value": "BBD",
                  "label": "BBD",
                  "sample": "BBD"
                },
                {
                  "value": "BDT",
                  "label": "BDT",
                  "sample": "BDT"
                },
                {
                  "value": "BGN",
                  "label": "BGN",
                  "sample": "BGN"
                },
                {
                  "value": "BHD",
                  "label": "BHD",
                  "sample": "BHD"
                },
                {
                  "value": "BIF",
                  "label": "BIF",
                  "sample": "BIF"
                },
                {
                  "value": "BMD",
                  "label": "BMD",
                  "sample": "BMD"
                },
                {
                  "value": "BND",
                  "label": "BND",
                  "sample": "BND"
                },
                {
                  "value": "BOB",
                  "label": "BOB",
                  "sample": "BOB"
                },
                {
                  "value": "BRL",
                  "label": "BRL",
                  "sample": "BRL"
                },
                {
                  "value": "BSD",
                  "label": "BSD",
                  "sample": "BSD"
                },
                {
                  "value": "BTN",
                  "label": "BTN",
                  "sample": "BTN"
                },
                {
                  "value": "BWP",
                  "label": "BWP",
                  "sample": "BWP"
                },
                {
                  "value": "BYN",
                  "label": "BYN",
                  "sample": "BYN"
                },
                {
                  "value": "BYR",
                  "label": "BYR",
                  "sample": "BYR"
                },
                {
                  "value": "BZD",
                  "label": "BZD",
                  "sample": "BZD"
                },
                {
                  "value": "CAD",
                  "label": "CAD",
                  "sample": "CAD"
                },
                {
                  "value": "CDF",
                  "label": "CDF",
                  "sample": "CDF"
                },
                {
                  "value": "CHF",
                  "label": "CHF",
                  "sample": "CHF"
                },
                {
                  "value": "CLF",
                  "label": "CLF",
                  "sample": "CLF"
                },
                {
                  "value": "CLP",
                  "label": "CLP",
                  "sample": "CLP"
                },
                {
                  "value": "CNY",
                  "label": "CNY",
                  "sample": "CNY"
                },
                {
                  "value": "COP",
                  "label": "COP",
                  "sample": "COP"
                },
                {
                  "value": "CRC",
                  "label": "CRC",
                  "sample": "CRC"
                },
                {
                  "value": "CUC",
                  "label": "CUC",
                  "sample": "CUC"
                },
                {
                  "value": "CUP",
                  "label": "CUP",
                  "sample": "CUP"
                },
                {
                  "value": "CVE",
                  "label": "CVE",
                  "sample": "CVE"
                },
                {
                  "value": "CZK",
                  "label": "CZK",
                  "sample": "CZK"
                },
                {
                  "value": "DJF",
                  "label": "DJF",
                  "sample": "DJF"
                },
                {
                  "value": "DKK",
                  "label": "DKK",
                  "sample": "DKK"
                },
                {
                  "value": "DOP",
                  "label": "DOP",
                  "sample": "DOP"
                },
                {
                  "value": "DZD",
                  "label": "DZD",
                  "sample": "DZD"
                },
                {
                  "value": "EEK",
                  "label": "EEK",
                  "sample": "EEK"
                },
                {
                  "value": "EGP",
                  "label": "EGP",
                  "sample": "EGP"
                },
                {
                  "value": "ERN",
                  "label": "ERN",
                  "sample": "ERN"
                },
                {
                  "value": "ETB",
                  "label": "ETB",
                  "sample": "ETB"
                },
                {
                  "value": "EUR",
                  "label": "EUR",
                  "sample": "EUR"
                },
                {
                  "value": "FJD",
                  "label": "FJD",
                  "sample": "FJD"
                },
                {
                  "value": "FKP",
                  "label": "FKP",
                  "sample": "FKP"
                },
                {
                  "value": "GBP",
                  "label": "GBP",
                  "sample": "GBP"
                },
                {
                  "value": "GEL",
                  "label": "GEL",
                  "sample": "GEL"
                },
                {
                  "value": "GHS",
                  "label": "GHS",
                  "sample": "GHS"
                },
                {
                  "value": "GIP",
                  "label": "GIP",
                  "sample": "GIP"
                },
                {
                  "value": "GMD",
                  "label": "GMD",
                  "sample": "GMD"
                },
                {
                  "value": "GNF",
                  "label": "GNF",
                  "sample": "GNF"
                },
                {
                  "value": "GTQ",
                  "label": "GTQ",
                  "sample": "GTQ"
                },
                {
                  "value": "GYD",
                  "label": "GYD",
                  "sample": "GYD"
                },
                {
                  "value": "HKD",
                  "label": "HKD",
                  "sample": "HKD"
                },
                {
                  "value": "HNL",
                  "label": "HNL",
                  "sample": "HNL"
                },
                {
                  "value": "HRK",
                  "label": "HRK",
                  "sample": "HRK"
                },
                {
                  "value": "HTG",
                  "label": "HTG",
                  "sample": "HTG"
                },
                {
                  "value": "HUF",
                  "label": "HUF",
                  "sample": "HUF"
                },
                {
                  "value": "IDR",
                  "label": "IDR",
                  "sample": "IDR"
                },
                {
                  "value": "ILS",
                  "label": "ILS",
                  "sample": "ILS"
                },
                {
                  "value": "INR",
                  "label": "INR",
                  "sample": "INR"
                },
                {
                  "value": "IQD",
                  "label": "IQD",
                  "sample": "IQD"
                },
                {
                  "value": "IRR",
                  "label": "IRR",
                  "sample": "IRR"
                },
                {
                  "value": "ISK",
                  "label": "ISK",
                  "sample": "ISK"
                },
                {
                  "value": "JMD",
                  "label": "JMD",
                  "sample": "JMD"
                },
                {
                  "value": "JOD",
                  "label": "JOD",
                  "sample": "JOD"
                },
                {
                  "value": "JPY",
                  "label": "JPY",
                  "sample": "JPY"
                },
                {
                  "value": "KES",
                  "label": "KES",
                  "sample": "KES"
                },
                {
                  "value": "KGS",
                  "label": "KGS",
                  "sample": "KGS"
                },
                {
                  "value": "KHR",
                  "label": "KHR",
                  "sample": "KHR"
                },
                {
                  "value": "KMF",
                  "label": "KMF",
                  "sample": "KMF"
                },
                {
                  "value": "KPW",
                  "label": "KPW",
                  "sample": "KPW"
                },
                {
                  "value": "KRW",
                  "label": "KRW",
                  "sample": "KRW"
                },
                {
                  "value": "KWD",
                  "label": "KWD",
                  "sample": "KWD"
                },
                {
                  "value": "KYD",
                  "label": "KYD",
                  "sample": "KYD"
                },
                {
                  "value": "KZT",
                  "label": "KZT",
                  "sample": "KZT"
                },
                {
                  "value": "LAK",
                  "label": "LAK",
                  "sample": "LAK"
                },
                {
                  "value": "LBP",
                  "label": "LBP",
                  "sample": "LBP"
                },
                {
                  "value": "LKR",
                  "label": "LKR",
                  "sample": "LKR"
                },
                {
                  "value": "LRD",
                  "label": "LRD",
                  "sample": "LRD"
                },
                {
                  "value": "LSL",
                  "label": "LSL",
                  "sample": "LSL"
                },
                {
                  "value": "LTL",
                  "label": "LTL",
                  "sample": "LTL"
                },
                {
                  "value": "LVL",
                  "label": "LVL",
                  "sample": "LVL"
                },
                {
                  "value": "LYD",
                  "label": "LYD",
                  "sample": "LYD"
                },
                {
                  "value": "MAD",
                  "label": "MAD",
                  "sample": "MAD"
                },
                {
                  "value": "MDL",
                  "label": "MDL",
                  "sample": "MDL"
                },
                {
                  "value": "MGA",
                  "label": "MGA",
                  "sample": "MGA"
                },
                {
                  "value": "MKD",
                  "label": "MKD",
                  "sample": "MKD"
                },
                {
                  "value": "MMK",
                  "label": "MMK",
                  "sample": "MMK"
                },
                {
                  "value": "MNT",
                  "label": "MNT",
                  "sample": "MNT"
                },
                {
                  "value": "MOP",
                  "label": "MOP",
                  "sample": "MOP"
                },
                {
                  "value": "MRO",
                  "label": "MRO",
                  "sample": "MRO"
                },
                {
                  "value": "MRU",
                  "label": "MRU",
                  "sample": "MRU"
                },
                {
                  "value": "MUR",
                  "label": "MUR",
                  "sample": "MUR"
                },
                {
                  "value": "MVR",
                  "label": "MVR",
                  "sample": "MVR"
                },
                {
                  "value": "MWK",
                  "label": "MWK",
                  "sample": "MWK"
                },
                {
                  "value": "MXN",
                  "label": "MXN",
                  "sample": "MXN"
                },
                {
                  "value": "MXV",
                  "label": "MXV",
                  "sample": "MXV"
                },
                {
                  "value": "MYR",
                  "label": "MYR",
                  "sample": "MYR"
                },
                {
                  "value": "MZN",
                  "label": "MZN",
                  "sample": "MZN"
                },
                {
                  "value": "NAD",
                  "label": "NAD",
                  "sample": "NAD"
                },
                {
                  "value": "NGN",
                  "label": "NGN",
                  "sample": "NGN"
                },
                {
                  "value": "NIO",
                  "label": "NIO",
                  "sample": "NIO"
                },
                {
                  "value": "NOK",
                  "label": "NOK",
                  "sample": "NOK"
                },
                {
                  "value": "NPR",
                  "label": "NPR",
                  "sample": "NPR"
                },
                {
                  "value": "NZD",
                  "label": "NZD",
                  "sample": "NZD"
                },
                {
                  "value": "OMR",
                  "label": "OMR",
                  "sample": "OMR"
                },
                {
                  "value": "PAB",
                  "label": "PAB",
                  "sample": "PAB"
                },
                {
                  "value": "PEN",
                  "label": "PEN",
                  "sample": "PEN"
                },
                {
                  "value": "PGK",
                  "label": "PGK",
                  "sample": "PGK"
                },
                {
                  "value": "PHP",
                  "label": "PHP",
                  "sample": "PHP"
                },
                {
                  "value": "PKR",
                  "label": "PKR",
                  "sample": "PKR"
                },
                {
                  "value": "PLN",
                  "label": "PLN",
                  "sample": "PLN"
                },
                {
                  "value": "PYG",
                  "label": "PYG",
                  "sample": "PYG"
                },
                {
                  "value": "QAR",
                  "label": "QAR",
                  "sample": "QAR"
                },
                {
                  "value": "RON",
                  "label": "RON",
                  "sample": "RON"
                },
                {
                  "value": "RSD",
                  "label": "RSD",
                  "sample": "RSD"
                },
                {
                  "value": "RUB",
                  "label": "RUB",
                  "sample": "RUB"
                },
                {
                  "value": "RWF",
                  "label": "RWF",
                  "sample": "RWF"
                },
                {
                  "value": "SAR",
                  "label": "SAR",
                  "sample": "SAR"
                },
                {
                  "value": "SBD",
                  "label": "SBD",
                  "sample": "SBD"
                },
                {
                  "value": "SCR",
                  "label": "SCR",
                  "sample": "SCR"
                },
                {
                  "value": "SDG",
                  "label": "SDG",
                  "sample": "SDG"
                },
                {
                  "value": "SEK",
                  "label": "SEK",
                  "sample": "SEK"
                },
                {
                  "value": "SGD",
                  "label": "SGD",
                  "sample": "SGD"
                },
                {
                  "value": "SHP",
                  "label": "SHP",
                  "sample": "SHP"
                },
                {
                  "value": "SKK",
                  "label": "SKK",
                  "sample": "SKK"
                },
                {
                  "value": "SLE",
                  "label": "SLE",
                  "sample": "SLE"
                },
                {
                  "value": "SLL",
                  "label": "SLL",
                  "sample": "SLL"
                },
                {
                  "value": "SOS",
                  "label": "SOS",
                  "sample": "SOS"
                },
                {
                  "value": "SRD",
                  "label": "SRD",
                  "sample": "SRD"
                },
                {
                  "value": "STD",
                  "label": "STD",
                  "sample": "STD"
                },
                {
                  "value": "STN",
                  "label": "STN",
                  "sample": "STN"
                },
                {
                  "value": "SVC",
                  "label": "SVC",
                  "sample": "SVC"
                },
                {
                  "value": "SYP",
                  "label": "SYP",
                  "sample": "SYP"
                },
                {
                  "value": "SZL",
                  "label": "SZL",
                  "sample": "SZL"
                },
                {
                  "value": "THB",
                  "label": "THB",
                  "sample": "THB"
                },
                {
                  "value": "TJS",
                  "label": "TJS",
                  "sample": "TJS"
                },
                {
                  "value": "TMT",
                  "label": "TMT",
                  "sample": "TMT"
                },
                {
                  "value": "TND",
                  "label": "TND",
                  "sample": "TND"
                },
                {
                  "value": "TOP",
                  "label": "TOP",
                  "sample": "TOP"
                },
                {
                  "value": "TRY",
                  "label": "TRY",
                  "sample": "TRY"
                },
                {
                  "value": "TTD",
                  "label": "TTD",
                  "sample": "TTD"
                },
                {
                  "value": "TWD",
                  "label": "TWD",
                  "sample": "TWD"
                },
                {
                  "value": "TZS",
                  "label": "TZS",
                  "sample": "TZS"
                },
                {
                  "value": "UAH",
                  "label": "UAH",
                  "sample": "UAH"
                },
                {
                  "value": "UGX",
                  "label": "UGX",
                  "sample": "UGX"
                },
                {
                  "value": "USD",
                  "label": "USD",
                  "sample": "USD"
                },
                {
                  "value": "UYU",
                  "label": "UYU",
                  "sample": "UYU"
                },
                {
                  "value": "UZS",
                  "label": "UZS",
                  "sample": "UZS"
                },
                {
                  "value": "VEF",
                  "label": "VEF",
                  "sample": "VEF"
                },
                {
                  "value": "VES",
                  "label": "VES",
                  "sample": "VES"
                },
                {
                  "value": "VND",
                  "label": "VND",
                  "sample": "VND"
                },
                {
                  "value": "VUV",
                  "label": "VUV",
                  "sample": "VUV"
                },
                {
                  "value": "WST",
                  "label": "WST",
                  "sample": "WST"
                },
                {
                  "value": "XAF",
                  "label": "XAF",
                  "sample": "XAF"
                },
                {
                  "value": "XCD",
                  "label": "XCD",
                  "sample": "XCD"
                },
                {
                  "value": "XOF",
                  "label": "XOF",
                  "sample": "XOF"
                },
                {
                  "value": "XPF",
                  "label": "XPF",
                  "sample": "XPF"
                },
                {
                  "value": "YER",
                  "label": "YER",
                  "sample": "YER"
                },
                {
                  "value": "ZAR",
                  "label": "ZAR",
                  "sample": "ZAR"
                },
                {
                  "value": "ZMW",
                  "label": "ZMW",
                  "sample": "ZMW"
                },
                {
                  "value": "ZMK",
                  "label": "ZMK",
                  "sample": "ZMK"
                },
                {
                  "value": "ZWD",
                  "label": "ZWD",
                  "sample": "ZWD"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.Prepayment.Contact.XeroNetworkKey",
              "label": "Xero Network Key",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Store XeroNetworkKey for contacts."
            },
            {
              "key": "body.Prepayment.Contact.SalesDefaultAccountCode",
              "label": "Sales Default Account Code",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The default sales account code for contacts"
            },
            {
              "key": "body.Prepayment.Contact.PurchasesDefaultAccountCode",
              "label": "Purchases Default Account Code",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The default purchases account code for contacts"
            },
            {
              "key": "body.Prepayment.Contact.SalesTrackingCategories",
              "label": "Sales Tracking Categories",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Prepayment.Contact.PurchasesTrackingCategories",
              "label": "Purchases Tracking Categories",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Prepayment.Contact.TrackingCategoryName",
              "label": "Tracking Category Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The name of the Tracking Category assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories"
            },
            {
              "key": "body.Prepayment.Contact.TrackingCategoryOption",
              "label": "Tracking Category Option",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The name of the Tracking Option assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories"
            },
            {
              "key": "body.Prepayment.Contact.PaymentTerms.Bills.Day",
              "label": "Day",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "",
              "required": false,
              "helpText": "Day of Month (0-31)"
            },
            {
              "key": "body.Prepayment.Contact.PaymentTerms.Bills.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "DAYSAFTERBILLDATE",
                  "DAYSAFTERBILLMONTH",
                  "OFCURRENTMONTH",
                  "OFFOLLOWINGMONTH"
                ]
              },
              "placeholder": "",
              "required": false,
              "choices": [
                {
                  "value": "DAYSAFTERBILLDATE",
                  "label": "DAYSAFTERBILLDATE",
                  "sample": "DAYSAFTERBILLDATE"
                },
                {
                  "value": "DAYSAFTERBILLMONTH",
                  "label": "DAYSAFTERBILLMONTH",
                  "sample": "DAYSAFTERBILLMONTH"
                },
                {
                  "value": "OFCURRENTMONTH",
                  "label": "OFCURRENTMONTH",
                  "sample": "OFCURRENTMONTH"
                },
                {
                  "value": "OFFOLLOWINGMONTH",
                  "label": "OFFOLLOWINGMONTH",
                  "sample": "OFFOLLOWINGMONTH"
                }
              ]
            },
            {
              "key": "body.Prepayment.Contact.PaymentTerms.Sales.Day",
              "label": "Day",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "",
              "required": false,
              "helpText": "Day of Month (0-31)"
            },
            {
              "key": "body.Prepayment.Contact.PaymentTerms.Sales.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "DAYSAFTERBILLDATE",
                  "DAYSAFTERBILLMONTH",
                  "OFCURRENTMONTH",
                  "OFFOLLOWINGMONTH"
                ]
              },
              "placeholder": "",
              "required": false,
              "choices": [
                {
                  "value": "DAYSAFTERBILLDATE",
                  "label": "DAYSAFTERBILLDATE",
                  "sample": "DAYSAFTERBILLDATE"
                },
                {
                  "value": "DAYSAFTERBILLMONTH",
                  "label": "DAYSAFTERBILLMONTH",
                  "sample": "DAYSAFTERBILLMONTH"
                },
                {
                  "value": "OFCURRENTMONTH",
                  "label": "OFCURRENTMONTH",
                  "sample": "OFCURRENTMONTH"
                },
                {
                  "value": "OFFOLLOWINGMONTH",
                  "label": "OFFOLLOWINGMONTH",
                  "sample": "OFFOLLOWINGMONTH"
                }
              ]
            },
            {
              "key": "body.Prepayment.Contact.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of last update to contact",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.Prepayment.Contact.ContactGroups",
              "label": "Contact Groups",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Prepayment.Contact.Website",
              "label": "Website",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Website address for contact (read only)"
            },
            {
              "key": "body.Prepayment.Contact.BrandingTheme.BrandingThemeID",
              "label": "Branding Theme ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero identifier"
            },
            {
              "key": "body.Prepayment.Contact.BrandingTheme.Name",
              "label": "Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Name of branding theme"
            },
            {
              "key": "body.Prepayment.Contact.BrandingTheme.LogoUrl",
              "label": "Logo Url",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The location of the image file used as the logo on this branding theme"
            },
            {
              "key": "body.Prepayment.Contact.BrandingTheme.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "INVOICE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Always INVOICE",
              "choices": [
                {
                  "value": "INVOICE",
                  "label": "INVOICE",
                  "sample": "INVOICE"
                }
              ]
            },
            {
              "key": "body.Prepayment.Contact.BrandingTheme.SortOrder",
              "label": "Sort Order",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "",
              "required": false,
              "helpText": "Integer – ranked order of branding theme. The default branding theme has a value of 0"
            },
            {
              "key": "body.Prepayment.Contact.BrandingTheme.CreatedDateUTC",
              "label": "Created Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of creation date of branding theme",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.Prepayment.Contact.BatchPayments",
              "label": "Batch Payments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Bank details for use on a batch payment stored with each contact"
            },
            {
              "key": "body.Prepayment.Contact.Discount",
              "label": "Discount",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The default discount rate for the contact (read only)"
            },
            {
              "key": "body.Prepayment.Contact.Balances.AccountsReceivable.Outstanding",
              "label": "Outstanding",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.Prepayment.Contact.Balances.AccountsReceivable.Overdue",
              "label": "Overdue",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.Prepayment.Contact.Balances.AccountsPayable.Outstanding",
              "label": "Outstanding",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.Prepayment.Contact.Balances.AccountsPayable.Overdue",
              "label": "Overdue",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.Prepayment.Contact.Attachments",
              "label": "Attachments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Prepayment.Contact.HasAttachments",
              "label": "Has Attachments",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "A boolean to indicate if a contact has an attachment",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.Prepayment.Contact.ValidationErrors",
              "label": "Validation Errors",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Prepayment.Contact.HasValidationErrors",
              "label": "Has Validation Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "A boolean to indicate if a contact has an validation errors",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.Prepayment.Contact.StatusAttributeString",
              "label": "Status Attribute String",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Status of object"
            },
            {
              "key": "body.Prepayment.Date",
              "label": "Date",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The date the prepayment is created YYYY-MM-DD"
            },
            {
              "key": "body.Prepayment.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "AUTHORISED",
                  "PAID",
                  "VOIDED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Prepayment Status Codes",
              "choices": [
                {
                  "value": "AUTHORISED",
                  "label": "AUTHORISED",
                  "sample": "AUTHORISED"
                },
                {
                  "value": "PAID",
                  "label": "PAID",
                  "sample": "PAID"
                },
                {
                  "value": "VOIDED",
                  "label": "VOIDED",
                  "sample": "VOIDED"
                }
              ]
            },
            {
              "key": "body.Prepayment.LineAmountTypes",
              "label": "Line Amount Types",
              "type": "string",
              "validation": {
                "values": [
                  "Exclusive",
                  "Inclusive",
                  "NoTax"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Line amounts are exclusive of tax by default if you don’t specify this element. See Line Amount Types",
              "choices": [
                {
                  "value": "Exclusive",
                  "label": "Exclusive",
                  "sample": "Exclusive"
                },
                {
                  "value": "Inclusive",
                  "label": "Inclusive",
                  "sample": "Inclusive"
                },
                {
                  "value": "NoTax",
                  "label": "NoTax",
                  "sample": "NoTax"
                }
              ]
            },
            {
              "key": "body.Prepayment.LineItems",
              "label": "Line Items",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Prepayment.SubTotal",
              "label": "Sub Total",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The subtotal of the prepayment excluding taxes"
            },
            {
              "key": "body.Prepayment.TotalTax",
              "label": "Total Tax",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The total tax on the prepayment"
            },
            {
              "key": "body.Prepayment.Total",
              "label": "Total",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The total of the prepayment(subtotal + total tax)"
            },
            {
              "key": "body.Prepayment.Reference",
              "label": "Reference",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Returns Invoice number field. Reference field isn't available."
            },
            {
              "key": "body.Prepayment.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of last update to the prepayment",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.Prepayment.CurrencyCode",
              "label": "Currency Code",
              "type": "string",
              "validation": {
                "values": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BYR",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EEK",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LTL",
                  "LVL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SKK",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "STD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "3 letter alpha code for the currency – see list of currency codes",
              "choices": [
                {
                  "value": "AED",
                  "label": "AED",
                  "sample": "AED"
                },
                {
                  "value": "AFN",
                  "label": "AFN",
                  "sample": "AFN"
                },
                {
                  "value": "ALL",
                  "label": "ALL",
                  "sample": "ALL"
                },
                {
                  "value": "AMD",
                  "label": "AMD",
                  "sample": "AMD"
                },
                {
                  "value": "ANG",
                  "label": "ANG",
                  "sample": "ANG"
                },
                {
                  "value": "AOA",
                  "label": "AOA",
                  "sample": "AOA"
                },
                {
                  "value": "ARS",
                  "label": "ARS",
                  "sample": "ARS"
                },
                {
                  "value": "AUD",
                  "label": "AUD",
                  "sample": "AUD"
                },
                {
                  "value": "AWG",
                  "label": "AWG",
                  "sample": "AWG"
                },
                {
                  "value": "AZN",
                  "label": "AZN",
                  "sample": "AZN"
                },
                {
                  "value": "BAM",
                  "label": "BAM",
                  "sample": "BAM"
                },
                {
                  "value": "BBD",
                  "label": "BBD",
                  "sample": "BBD"
                },
                {
                  "value": "BDT",
                  "label": "BDT",
                  "sample": "BDT"
                },
                {
                  "value": "BGN",
                  "label": "BGN",
                  "sample": "BGN"
                },
                {
                  "value": "BHD",
                  "label": "BHD",
                  "sample": "BHD"
                },
                {
                  "value": "BIF",
                  "label": "BIF",
                  "sample": "BIF"
                },
                {
                  "value": "BMD",
                  "label": "BMD",
                  "sample": "BMD"
                },
                {
                  "value": "BND",
                  "label": "BND",
                  "sample": "BND"
                },
                {
                  "value": "BOB",
                  "label": "BOB",
                  "sample": "BOB"
                },
                {
                  "value": "BRL",
                  "label": "BRL",
                  "sample": "BRL"
                },
                {
                  "value": "BSD",
                  "label": "BSD",
                  "sample": "BSD"
                },
                {
                  "value": "BTN",
                  "label": "BTN",
                  "sample": "BTN"
                },
                {
                  "value": "BWP",
                  "label": "BWP",
                  "sample": "BWP"
                },
                {
                  "value": "BYN",
                  "label": "BYN",
                  "sample": "BYN"
                },
                {
                  "value": "BYR",
                  "label": "BYR",
                  "sample": "BYR"
                },
                {
                  "value": "BZD",
                  "label": "BZD",
                  "sample": "BZD"
                },
                {
                  "value": "CAD",
                  "label": "CAD",
                  "sample": "CAD"
                },
                {
                  "value": "CDF",
                  "label": "CDF",
                  "sample": "CDF"
                },
                {
                  "value": "CHF",
                  "label": "CHF",
                  "sample": "CHF"
                },
                {
                  "value": "CLF",
                  "label": "CLF",
                  "sample": "CLF"
                },
                {
                  "value": "CLP",
                  "label": "CLP",
                  "sample": "CLP"
                },
                {
                  "value": "CNY",
                  "label": "CNY",
                  "sample": "CNY"
                },
                {
                  "value": "COP",
                  "label": "COP",
                  "sample": "COP"
                },
                {
                  "value": "CRC",
                  "label": "CRC",
                  "sample": "CRC"
                },
                {
                  "value": "CUC",
                  "label": "CUC",
                  "sample": "CUC"
                },
                {
                  "value": "CUP",
                  "label": "CUP",
                  "sample": "CUP"
                },
                {
                  "value": "CVE",
                  "label": "CVE",
                  "sample": "CVE"
                },
                {
                  "value": "CZK",
                  "label": "CZK",
                  "sample": "CZK"
                },
                {
                  "value": "DJF",
                  "label": "DJF",
                  "sample": "DJF"
                },
                {
                  "value": "DKK",
                  "label": "DKK",
                  "sample": "DKK"
                },
                {
                  "value": "DOP",
                  "label": "DOP",
                  "sample": "DOP"
                },
                {
                  "value": "DZD",
                  "label": "DZD",
                  "sample": "DZD"
                },
                {
                  "value": "EEK",
                  "label": "EEK",
                  "sample": "EEK"
                },
                {
                  "value": "EGP",
                  "label": "EGP",
                  "sample": "EGP"
                },
                {
                  "value": "ERN",
                  "label": "ERN",
                  "sample": "ERN"
                },
                {
                  "value": "ETB",
                  "label": "ETB",
                  "sample": "ETB"
                },
                {
                  "value": "EUR",
                  "label": "EUR",
                  "sample": "EUR"
                },
                {
                  "value": "FJD",
                  "label": "FJD",
                  "sample": "FJD"
                },
                {
                  "value": "FKP",
                  "label": "FKP",
                  "sample": "FKP"
                },
                {
                  "value": "GBP",
                  "label": "GBP",
                  "sample": "GBP"
                },
                {
                  "value": "GEL",
                  "label": "GEL",
                  "sample": "GEL"
                },
                {
                  "value": "GHS",
                  "label": "GHS",
                  "sample": "GHS"
                },
                {
                  "value": "GIP",
                  "label": "GIP",
                  "sample": "GIP"
                },
                {
                  "value": "GMD",
                  "label": "GMD",
                  "sample": "GMD"
                },
                {
                  "value": "GNF",
                  "label": "GNF",
                  "sample": "GNF"
                },
                {
                  "value": "GTQ",
                  "label": "GTQ",
                  "sample": "GTQ"
                },
                {
                  "value": "GYD",
                  "label": "GYD",
                  "sample": "GYD"
                },
                {
                  "value": "HKD",
                  "label": "HKD",
                  "sample": "HKD"
                },
                {
                  "value": "HNL",
                  "label": "HNL",
                  "sample": "HNL"
                },
                {
                  "value": "HRK",
                  "label": "HRK",
                  "sample": "HRK"
                },
                {
                  "value": "HTG",
                  "label": "HTG",
                  "sample": "HTG"
                },
                {
                  "value": "HUF",
                  "label": "HUF",
                  "sample": "HUF"
                },
                {
                  "value": "IDR",
                  "label": "IDR",
                  "sample": "IDR"
                },
                {
                  "value": "ILS",
                  "label": "ILS",
                  "sample": "ILS"
                },
                {
                  "value": "INR",
                  "label": "INR",
                  "sample": "INR"
                },
                {
                  "value": "IQD",
                  "label": "IQD",
                  "sample": "IQD"
                },
                {
                  "value": "IRR",
                  "label": "IRR",
                  "sample": "IRR"
                },
                {
                  "value": "ISK",
                  "label": "ISK",
                  "sample": "ISK"
                },
                {
                  "value": "JMD",
                  "label": "JMD",
                  "sample": "JMD"
                },
                {
                  "value": "JOD",
                  "label": "JOD",
                  "sample": "JOD"
                },
                {
                  "value": "JPY",
                  "label": "JPY",
                  "sample": "JPY"
                },
                {
                  "value": "KES",
                  "label": "KES",
                  "sample": "KES"
                },
                {
                  "value": "KGS",
                  "label": "KGS",
                  "sample": "KGS"
                },
                {
                  "value": "KHR",
                  "label": "KHR",
                  "sample": "KHR"
                },
                {
                  "value": "KMF",
                  "label": "KMF",
                  "sample": "KMF"
                },
                {
                  "value": "KPW",
                  "label": "KPW",
                  "sample": "KPW"
                },
                {
                  "value": "KRW",
                  "label": "KRW",
                  "sample": "KRW"
                },
                {
                  "value": "KWD",
                  "label": "KWD",
                  "sample": "KWD"
                },
                {
                  "value": "KYD",
                  "label": "KYD",
                  "sample": "KYD"
                },
                {
                  "value": "KZT",
                  "label": "KZT",
                  "sample": "KZT"
                },
                {
                  "value": "LAK",
                  "label": "LAK",
                  "sample": "LAK"
                },
                {
                  "value": "LBP",
                  "label": "LBP",
                  "sample": "LBP"
                },
                {
                  "value": "LKR",
                  "label": "LKR",
                  "sample": "LKR"
                },
                {
                  "value": "LRD",
                  "label": "LRD",
                  "sample": "LRD"
                },
                {
                  "value": "LSL",
                  "label": "LSL",
                  "sample": "LSL"
                },
                {
                  "value": "LTL",
                  "label": "LTL",
                  "sample": "LTL"
                },
                {
                  "value": "LVL",
                  "label": "LVL",
                  "sample": "LVL"
                },
                {
                  "value": "LYD",
                  "label": "LYD",
                  "sample": "LYD"
                },
                {
                  "value": "MAD",
                  "label": "MAD",
                  "sample": "MAD"
                },
                {
                  "value": "MDL",
                  "label": "MDL",
                  "sample": "MDL"
                },
                {
                  "value": "MGA",
                  "label": "MGA",
                  "sample": "MGA"
                },
                {
                  "value": "MKD",
                  "label": "MKD",
                  "sample": "MKD"
                },
                {
                  "value": "MMK",
                  "label": "MMK",
                  "sample": "MMK"
                },
                {
                  "value": "MNT",
                  "label": "MNT",
                  "sample": "MNT"
                },
                {
                  "value": "MOP",
                  "label": "MOP",
                  "sample": "MOP"
                },
                {
                  "value": "MRO",
                  "label": "MRO",
                  "sample": "MRO"
                },
                {
                  "value": "MRU",
                  "label": "MRU",
                  "sample": "MRU"
                },
                {
                  "value": "MUR",
                  "label": "MUR",
                  "sample": "MUR"
                },
                {
                  "value": "MVR",
                  "label": "MVR",
                  "sample": "MVR"
                },
                {
                  "value": "MWK",
                  "label": "MWK",
                  "sample": "MWK"
                },
                {
                  "value": "MXN",
                  "label": "MXN",
                  "sample": "MXN"
                },
                {
                  "value": "MXV",
                  "label": "MXV",
                  "sample": "MXV"
                },
                {
                  "value": "MYR",
                  "label": "MYR",
                  "sample": "MYR"
                },
                {
                  "value": "MZN",
                  "label": "MZN",
                  "sample": "MZN"
                },
                {
                  "value": "NAD",
                  "label": "NAD",
                  "sample": "NAD"
                },
                {
                  "value": "NGN",
                  "label": "NGN",
                  "sample": "NGN"
                },
                {
                  "value": "NIO",
                  "label": "NIO",
                  "sample": "NIO"
                },
                {
                  "value": "NOK",
                  "label": "NOK",
                  "sample": "NOK"
                },
                {
                  "value": "NPR",
                  "label": "NPR",
                  "sample": "NPR"
                },
                {
                  "value": "NZD",
                  "label": "NZD",
                  "sample": "NZD"
                },
                {
                  "value": "OMR",
                  "label": "OMR",
                  "sample": "OMR"
                },
                {
                  "value": "PAB",
                  "label": "PAB",
                  "sample": "PAB"
                },
                {
                  "value": "PEN",
                  "label": "PEN",
                  "sample": "PEN"
                },
                {
                  "value": "PGK",
                  "label": "PGK",
                  "sample": "PGK"
                },
                {
                  "value": "PHP",
                  "label": "PHP",
                  "sample": "PHP"
                },
                {
                  "value": "PKR",
                  "label": "PKR",
                  "sample": "PKR"
                },
                {
                  "value": "PLN",
                  "label": "PLN",
                  "sample": "PLN"
                },
                {
                  "value": "PYG",
                  "label": "PYG",
                  "sample": "PYG"
                },
                {
                  "value": "QAR",
                  "label": "QAR",
                  "sample": "QAR"
                },
                {
                  "value": "RON",
                  "label": "RON",
                  "sample": "RON"
                },
                {
                  "value": "RSD",
                  "label": "RSD",
                  "sample": "RSD"
                },
                {
                  "value": "RUB",
                  "label": "RUB",
                  "sample": "RUB"
                },
                {
                  "value": "RWF",
                  "label": "RWF",
                  "sample": "RWF"
                },
                {
                  "value": "SAR",
                  "label": "SAR",
                  "sample": "SAR"
                },
                {
                  "value": "SBD",
                  "label": "SBD",
                  "sample": "SBD"
                },
                {
                  "value": "SCR",
                  "label": "SCR",
                  "sample": "SCR"
                },
                {
                  "value": "SDG",
                  "label": "SDG",
                  "sample": "SDG"
                },
                {
                  "value": "SEK",
                  "label": "SEK",
                  "sample": "SEK"
                },
                {
                  "value": "SGD",
                  "label": "SGD",
                  "sample": "SGD"
                },
                {
                  "value": "SHP",
                  "label": "SHP",
                  "sample": "SHP"
                },
                {
                  "value": "SKK",
                  "label": "SKK",
                  "sample": "SKK"
                },
                {
                  "value": "SLE",
                  "label": "SLE",
                  "sample": "SLE"
                },
                {
                  "value": "SLL",
                  "label": "SLL",
                  "sample": "SLL"
                },
                {
                  "value": "SOS",
                  "label": "SOS",
                  "sample": "SOS"
                },
                {
                  "value": "SRD",
                  "label": "SRD",
                  "sample": "SRD"
                },
                {
                  "value": "STD",
                  "label": "STD",
                  "sample": "STD"
                },
                {
                  "value": "STN",
                  "label": "STN",
                  "sample": "STN"
                },
                {
                  "value": "SVC",
                  "label": "SVC",
                  "sample": "SVC"
                },
                {
                  "value": "SYP",
                  "label": "SYP",
                  "sample": "SYP"
                },
                {
                  "value": "SZL",
                  "label": "SZL",
                  "sample": "SZL"
                },
                {
                  "value": "THB",
                  "label": "THB",
                  "sample": "THB"
                },
                {
                  "value": "TJS",
                  "label": "TJS",
                  "sample": "TJS"
                },
                {
                  "value": "TMT",
                  "label": "TMT",
                  "sample": "TMT"
                },
                {
                  "value": "TND",
                  "label": "TND",
                  "sample": "TND"
                },
                {
                  "value": "TOP",
                  "label": "TOP",
                  "sample": "TOP"
                },
                {
                  "value": "TRY",
                  "label": "TRY",
                  "sample": "TRY"
                },
                {
                  "value": "TTD",
                  "label": "TTD",
                  "sample": "TTD"
                },
                {
                  "value": "TWD",
                  "label": "TWD",
                  "sample": "TWD"
                },
                {
                  "value": "TZS",
                  "label": "TZS",
                  "sample": "TZS"
                },
                {
                  "value": "UAH",
                  "label": "UAH",
                  "sample": "UAH"
                },
                {
                  "value": "UGX",
                  "label": "UGX",
                  "sample": "UGX"
                },
                {
                  "value": "USD",
                  "label": "USD",
                  "sample": "USD"
                },
                {
                  "value": "UYU",
                  "label": "UYU",
                  "sample": "UYU"
                },
                {
                  "value": "UZS",
                  "label": "UZS",
                  "sample": "UZS"
                },
                {
                  "value": "VEF",
                  "label": "VEF",
                  "sample": "VEF"
                },
                {
                  "value": "VES",
                  "label": "VES",
                  "sample": "VES"
                },
                {
                  "value": "VND",
                  "label": "VND",
                  "sample": "VND"
                },
                {
                  "value": "VUV",
                  "label": "VUV",
                  "sample": "VUV"
                },
                {
                  "value": "WST",
                  "label": "WST",
                  "sample": "WST"
                },
                {
                  "value": "XAF",
                  "label": "XAF",
                  "sample": "XAF"
                },
                {
                  "value": "XCD",
                  "label": "XCD",
                  "sample": "XCD"
                },
                {
                  "value": "XOF",
                  "label": "XOF",
                  "sample": "XOF"
                },
                {
                  "value": "XPF",
                  "label": "XPF",
                  "sample": "XPF"
                },
                {
                  "value": "YER",
                  "label": "YER",
                  "sample": "YER"
                },
                {
                  "value": "ZAR",
                  "label": "ZAR",
                  "sample": "ZAR"
                },
                {
                  "value": "ZMW",
                  "label": "ZMW",
                  "sample": "ZMW"
                },
                {
                  "value": "ZMK",
                  "label": "ZMK",
                  "sample": "ZMK"
                },
                {
                  "value": "ZWD",
                  "label": "ZWD",
                  "sample": "ZWD"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.Prepayment.PrepaymentID",
              "label": "Prepayment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero generated unique identifier"
            },
            {
              "key": "body.Prepayment.CurrencyRate",
              "label": "Currency Rate",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The currency rate for a multicurrency prepayment. If no rate is specified, the XE.com day rate is used"
            },
            {
              "key": "body.Prepayment.RemainingCredit",
              "label": "Remaining Credit",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The remaining credit balance on the prepayment"
            },
            {
              "key": "body.Prepayment.Allocations",
              "label": "Allocations",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "body.Prepayment.Payments",
              "label": "Payments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Prepayment.AppliedAmount",
              "label": "Applied Amount",
              "type": "number",
              "validation": {},
              "placeholder": "Example: 2",
              "required": false,
              "helpText": "The amount of applied to an invoice",
              "sample": 2
            },
            {
              "key": "body.Prepayment.HasAttachments",
              "label": "Has Attachments",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "boolean to indicate if a prepayment has an attachment",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.Prepayment.Attachments",
              "label": "Attachments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Overpayment.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "RECEIVE-OVERPAYMENT",
                  "SPEND-OVERPAYMENT",
                  "AROVERPAYMENT"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Overpayment Types",
              "choices": [
                {
                  "value": "RECEIVE-OVERPAYMENT",
                  "label": "RECEIVE-OVERPAYMENT",
                  "sample": "RECEIVE-OVERPAYMENT"
                },
                {
                  "value": "SPEND-OVERPAYMENT",
                  "label": "SPEND-OVERPAYMENT",
                  "sample": "SPEND-OVERPAYMENT"
                },
                {
                  "value": "AROVERPAYMENT",
                  "label": "AROVERPAYMENT",
                  "sample": "AROVERPAYMENT"
                }
              ]
            },
            {
              "key": "body.Overpayment.Contact.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero identifier"
            },
            {
              "key": "body.Overpayment.Contact.MergedToContactID",
              "label": "Merged To Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "ID for the destination of a merged contact. Only returned when using paging or when fetching a contact by ContactId or ContactNumber."
            },
            {
              "key": "body.Overpayment.Contact.ContactNumber",
              "label": "Contact Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "This can be updated via the API only i.e. This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50). If the Contact Number is used, this is displayed as Contact Code in the Contacts UI in Xero."
            },
            {
              "key": "body.Overpayment.Contact.AccountNumber",
              "label": "Account Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "A user defined account number. This can be updated via the API and the Xero UI (max length = 50)"
            },
            {
              "key": "body.Overpayment.Contact.ContactStatus",
              "label": "Contact Status",
              "type": "string",
              "validation": {
                "values": [
                  "ACTIVE",
                  "ARCHIVED",
                  "GDPRREQUEST"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Current status of a contact – see contact status types",
              "choices": [
                {
                  "value": "ACTIVE",
                  "label": "ACTIVE",
                  "sample": "ACTIVE"
                },
                {
                  "value": "ARCHIVED",
                  "label": "ARCHIVED",
                  "sample": "ARCHIVED"
                },
                {
                  "value": "GDPRREQUEST",
                  "label": "GDPRREQUEST",
                  "sample": "GDPRREQUEST"
                }
              ]
            },
            {
              "key": "body.Overpayment.Contact.Name",
              "label": "Name",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "Full name of contact/organisation (max length = 255)"
            },
            {
              "key": "body.Overpayment.Contact.FirstName",
              "label": "First Name",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "First name of contact person (max length = 255)"
            },
            {
              "key": "body.Overpayment.Contact.LastName",
              "label": "Last Name",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "Last name of contact person (max length = 255)"
            },
            {
              "key": "body.Overpayment.Contact.CompanyNumber",
              "label": "Company Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "Company registration number (max length = 50)"
            },
            {
              "key": "body.Overpayment.Contact.EmailAddress",
              "label": "Email Address",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "Email address of contact person (umlauts not supported) (max length  = 255)"
            },
            {
              "key": "body.Overpayment.Contact.SkypeUserName",
              "label": "Skype User Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Skype user name of contact"
            },
            {
              "key": "body.Overpayment.Contact.ContactPersons",
              "label": "Contact Persons",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Overpayment.Contact.BankAccountDetails",
              "label": "Bank Account Details",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Bank account number of contact"
            },
            {
              "key": "body.Overpayment.Contact.TaxNumber",
              "label": "Tax Number",
              "type": "string",
              "validation": {
                "max": 50
              },
              "placeholder": "",
              "required": false,
              "helpText": "Tax number of contact – this is also known as the ABN (Australia), GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and global) in the Xero UI depending on which regionalized version of Xero you are using (max length = 50)"
            },
            {
              "key": "body.Overpayment.Contact.AccountsReceivableTaxType",
              "label": "Accounts Receivable Tax Type",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The tax type from TaxRates"
            },
            {
              "key": "body.Overpayment.Contact.AccountsPayableTaxType",
              "label": "Accounts Payable Tax Type",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The tax type from TaxRates"
            },
            {
              "key": "body.Overpayment.Contact.Addresses",
              "label": "Addresses",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Overpayment.Contact.Phones",
              "label": "Phones",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Overpayment.Contact.IsSupplier",
              "label": "Is Supplier",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "true or false – Boolean that describes if a contact that has any AP  invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts payable invoice is generated against this contact."
            },
            {
              "key": "body.Overpayment.Contact.IsCustomer",
              "label": "Is Customer",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "true or false – Boolean that describes if a contact has any AR invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts receivable invoice is generated against this contact."
            },
            {
              "key": "body.Overpayment.Contact.SalesDefaultLineAmountType",
              "label": "Sales Default Line Amount Type",
              "type": "string",
              "validation": {
                "values": [
                  "INCLUSIVE",
                  "EXCLUSIVE",
                  "NONE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The default sales line amount type for a contact. Only available when summaryOnly parameter or paging is used, or when fetch by ContactId or ContactNumber.",
              "choices": [
                {
                  "value": "INCLUSIVE",
                  "label": "INCLUSIVE",
                  "sample": "INCLUSIVE"
                },
                {
                  "value": "EXCLUSIVE",
                  "label": "EXCLUSIVE",
                  "sample": "EXCLUSIVE"
                },
                {
                  "value": "NONE",
                  "label": "NONE",
                  "sample": "NONE"
                }
              ]
            },
            {
              "key": "body.Overpayment.Contact.PurchasesDefaultLineAmountType",
              "label": "Purchases Default Line Amount Type",
              "type": "string",
              "validation": {
                "values": [
                  "INCLUSIVE",
                  "EXCLUSIVE",
                  "NONE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The default purchases line amount type for a contact Only available when summaryOnly parameter or paging is used, or when fetch by ContactId or ContactNumber.",
              "choices": [
                {
                  "value": "INCLUSIVE",
                  "label": "INCLUSIVE",
                  "sample": "INCLUSIVE"
                },
                {
                  "value": "EXCLUSIVE",
                  "label": "EXCLUSIVE",
                  "sample": "EXCLUSIVE"
                },
                {
                  "value": "NONE",
                  "label": "NONE",
                  "sample": "NONE"
                }
              ]
            },
            {
              "key": "body.Overpayment.Contact.DefaultCurrency",
              "label": "Default Currency",
              "type": "string",
              "validation": {
                "values": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BYR",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EEK",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LTL",
                  "LVL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SKK",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "STD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "3 letter alpha code for the currency – see list of currency codes",
              "choices": [
                {
                  "value": "AED",
                  "label": "AED",
                  "sample": "AED"
                },
                {
                  "value": "AFN",
                  "label": "AFN",
                  "sample": "AFN"
                },
                {
                  "value": "ALL",
                  "label": "ALL",
                  "sample": "ALL"
                },
                {
                  "value": "AMD",
                  "label": "AMD",
                  "sample": "AMD"
                },
                {
                  "value": "ANG",
                  "label": "ANG",
                  "sample": "ANG"
                },
                {
                  "value": "AOA",
                  "label": "AOA",
                  "sample": "AOA"
                },
                {
                  "value": "ARS",
                  "label": "ARS",
                  "sample": "ARS"
                },
                {
                  "value": "AUD",
                  "label": "AUD",
                  "sample": "AUD"
                },
                {
                  "value": "AWG",
                  "label": "AWG",
                  "sample": "AWG"
                },
                {
                  "value": "AZN",
                  "label": "AZN",
                  "sample": "AZN"
                },
                {
                  "value": "BAM",
                  "label": "BAM",
                  "sample": "BAM"
                },
                {
                  "value": "BBD",
                  "label": "BBD",
                  "sample": "BBD"
                },
                {
                  "value": "BDT",
                  "label": "BDT",
                  "sample": "BDT"
                },
                {
                  "value": "BGN",
                  "label": "BGN",
                  "sample": "BGN"
                },
                {
                  "value": "BHD",
                  "label": "BHD",
                  "sample": "BHD"
                },
                {
                  "value": "BIF",
                  "label": "BIF",
                  "sample": "BIF"
                },
                {
                  "value": "BMD",
                  "label": "BMD",
                  "sample": "BMD"
                },
                {
                  "value": "BND",
                  "label": "BND",
                  "sample": "BND"
                },
                {
                  "value": "BOB",
                  "label": "BOB",
                  "sample": "BOB"
                },
                {
                  "value": "BRL",
                  "label": "BRL",
                  "sample": "BRL"
                },
                {
                  "value": "BSD",
                  "label": "BSD",
                  "sample": "BSD"
                },
                {
                  "value": "BTN",
                  "label": "BTN",
                  "sample": "BTN"
                },
                {
                  "value": "BWP",
                  "label": "BWP",
                  "sample": "BWP"
                },
                {
                  "value": "BYN",
                  "label": "BYN",
                  "sample": "BYN"
                },
                {
                  "value": "BYR",
                  "label": "BYR",
                  "sample": "BYR"
                },
                {
                  "value": "BZD",
                  "label": "BZD",
                  "sample": "BZD"
                },
                {
                  "value": "CAD",
                  "label": "CAD",
                  "sample": "CAD"
                },
                {
                  "value": "CDF",
                  "label": "CDF",
                  "sample": "CDF"
                },
                {
                  "value": "CHF",
                  "label": "CHF",
                  "sample": "CHF"
                },
                {
                  "value": "CLF",
                  "label": "CLF",
                  "sample": "CLF"
                },
                {
                  "value": "CLP",
                  "label": "CLP",
                  "sample": "CLP"
                },
                {
                  "value": "CNY",
                  "label": "CNY",
                  "sample": "CNY"
                },
                {
                  "value": "COP",
                  "label": "COP",
                  "sample": "COP"
                },
                {
                  "value": "CRC",
                  "label": "CRC",
                  "sample": "CRC"
                },
                {
                  "value": "CUC",
                  "label": "CUC",
                  "sample": "CUC"
                },
                {
                  "value": "CUP",
                  "label": "CUP",
                  "sample": "CUP"
                },
                {
                  "value": "CVE",
                  "label": "CVE",
                  "sample": "CVE"
                },
                {
                  "value": "CZK",
                  "label": "CZK",
                  "sample": "CZK"
                },
                {
                  "value": "DJF",
                  "label": "DJF",
                  "sample": "DJF"
                },
                {
                  "value": "DKK",
                  "label": "DKK",
                  "sample": "DKK"
                },
                {
                  "value": "DOP",
                  "label": "DOP",
                  "sample": "DOP"
                },
                {
                  "value": "DZD",
                  "label": "DZD",
                  "sample": "DZD"
                },
                {
                  "value": "EEK",
                  "label": "EEK",
                  "sample": "EEK"
                },
                {
                  "value": "EGP",
                  "label": "EGP",
                  "sample": "EGP"
                },
                {
                  "value": "ERN",
                  "label": "ERN",
                  "sample": "ERN"
                },
                {
                  "value": "ETB",
                  "label": "ETB",
                  "sample": "ETB"
                },
                {
                  "value": "EUR",
                  "label": "EUR",
                  "sample": "EUR"
                },
                {
                  "value": "FJD",
                  "label": "FJD",
                  "sample": "FJD"
                },
                {
                  "value": "FKP",
                  "label": "FKP",
                  "sample": "FKP"
                },
                {
                  "value": "GBP",
                  "label": "GBP",
                  "sample": "GBP"
                },
                {
                  "value": "GEL",
                  "label": "GEL",
                  "sample": "GEL"
                },
                {
                  "value": "GHS",
                  "label": "GHS",
                  "sample": "GHS"
                },
                {
                  "value": "GIP",
                  "label": "GIP",
                  "sample": "GIP"
                },
                {
                  "value": "GMD",
                  "label": "GMD",
                  "sample": "GMD"
                },
                {
                  "value": "GNF",
                  "label": "GNF",
                  "sample": "GNF"
                },
                {
                  "value": "GTQ",
                  "label": "GTQ",
                  "sample": "GTQ"
                },
                {
                  "value": "GYD",
                  "label": "GYD",
                  "sample": "GYD"
                },
                {
                  "value": "HKD",
                  "label": "HKD",
                  "sample": "HKD"
                },
                {
                  "value": "HNL",
                  "label": "HNL",
                  "sample": "HNL"
                },
                {
                  "value": "HRK",
                  "label": "HRK",
                  "sample": "HRK"
                },
                {
                  "value": "HTG",
                  "label": "HTG",
                  "sample": "HTG"
                },
                {
                  "value": "HUF",
                  "label": "HUF",
                  "sample": "HUF"
                },
                {
                  "value": "IDR",
                  "label": "IDR",
                  "sample": "IDR"
                },
                {
                  "value": "ILS",
                  "label": "ILS",
                  "sample": "ILS"
                },
                {
                  "value": "INR",
                  "label": "INR",
                  "sample": "INR"
                },
                {
                  "value": "IQD",
                  "label": "IQD",
                  "sample": "IQD"
                },
                {
                  "value": "IRR",
                  "label": "IRR",
                  "sample": "IRR"
                },
                {
                  "value": "ISK",
                  "label": "ISK",
                  "sample": "ISK"
                },
                {
                  "value": "JMD",
                  "label": "JMD",
                  "sample": "JMD"
                },
                {
                  "value": "JOD",
                  "label": "JOD",
                  "sample": "JOD"
                },
                {
                  "value": "JPY",
                  "label": "JPY",
                  "sample": "JPY"
                },
                {
                  "value": "KES",
                  "label": "KES",
                  "sample": "KES"
                },
                {
                  "value": "KGS",
                  "label": "KGS",
                  "sample": "KGS"
                },
                {
                  "value": "KHR",
                  "label": "KHR",
                  "sample": "KHR"
                },
                {
                  "value": "KMF",
                  "label": "KMF",
                  "sample": "KMF"
                },
                {
                  "value": "KPW",
                  "label": "KPW",
                  "sample": "KPW"
                },
                {
                  "value": "KRW",
                  "label": "KRW",
                  "sample": "KRW"
                },
                {
                  "value": "KWD",
                  "label": "KWD",
                  "sample": "KWD"
                },
                {
                  "value": "KYD",
                  "label": "KYD",
                  "sample": "KYD"
                },
                {
                  "value": "KZT",
                  "label": "KZT",
                  "sample": "KZT"
                },
                {
                  "value": "LAK",
                  "label": "LAK",
                  "sample": "LAK"
                },
                {
                  "value": "LBP",
                  "label": "LBP",
                  "sample": "LBP"
                },
                {
                  "value": "LKR",
                  "label": "LKR",
                  "sample": "LKR"
                },
                {
                  "value": "LRD",
                  "label": "LRD",
                  "sample": "LRD"
                },
                {
                  "value": "LSL",
                  "label": "LSL",
                  "sample": "LSL"
                },
                {
                  "value": "LTL",
                  "label": "LTL",
                  "sample": "LTL"
                },
                {
                  "value": "LVL",
                  "label": "LVL",
                  "sample": "LVL"
                },
                {
                  "value": "LYD",
                  "label": "LYD",
                  "sample": "LYD"
                },
                {
                  "value": "MAD",
                  "label": "MAD",
                  "sample": "MAD"
                },
                {
                  "value": "MDL",
                  "label": "MDL",
                  "sample": "MDL"
                },
                {
                  "value": "MGA",
                  "label": "MGA",
                  "sample": "MGA"
                },
                {
                  "value": "MKD",
                  "label": "MKD",
                  "sample": "MKD"
                },
                {
                  "value": "MMK",
                  "label": "MMK",
                  "sample": "MMK"
                },
                {
                  "value": "MNT",
                  "label": "MNT",
                  "sample": "MNT"
                },
                {
                  "value": "MOP",
                  "label": "MOP",
                  "sample": "MOP"
                },
                {
                  "value": "MRO",
                  "label": "MRO",
                  "sample": "MRO"
                },
                {
                  "value": "MRU",
                  "label": "MRU",
                  "sample": "MRU"
                },
                {
                  "value": "MUR",
                  "label": "MUR",
                  "sample": "MUR"
                },
                {
                  "value": "MVR",
                  "label": "MVR",
                  "sample": "MVR"
                },
                {
                  "value": "MWK",
                  "label": "MWK",
                  "sample": "MWK"
                },
                {
                  "value": "MXN",
                  "label": "MXN",
                  "sample": "MXN"
                },
                {
                  "value": "MXV",
                  "label": "MXV",
                  "sample": "MXV"
                },
                {
                  "value": "MYR",
                  "label": "MYR",
                  "sample": "MYR"
                },
                {
                  "value": "MZN",
                  "label": "MZN",
                  "sample": "MZN"
                },
                {
                  "value": "NAD",
                  "label": "NAD",
                  "sample": "NAD"
                },
                {
                  "value": "NGN",
                  "label": "NGN",
                  "sample": "NGN"
                },
                {
                  "value": "NIO",
                  "label": "NIO",
                  "sample": "NIO"
                },
                {
                  "value": "NOK",
                  "label": "NOK",
                  "sample": "NOK"
                },
                {
                  "value": "NPR",
                  "label": "NPR",
                  "sample": "NPR"
                },
                {
                  "value": "NZD",
                  "label": "NZD",
                  "sample": "NZD"
                },
                {
                  "value": "OMR",
                  "label": "OMR",
                  "sample": "OMR"
                },
                {
                  "value": "PAB",
                  "label": "PAB",
                  "sample": "PAB"
                },
                {
                  "value": "PEN",
                  "label": "PEN",
                  "sample": "PEN"
                },
                {
                  "value": "PGK",
                  "label": "PGK",
                  "sample": "PGK"
                },
                {
                  "value": "PHP",
                  "label": "PHP",
                  "sample": "PHP"
                },
                {
                  "value": "PKR",
                  "label": "PKR",
                  "sample": "PKR"
                },
                {
                  "value": "PLN",
                  "label": "PLN",
                  "sample": "PLN"
                },
                {
                  "value": "PYG",
                  "label": "PYG",
                  "sample": "PYG"
                },
                {
                  "value": "QAR",
                  "label": "QAR",
                  "sample": "QAR"
                },
                {
                  "value": "RON",
                  "label": "RON",
                  "sample": "RON"
                },
                {
                  "value": "RSD",
                  "label": "RSD",
                  "sample": "RSD"
                },
                {
                  "value": "RUB",
                  "label": "RUB",
                  "sample": "RUB"
                },
                {
                  "value": "RWF",
                  "label": "RWF",
                  "sample": "RWF"
                },
                {
                  "value": "SAR",
                  "label": "SAR",
                  "sample": "SAR"
                },
                {
                  "value": "SBD",
                  "label": "SBD",
                  "sample": "SBD"
                },
                {
                  "value": "SCR",
                  "label": "SCR",
                  "sample": "SCR"
                },
                {
                  "value": "SDG",
                  "label": "SDG",
                  "sample": "SDG"
                },
                {
                  "value": "SEK",
                  "label": "SEK",
                  "sample": "SEK"
                },
                {
                  "value": "SGD",
                  "label": "SGD",
                  "sample": "SGD"
                },
                {
                  "value": "SHP",
                  "label": "SHP",
                  "sample": "SHP"
                },
                {
                  "value": "SKK",
                  "label": "SKK",
                  "sample": "SKK"
                },
                {
                  "value": "SLE",
                  "label": "SLE",
                  "sample": "SLE"
                },
                {
                  "value": "SLL",
                  "label": "SLL",
                  "sample": "SLL"
                },
                {
                  "value": "SOS",
                  "label": "SOS",
                  "sample": "SOS"
                },
                {
                  "value": "SRD",
                  "label": "SRD",
                  "sample": "SRD"
                },
                {
                  "value": "STD",
                  "label": "STD",
                  "sample": "STD"
                },
                {
                  "value": "STN",
                  "label": "STN",
                  "sample": "STN"
                },
                {
                  "value": "SVC",
                  "label": "SVC",
                  "sample": "SVC"
                },
                {
                  "value": "SYP",
                  "label": "SYP",
                  "sample": "SYP"
                },
                {
                  "value": "SZL",
                  "label": "SZL",
                  "sample": "SZL"
                },
                {
                  "value": "THB",
                  "label": "THB",
                  "sample": "THB"
                },
                {
                  "value": "TJS",
                  "label": "TJS",
                  "sample": "TJS"
                },
                {
                  "value": "TMT",
                  "label": "TMT",
                  "sample": "TMT"
                },
                {
                  "value": "TND",
                  "label": "TND",
                  "sample": "TND"
                },
                {
                  "value": "TOP",
                  "label": "TOP",
                  "sample": "TOP"
                },
                {
                  "value": "TRY",
                  "label": "TRY",
                  "sample": "TRY"
                },
                {
                  "value": "TTD",
                  "label": "TTD",
                  "sample": "TTD"
                },
                {
                  "value": "TWD",
                  "label": "TWD",
                  "sample": "TWD"
                },
                {
                  "value": "TZS",
                  "label": "TZS",
                  "sample": "TZS"
                },
                {
                  "value": "UAH",
                  "label": "UAH",
                  "sample": "UAH"
                },
                {
                  "value": "UGX",
                  "label": "UGX",
                  "sample": "UGX"
                },
                {
                  "value": "USD",
                  "label": "USD",
                  "sample": "USD"
                },
                {
                  "value": "UYU",
                  "label": "UYU",
                  "sample": "UYU"
                },
                {
                  "value": "UZS",
                  "label": "UZS",
                  "sample": "UZS"
                },
                {
                  "value": "VEF",
                  "label": "VEF",
                  "sample": "VEF"
                },
                {
                  "value": "VES",
                  "label": "VES",
                  "sample": "VES"
                },
                {
                  "value": "VND",
                  "label": "VND",
                  "sample": "VND"
                },
                {
                  "value": "VUV",
                  "label": "VUV",
                  "sample": "VUV"
                },
                {
                  "value": "WST",
                  "label": "WST",
                  "sample": "WST"
                },
                {
                  "value": "XAF",
                  "label": "XAF",
                  "sample": "XAF"
                },
                {
                  "value": "XCD",
                  "label": "XCD",
                  "sample": "XCD"
                },
                {
                  "value": "XOF",
                  "label": "XOF",
                  "sample": "XOF"
                },
                {
                  "value": "XPF",
                  "label": "XPF",
                  "sample": "XPF"
                },
                {
                  "value": "YER",
                  "label": "YER",
                  "sample": "YER"
                },
                {
                  "value": "ZAR",
                  "label": "ZAR",
                  "sample": "ZAR"
                },
                {
                  "value": "ZMW",
                  "label": "ZMW",
                  "sample": "ZMW"
                },
                {
                  "value": "ZMK",
                  "label": "ZMK",
                  "sample": "ZMK"
                },
                {
                  "value": "ZWD",
                  "label": "ZWD",
                  "sample": "ZWD"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.Overpayment.Contact.XeroNetworkKey",
              "label": "Xero Network Key",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Store XeroNetworkKey for contacts."
            },
            {
              "key": "body.Overpayment.Contact.SalesDefaultAccountCode",
              "label": "Sales Default Account Code",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The default sales account code for contacts"
            },
            {
              "key": "body.Overpayment.Contact.PurchasesDefaultAccountCode",
              "label": "Purchases Default Account Code",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The default purchases account code for contacts"
            },
            {
              "key": "body.Overpayment.Contact.SalesTrackingCategories",
              "label": "Sales Tracking Categories",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Overpayment.Contact.PurchasesTrackingCategories",
              "label": "Purchases Tracking Categories",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Overpayment.Contact.TrackingCategoryName",
              "label": "Tracking Category Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The name of the Tracking Category assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories"
            },
            {
              "key": "body.Overpayment.Contact.TrackingCategoryOption",
              "label": "Tracking Category Option",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The name of the Tracking Option assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories"
            },
            {
              "key": "body.Overpayment.Contact.PaymentTerms.Bills.Day",
              "label": "Day",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "",
              "required": false,
              "helpText": "Day of Month (0-31)"
            },
            {
              "key": "body.Overpayment.Contact.PaymentTerms.Bills.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "DAYSAFTERBILLDATE",
                  "DAYSAFTERBILLMONTH",
                  "OFCURRENTMONTH",
                  "OFFOLLOWINGMONTH"
                ]
              },
              "placeholder": "",
              "required": false,
              "choices": [
                {
                  "value": "DAYSAFTERBILLDATE",
                  "label": "DAYSAFTERBILLDATE",
                  "sample": "DAYSAFTERBILLDATE"
                },
                {
                  "value": "DAYSAFTERBILLMONTH",
                  "label": "DAYSAFTERBILLMONTH",
                  "sample": "DAYSAFTERBILLMONTH"
                },
                {
                  "value": "OFCURRENTMONTH",
                  "label": "OFCURRENTMONTH",
                  "sample": "OFCURRENTMONTH"
                },
                {
                  "value": "OFFOLLOWINGMONTH",
                  "label": "OFFOLLOWINGMONTH",
                  "sample": "OFFOLLOWINGMONTH"
                }
              ]
            },
            {
              "key": "body.Overpayment.Contact.PaymentTerms.Sales.Day",
              "label": "Day",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "",
              "required": false,
              "helpText": "Day of Month (0-31)"
            },
            {
              "key": "body.Overpayment.Contact.PaymentTerms.Sales.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "DAYSAFTERBILLDATE",
                  "DAYSAFTERBILLMONTH",
                  "OFCURRENTMONTH",
                  "OFFOLLOWINGMONTH"
                ]
              },
              "placeholder": "",
              "required": false,
              "choices": [
                {
                  "value": "DAYSAFTERBILLDATE",
                  "label": "DAYSAFTERBILLDATE",
                  "sample": "DAYSAFTERBILLDATE"
                },
                {
                  "value": "DAYSAFTERBILLMONTH",
                  "label": "DAYSAFTERBILLMONTH",
                  "sample": "DAYSAFTERBILLMONTH"
                },
                {
                  "value": "OFCURRENTMONTH",
                  "label": "OFCURRENTMONTH",
                  "sample": "OFCURRENTMONTH"
                },
                {
                  "value": "OFFOLLOWINGMONTH",
                  "label": "OFFOLLOWINGMONTH",
                  "sample": "OFFOLLOWINGMONTH"
                }
              ]
            },
            {
              "key": "body.Overpayment.Contact.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of last update to contact",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.Overpayment.Contact.ContactGroups",
              "label": "Contact Groups",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Overpayment.Contact.Website",
              "label": "Website",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Website address for contact (read only)"
            },
            {
              "key": "body.Overpayment.Contact.BrandingTheme.BrandingThemeID",
              "label": "Branding Theme ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero identifier"
            },
            {
              "key": "body.Overpayment.Contact.BrandingTheme.Name",
              "label": "Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Name of branding theme"
            },
            {
              "key": "body.Overpayment.Contact.BrandingTheme.LogoUrl",
              "label": "Logo Url",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The location of the image file used as the logo on this branding theme"
            },
            {
              "key": "body.Overpayment.Contact.BrandingTheme.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "INVOICE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Always INVOICE",
              "choices": [
                {
                  "value": "INVOICE",
                  "label": "INVOICE",
                  "sample": "INVOICE"
                }
              ]
            },
            {
              "key": "body.Overpayment.Contact.BrandingTheme.SortOrder",
              "label": "Sort Order",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "",
              "required": false,
              "helpText": "Integer – ranked order of branding theme. The default branding theme has a value of 0"
            },
            {
              "key": "body.Overpayment.Contact.BrandingTheme.CreatedDateUTC",
              "label": "Created Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of creation date of branding theme",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.Overpayment.Contact.BatchPayments",
              "label": "Batch Payments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Bank details for use on a batch payment stored with each contact"
            },
            {
              "key": "body.Overpayment.Contact.Discount",
              "label": "Discount",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The default discount rate for the contact (read only)"
            },
            {
              "key": "body.Overpayment.Contact.Balances.AccountsReceivable.Outstanding",
              "label": "Outstanding",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.Overpayment.Contact.Balances.AccountsReceivable.Overdue",
              "label": "Overdue",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.Overpayment.Contact.Balances.AccountsPayable.Outstanding",
              "label": "Outstanding",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.Overpayment.Contact.Balances.AccountsPayable.Overdue",
              "label": "Overdue",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "body.Overpayment.Contact.Attachments",
              "label": "Attachments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Overpayment.Contact.HasAttachments",
              "label": "Has Attachments",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "A boolean to indicate if a contact has an attachment",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.Overpayment.Contact.ValidationErrors",
              "label": "Validation Errors",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Overpayment.Contact.HasValidationErrors",
              "label": "Has Validation Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "A boolean to indicate if a contact has an validation errors",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.Overpayment.Contact.StatusAttributeString",
              "label": "Status Attribute String",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Status of object"
            },
            {
              "key": "body.Overpayment.Date",
              "label": "Date",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The date the overpayment is created YYYY-MM-DD"
            },
            {
              "key": "body.Overpayment.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "AUTHORISED",
                  "PAID",
                  "VOIDED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Overpayment Status Codes",
              "choices": [
                {
                  "value": "AUTHORISED",
                  "label": "AUTHORISED",
                  "sample": "AUTHORISED"
                },
                {
                  "value": "PAID",
                  "label": "PAID",
                  "sample": "PAID"
                },
                {
                  "value": "VOIDED",
                  "label": "VOIDED",
                  "sample": "VOIDED"
                }
              ]
            },
            {
              "key": "body.Overpayment.LineAmountTypes",
              "label": "Line Amount Types",
              "type": "string",
              "validation": {
                "values": [
                  "Exclusive",
                  "Inclusive",
                  "NoTax"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Line amounts are exclusive of tax by default if you don’t specify this element. See Line Amount Types",
              "choices": [
                {
                  "value": "Exclusive",
                  "label": "Exclusive",
                  "sample": "Exclusive"
                },
                {
                  "value": "Inclusive",
                  "label": "Inclusive",
                  "sample": "Inclusive"
                },
                {
                  "value": "NoTax",
                  "label": "NoTax",
                  "sample": "NoTax"
                }
              ]
            },
            {
              "key": "body.Overpayment.LineItems",
              "label": "Line Items",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Overpayment.SubTotal",
              "label": "Sub Total",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The subtotal of the overpayment excluding taxes"
            },
            {
              "key": "body.Overpayment.TotalTax",
              "label": "Total Tax",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The total tax on the overpayment"
            },
            {
              "key": "body.Overpayment.Total",
              "label": "Total",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The total of the overpayment (subtotal + total tax)"
            },
            {
              "key": "body.Overpayment.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of last update to the overpayment",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.Overpayment.CurrencyCode",
              "label": "Currency Code",
              "type": "string",
              "validation": {
                "values": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BYR",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EEK",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LTL",
                  "LVL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SKK",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "STD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "3 letter alpha code for the currency – see list of currency codes",
              "choices": [
                {
                  "value": "AED",
                  "label": "AED",
                  "sample": "AED"
                },
                {
                  "value": "AFN",
                  "label": "AFN",
                  "sample": "AFN"
                },
                {
                  "value": "ALL",
                  "label": "ALL",
                  "sample": "ALL"
                },
                {
                  "value": "AMD",
                  "label": "AMD",
                  "sample": "AMD"
                },
                {
                  "value": "ANG",
                  "label": "ANG",
                  "sample": "ANG"
                },
                {
                  "value": "AOA",
                  "label": "AOA",
                  "sample": "AOA"
                },
                {
                  "value": "ARS",
                  "label": "ARS",
                  "sample": "ARS"
                },
                {
                  "value": "AUD",
                  "label": "AUD",
                  "sample": "AUD"
                },
                {
                  "value": "AWG",
                  "label": "AWG",
                  "sample": "AWG"
                },
                {
                  "value": "AZN",
                  "label": "AZN",
                  "sample": "AZN"
                },
                {
                  "value": "BAM",
                  "label": "BAM",
                  "sample": "BAM"
                },
                {
                  "value": "BBD",
                  "label": "BBD",
                  "sample": "BBD"
                },
                {
                  "value": "BDT",
                  "label": "BDT",
                  "sample": "BDT"
                },
                {
                  "value": "BGN",
                  "label": "BGN",
                  "sample": "BGN"
                },
                {
                  "value": "BHD",
                  "label": "BHD",
                  "sample": "BHD"
                },
                {
                  "value": "BIF",
                  "label": "BIF",
                  "sample": "BIF"
                },
                {
                  "value": "BMD",
                  "label": "BMD",
                  "sample": "BMD"
                },
                {
                  "value": "BND",
                  "label": "BND",
                  "sample": "BND"
                },
                {
                  "value": "BOB",
                  "label": "BOB",
                  "sample": "BOB"
                },
                {
                  "value": "BRL",
                  "label": "BRL",
                  "sample": "BRL"
                },
                {
                  "value": "BSD",
                  "label": "BSD",
                  "sample": "BSD"
                },
                {
                  "value": "BTN",
                  "label": "BTN",
                  "sample": "BTN"
                },
                {
                  "value": "BWP",
                  "label": "BWP",
                  "sample": "BWP"
                },
                {
                  "value": "BYN",
                  "label": "BYN",
                  "sample": "BYN"
                },
                {
                  "value": "BYR",
                  "label": "BYR",
                  "sample": "BYR"
                },
                {
                  "value": "BZD",
                  "label": "BZD",
                  "sample": "BZD"
                },
                {
                  "value": "CAD",
                  "label": "CAD",
                  "sample": "CAD"
                },
                {
                  "value": "CDF",
                  "label": "CDF",
                  "sample": "CDF"
                },
                {
                  "value": "CHF",
                  "label": "CHF",
                  "sample": "CHF"
                },
                {
                  "value": "CLF",
                  "label": "CLF",
                  "sample": "CLF"
                },
                {
                  "value": "CLP",
                  "label": "CLP",
                  "sample": "CLP"
                },
                {
                  "value": "CNY",
                  "label": "CNY",
                  "sample": "CNY"
                },
                {
                  "value": "COP",
                  "label": "COP",
                  "sample": "COP"
                },
                {
                  "value": "CRC",
                  "label": "CRC",
                  "sample": "CRC"
                },
                {
                  "value": "CUC",
                  "label": "CUC",
                  "sample": "CUC"
                },
                {
                  "value": "CUP",
                  "label": "CUP",
                  "sample": "CUP"
                },
                {
                  "value": "CVE",
                  "label": "CVE",
                  "sample": "CVE"
                },
                {
                  "value": "CZK",
                  "label": "CZK",
                  "sample": "CZK"
                },
                {
                  "value": "DJF",
                  "label": "DJF",
                  "sample": "DJF"
                },
                {
                  "value": "DKK",
                  "label": "DKK",
                  "sample": "DKK"
                },
                {
                  "value": "DOP",
                  "label": "DOP",
                  "sample": "DOP"
                },
                {
                  "value": "DZD",
                  "label": "DZD",
                  "sample": "DZD"
                },
                {
                  "value": "EEK",
                  "label": "EEK",
                  "sample": "EEK"
                },
                {
                  "value": "EGP",
                  "label": "EGP",
                  "sample": "EGP"
                },
                {
                  "value": "ERN",
                  "label": "ERN",
                  "sample": "ERN"
                },
                {
                  "value": "ETB",
                  "label": "ETB",
                  "sample": "ETB"
                },
                {
                  "value": "EUR",
                  "label": "EUR",
                  "sample": "EUR"
                },
                {
                  "value": "FJD",
                  "label": "FJD",
                  "sample": "FJD"
                },
                {
                  "value": "FKP",
                  "label": "FKP",
                  "sample": "FKP"
                },
                {
                  "value": "GBP",
                  "label": "GBP",
                  "sample": "GBP"
                },
                {
                  "value": "GEL",
                  "label": "GEL",
                  "sample": "GEL"
                },
                {
                  "value": "GHS",
                  "label": "GHS",
                  "sample": "GHS"
                },
                {
                  "value": "GIP",
                  "label": "GIP",
                  "sample": "GIP"
                },
                {
                  "value": "GMD",
                  "label": "GMD",
                  "sample": "GMD"
                },
                {
                  "value": "GNF",
                  "label": "GNF",
                  "sample": "GNF"
                },
                {
                  "value": "GTQ",
                  "label": "GTQ",
                  "sample": "GTQ"
                },
                {
                  "value": "GYD",
                  "label": "GYD",
                  "sample": "GYD"
                },
                {
                  "value": "HKD",
                  "label": "HKD",
                  "sample": "HKD"
                },
                {
                  "value": "HNL",
                  "label": "HNL",
                  "sample": "HNL"
                },
                {
                  "value": "HRK",
                  "label": "HRK",
                  "sample": "HRK"
                },
                {
                  "value": "HTG",
                  "label": "HTG",
                  "sample": "HTG"
                },
                {
                  "value": "HUF",
                  "label": "HUF",
                  "sample": "HUF"
                },
                {
                  "value": "IDR",
                  "label": "IDR",
                  "sample": "IDR"
                },
                {
                  "value": "ILS",
                  "label": "ILS",
                  "sample": "ILS"
                },
                {
                  "value": "INR",
                  "label": "INR",
                  "sample": "INR"
                },
                {
                  "value": "IQD",
                  "label": "IQD",
                  "sample": "IQD"
                },
                {
                  "value": "IRR",
                  "label": "IRR",
                  "sample": "IRR"
                },
                {
                  "value": "ISK",
                  "label": "ISK",
                  "sample": "ISK"
                },
                {
                  "value": "JMD",
                  "label": "JMD",
                  "sample": "JMD"
                },
                {
                  "value": "JOD",
                  "label": "JOD",
                  "sample": "JOD"
                },
                {
                  "value": "JPY",
                  "label": "JPY",
                  "sample": "JPY"
                },
                {
                  "value": "KES",
                  "label": "KES",
                  "sample": "KES"
                },
                {
                  "value": "KGS",
                  "label": "KGS",
                  "sample": "KGS"
                },
                {
                  "value": "KHR",
                  "label": "KHR",
                  "sample": "KHR"
                },
                {
                  "value": "KMF",
                  "label": "KMF",
                  "sample": "KMF"
                },
                {
                  "value": "KPW",
                  "label": "KPW",
                  "sample": "KPW"
                },
                {
                  "value": "KRW",
                  "label": "KRW",
                  "sample": "KRW"
                },
                {
                  "value": "KWD",
                  "label": "KWD",
                  "sample": "KWD"
                },
                {
                  "value": "KYD",
                  "label": "KYD",
                  "sample": "KYD"
                },
                {
                  "value": "KZT",
                  "label": "KZT",
                  "sample": "KZT"
                },
                {
                  "value": "LAK",
                  "label": "LAK",
                  "sample": "LAK"
                },
                {
                  "value": "LBP",
                  "label": "LBP",
                  "sample": "LBP"
                },
                {
                  "value": "LKR",
                  "label": "LKR",
                  "sample": "LKR"
                },
                {
                  "value": "LRD",
                  "label": "LRD",
                  "sample": "LRD"
                },
                {
                  "value": "LSL",
                  "label": "LSL",
                  "sample": "LSL"
                },
                {
                  "value": "LTL",
                  "label": "LTL",
                  "sample": "LTL"
                },
                {
                  "value": "LVL",
                  "label": "LVL",
                  "sample": "LVL"
                },
                {
                  "value": "LYD",
                  "label": "LYD",
                  "sample": "LYD"
                },
                {
                  "value": "MAD",
                  "label": "MAD",
                  "sample": "MAD"
                },
                {
                  "value": "MDL",
                  "label": "MDL",
                  "sample": "MDL"
                },
                {
                  "value": "MGA",
                  "label": "MGA",
                  "sample": "MGA"
                },
                {
                  "value": "MKD",
                  "label": "MKD",
                  "sample": "MKD"
                },
                {
                  "value": "MMK",
                  "label": "MMK",
                  "sample": "MMK"
                },
                {
                  "value": "MNT",
                  "label": "MNT",
                  "sample": "MNT"
                },
                {
                  "value": "MOP",
                  "label": "MOP",
                  "sample": "MOP"
                },
                {
                  "value": "MRO",
                  "label": "MRO",
                  "sample": "MRO"
                },
                {
                  "value": "MRU",
                  "label": "MRU",
                  "sample": "MRU"
                },
                {
                  "value": "MUR",
                  "label": "MUR",
                  "sample": "MUR"
                },
                {
                  "value": "MVR",
                  "label": "MVR",
                  "sample": "MVR"
                },
                {
                  "value": "MWK",
                  "label": "MWK",
                  "sample": "MWK"
                },
                {
                  "value": "MXN",
                  "label": "MXN",
                  "sample": "MXN"
                },
                {
                  "value": "MXV",
                  "label": "MXV",
                  "sample": "MXV"
                },
                {
                  "value": "MYR",
                  "label": "MYR",
                  "sample": "MYR"
                },
                {
                  "value": "MZN",
                  "label": "MZN",
                  "sample": "MZN"
                },
                {
                  "value": "NAD",
                  "label": "NAD",
                  "sample": "NAD"
                },
                {
                  "value": "NGN",
                  "label": "NGN",
                  "sample": "NGN"
                },
                {
                  "value": "NIO",
                  "label": "NIO",
                  "sample": "NIO"
                },
                {
                  "value": "NOK",
                  "label": "NOK",
                  "sample": "NOK"
                },
                {
                  "value": "NPR",
                  "label": "NPR",
                  "sample": "NPR"
                },
                {
                  "value": "NZD",
                  "label": "NZD",
                  "sample": "NZD"
                },
                {
                  "value": "OMR",
                  "label": "OMR",
                  "sample": "OMR"
                },
                {
                  "value": "PAB",
                  "label": "PAB",
                  "sample": "PAB"
                },
                {
                  "value": "PEN",
                  "label": "PEN",
                  "sample": "PEN"
                },
                {
                  "value": "PGK",
                  "label": "PGK",
                  "sample": "PGK"
                },
                {
                  "value": "PHP",
                  "label": "PHP",
                  "sample": "PHP"
                },
                {
                  "value": "PKR",
                  "label": "PKR",
                  "sample": "PKR"
                },
                {
                  "value": "PLN",
                  "label": "PLN",
                  "sample": "PLN"
                },
                {
                  "value": "PYG",
                  "label": "PYG",
                  "sample": "PYG"
                },
                {
                  "value": "QAR",
                  "label": "QAR",
                  "sample": "QAR"
                },
                {
                  "value": "RON",
                  "label": "RON",
                  "sample": "RON"
                },
                {
                  "value": "RSD",
                  "label": "RSD",
                  "sample": "RSD"
                },
                {
                  "value": "RUB",
                  "label": "RUB",
                  "sample": "RUB"
                },
                {
                  "value": "RWF",
                  "label": "RWF",
                  "sample": "RWF"
                },
                {
                  "value": "SAR",
                  "label": "SAR",
                  "sample": "SAR"
                },
                {
                  "value": "SBD",
                  "label": "SBD",
                  "sample": "SBD"
                },
                {
                  "value": "SCR",
                  "label": "SCR",
                  "sample": "SCR"
                },
                {
                  "value": "SDG",
                  "label": "SDG",
                  "sample": "SDG"
                },
                {
                  "value": "SEK",
                  "label": "SEK",
                  "sample": "SEK"
                },
                {
                  "value": "SGD",
                  "label": "SGD",
                  "sample": "SGD"
                },
                {
                  "value": "SHP",
                  "label": "SHP",
                  "sample": "SHP"
                },
                {
                  "value": "SKK",
                  "label": "SKK",
                  "sample": "SKK"
                },
                {
                  "value": "SLE",
                  "label": "SLE",
                  "sample": "SLE"
                },
                {
                  "value": "SLL",
                  "label": "SLL",
                  "sample": "SLL"
                },
                {
                  "value": "SOS",
                  "label": "SOS",
                  "sample": "SOS"
                },
                {
                  "value": "SRD",
                  "label": "SRD",
                  "sample": "SRD"
                },
                {
                  "value": "STD",
                  "label": "STD",
                  "sample": "STD"
                },
                {
                  "value": "STN",
                  "label": "STN",
                  "sample": "STN"
                },
                {
                  "value": "SVC",
                  "label": "SVC",
                  "sample": "SVC"
                },
                {
                  "value": "SYP",
                  "label": "SYP",
                  "sample": "SYP"
                },
                {
                  "value": "SZL",
                  "label": "SZL",
                  "sample": "SZL"
                },
                {
                  "value": "THB",
                  "label": "THB",
                  "sample": "THB"
                },
                {
                  "value": "TJS",
                  "label": "TJS",
                  "sample": "TJS"
                },
                {
                  "value": "TMT",
                  "label": "TMT",
                  "sample": "TMT"
                },
                {
                  "value": "TND",
                  "label": "TND",
                  "sample": "TND"
                },
                {
                  "value": "TOP",
                  "label": "TOP",
                  "sample": "TOP"
                },
                {
                  "value": "TRY",
                  "label": "TRY",
                  "sample": "TRY"
                },
                {
                  "value": "TTD",
                  "label": "TTD",
                  "sample": "TTD"
                },
                {
                  "value": "TWD",
                  "label": "TWD",
                  "sample": "TWD"
                },
                {
                  "value": "TZS",
                  "label": "TZS",
                  "sample": "TZS"
                },
                {
                  "value": "UAH",
                  "label": "UAH",
                  "sample": "UAH"
                },
                {
                  "value": "UGX",
                  "label": "UGX",
                  "sample": "UGX"
                },
                {
                  "value": "USD",
                  "label": "USD",
                  "sample": "USD"
                },
                {
                  "value": "UYU",
                  "label": "UYU",
                  "sample": "UYU"
                },
                {
                  "value": "UZS",
                  "label": "UZS",
                  "sample": "UZS"
                },
                {
                  "value": "VEF",
                  "label": "VEF",
                  "sample": "VEF"
                },
                {
                  "value": "VES",
                  "label": "VES",
                  "sample": "VES"
                },
                {
                  "value": "VND",
                  "label": "VND",
                  "sample": "VND"
                },
                {
                  "value": "VUV",
                  "label": "VUV",
                  "sample": "VUV"
                },
                {
                  "value": "WST",
                  "label": "WST",
                  "sample": "WST"
                },
                {
                  "value": "XAF",
                  "label": "XAF",
                  "sample": "XAF"
                },
                {
                  "value": "XCD",
                  "label": "XCD",
                  "sample": "XCD"
                },
                {
                  "value": "XOF",
                  "label": "XOF",
                  "sample": "XOF"
                },
                {
                  "value": "XPF",
                  "label": "XPF",
                  "sample": "XPF"
                },
                {
                  "value": "YER",
                  "label": "YER",
                  "sample": "YER"
                },
                {
                  "value": "ZAR",
                  "label": "ZAR",
                  "sample": "ZAR"
                },
                {
                  "value": "ZMW",
                  "label": "ZMW",
                  "sample": "ZMW"
                },
                {
                  "value": "ZMK",
                  "label": "ZMK",
                  "sample": "ZMK"
                },
                {
                  "value": "ZWD",
                  "label": "ZWD",
                  "sample": "ZWD"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.Overpayment.OverpaymentID",
              "label": "Overpayment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Xero generated unique identifier"
            },
            {
              "key": "body.Overpayment.CurrencyRate",
              "label": "Currency Rate",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The currency rate for a multicurrency overpayment. If no rate is specified, the XE.com day rate is used"
            },
            {
              "key": "body.Overpayment.RemainingCredit",
              "label": "Remaining Credit",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The remaining credit balance on the overpayment"
            },
            {
              "key": "body.Overpayment.Allocations",
              "label": "Allocations",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "body.Overpayment.AppliedAmount",
              "label": "Applied Amount",
              "type": "number",
              "validation": {},
              "placeholder": "Example: 2",
              "required": false,
              "helpText": "The amount of applied to an invoice",
              "sample": 2
            },
            {
              "key": "body.Overpayment.Payments",
              "label": "Payments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Overpayment.HasAttachments",
              "label": "Has Attachments",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "boolean to indicate if a overpayment has an attachment",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.Overpayment.Attachments",
              "label": "Attachments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.InvoiceNumber",
              "label": "Invoice Number",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Number of invoice or credit note you are applying payment to e.g.INV-4003"
            },
            {
              "key": "body.CreditNoteNumber",
              "label": "Credit Note Number",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Number of invoice or credit note you are applying payment to e.g. INV-4003"
            },
            {
              "key": "body.BatchPayment.Account.Code",
              "label": "Code",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 4400",
              "required": false,
              "helpText": "Customer defined alpha numeric account code e.g 200 or SALES (max length = 10)",
              "sample": 4400
            },
            {
              "key": "body.BatchPayment.Account.Name",
              "label": "Name",
              "type": "string",
              "validation": {
                "max": 150
              },
              "placeholder": "Example: Food Sales",
              "required": false,
              "helpText": "Name of account (max length = 150)",
              "sample": "Food Sales"
            },
            {
              "key": "body.BatchPayment.Account.AccountID",
              "label": "Account ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "The Xero identifier for an account – specified as a string following  the endpoint name   e.g. /297c2dc5-cc47-4afd-8ec8-74990b8761e9",
              "sample": "00000000-0000-0000-0000-000000000000"
            },
            {
              "key": "body.BatchPayment.Account.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "BANK",
                  "CURRENT",
                  "CURRLIAB",
                  "DEPRECIATN",
                  "DIRECTCOSTS",
                  "EQUITY",
                  "EXPENSE",
                  "FIXED",
                  "INVENTORY",
                  "LIABILITY",
                  "NONCURRENT",
                  "OTHERINCOME",
                  "OVERHEADS",
                  "PREPAYMENT",
                  "REVENUE",
                  "SALES",
                  "TERMLIAB",
                  "PAYGLIABILITY",
                  "PAYG",
                  "SUPERANNUATIONEXPENSE",
                  "SUPERANNUATIONLIABILITY",
                  "WAGESEXPENSE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Account Types",
              "choices": [
                {
                  "value": "BANK",
                  "label": "BANK",
                  "sample": "BANK"
                },
                {
                  "value": "CURRENT",
                  "label": "CURRENT",
                  "sample": "CURRENT"
                },
                {
                  "value": "CURRLIAB",
                  "label": "CURRLIAB",
                  "sample": "CURRLIAB"
                },
                {
                  "value": "DEPRECIATN",
                  "label": "DEPRECIATN",
                  "sample": "DEPRECIATN"
                },
                {
                  "value": "DIRECTCOSTS",
                  "label": "DIRECTCOSTS",
                  "sample": "DIRECTCOSTS"
                },
                {
                  "value": "EQUITY",
                  "label": "EQUITY",
                  "sample": "EQUITY"
                },
                {
                  "value": "EXPENSE",
                  "label": "EXPENSE",
                  "sample": "EXPENSE"
                },
                {
                  "value": "FIXED",
                  "label": "FIXED",
                  "sample": "FIXED"
                },
                {
                  "value": "INVENTORY",
                  "label": "INVENTORY",
                  "sample": "INVENTORY"
                },
                {
                  "value": "LIABILITY",
                  "label": "LIABILITY",
                  "sample": "LIABILITY"
                },
                {
                  "value": "NONCURRENT",
                  "label": "NONCURRENT",
                  "sample": "NONCURRENT"
                },
                {
                  "value": "OTHERINCOME",
                  "label": "OTHERINCOME",
                  "sample": "OTHERINCOME"
                },
                {
                  "value": "OVERHEADS",
                  "label": "OVERHEADS",
                  "sample": "OVERHEADS"
                },
                {
                  "value": "PREPAYMENT",
                  "label": "PREPAYMENT",
                  "sample": "PREPAYMENT"
                },
                {
                  "value": "REVENUE",
                  "label": "REVENUE",
                  "sample": "REVENUE"
                },
                {
                  "value": "SALES",
                  "label": "SALES",
                  "sample": "SALES"
                },
                {
                  "value": "TERMLIAB",
                  "label": "TERMLIAB",
                  "sample": "TERMLIAB"
                },
                {
                  "value": "PAYGLIABILITY",
                  "label": "PAYGLIABILITY",
                  "sample": "PAYGLIABILITY"
                },
                {
                  "value": "PAYG",
                  "label": "PAYG",
                  "sample": "PAYG"
                },
                {
                  "value": "SUPERANNUATIONEXPENSE",
                  "label": "SUPERANNUATIONEXPENSE",
                  "sample": "SUPERANNUATIONEXPENSE"
                },
                {
                  "value": "SUPERANNUATIONLIABILITY",
                  "label": "SUPERANNUATIONLIABILITY",
                  "sample": "SUPERANNUATIONLIABILITY"
                },
                {
                  "value": "WAGESEXPENSE",
                  "label": "WAGESEXPENSE",
                  "sample": "WAGESEXPENSE"
                }
              ]
            },
            {
              "key": "body.BatchPayment.Account.BankAccountNumber",
              "label": "Bank Account Number",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "For bank accounts only (Account Type BANK)"
            },
            {
              "key": "body.BatchPayment.Account.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "ACTIVE",
                  "ARCHIVED",
                  "DELETED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Accounts with a status of ACTIVE can be updated to ARCHIVED. See Account Status Codes",
              "choices": [
                {
                  "value": "ACTIVE",
                  "label": "ACTIVE",
                  "sample": "ACTIVE"
                },
                {
                  "value": "ARCHIVED",
                  "label": "ARCHIVED",
                  "sample": "ARCHIVED"
                },
                {
                  "value": "DELETED",
                  "label": "DELETED",
                  "sample": "DELETED"
                }
              ]
            },
            {
              "key": "body.BatchPayment.Account.Description",
              "label": "Description",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Description of the Account. Valid for all types of accounts except bank accounts (max length = 4000)"
            },
            {
              "key": "body.BatchPayment.Account.BankAccountType",
              "label": "Bank Account Type",
              "type": "string",
              "validation": {
                "values": [
                  "BANK",
                  "CREDITCARD",
                  "PAYPAL",
                  "NONE",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "For bank accounts only. See Bank Account types",
              "choices": [
                {
                  "value": "BANK",
                  "label": "BANK",
                  "sample": "BANK"
                },
                {
                  "value": "CREDITCARD",
                  "label": "CREDITCARD",
                  "sample": "CREDITCARD"
                },
                {
                  "value": "PAYPAL",
                  "label": "PAYPAL",
                  "sample": "PAYPAL"
                },
                {
                  "value": "NONE",
                  "label": "NONE",
                  "sample": "NONE"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.BatchPayment.Account.CurrencyCode",
              "label": "Currency Code",
              "type": "string",
              "validation": {
                "values": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BYR",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EEK",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LTL",
                  "LVL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SKK",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "STD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "3 letter alpha code for the currency – see list of currency codes",
              "choices": [
                {
                  "value": "AED",
                  "label": "AED",
                  "sample": "AED"
                },
                {
                  "value": "AFN",
                  "label": "AFN",
                  "sample": "AFN"
                },
                {
                  "value": "ALL",
                  "label": "ALL",
                  "sample": "ALL"
                },
                {
                  "value": "AMD",
                  "label": "AMD",
                  "sample": "AMD"
                },
                {
                  "value": "ANG",
                  "label": "ANG",
                  "sample": "ANG"
                },
                {
                  "value": "AOA",
                  "label": "AOA",
                  "sample": "AOA"
                },
                {
                  "value": "ARS",
                  "label": "ARS",
                  "sample": "ARS"
                },
                {
                  "value": "AUD",
                  "label": "AUD",
                  "sample": "AUD"
                },
                {
                  "value": "AWG",
                  "label": "AWG",
                  "sample": "AWG"
                },
                {
                  "value": "AZN",
                  "label": "AZN",
                  "sample": "AZN"
                },
                {
                  "value": "BAM",
                  "label": "BAM",
                  "sample": "BAM"
                },
                {
                  "value": "BBD",
                  "label": "BBD",
                  "sample": "BBD"
                },
                {
                  "value": "BDT",
                  "label": "BDT",
                  "sample": "BDT"
                },
                {
                  "value": "BGN",
                  "label": "BGN",
                  "sample": "BGN"
                },
                {
                  "value": "BHD",
                  "label": "BHD",
                  "sample": "BHD"
                },
                {
                  "value": "BIF",
                  "label": "BIF",
                  "sample": "BIF"
                },
                {
                  "value": "BMD",
                  "label": "BMD",
                  "sample": "BMD"
                },
                {
                  "value": "BND",
                  "label": "BND",
                  "sample": "BND"
                },
                {
                  "value": "BOB",
                  "label": "BOB",
                  "sample": "BOB"
                },
                {
                  "value": "BRL",
                  "label": "BRL",
                  "sample": "BRL"
                },
                {
                  "value": "BSD",
                  "label": "BSD",
                  "sample": "BSD"
                },
                {
                  "value": "BTN",
                  "label": "BTN",
                  "sample": "BTN"
                },
                {
                  "value": "BWP",
                  "label": "BWP",
                  "sample": "BWP"
                },
                {
                  "value": "BYN",
                  "label": "BYN",
                  "sample": "BYN"
                },
                {
                  "value": "BYR",
                  "label": "BYR",
                  "sample": "BYR"
                },
                {
                  "value": "BZD",
                  "label": "BZD",
                  "sample": "BZD"
                },
                {
                  "value": "CAD",
                  "label": "CAD",
                  "sample": "CAD"
                },
                {
                  "value": "CDF",
                  "label": "CDF",
                  "sample": "CDF"
                },
                {
                  "value": "CHF",
                  "label": "CHF",
                  "sample": "CHF"
                },
                {
                  "value": "CLF",
                  "label": "CLF",
                  "sample": "CLF"
                },
                {
                  "value": "CLP",
                  "label": "CLP",
                  "sample": "CLP"
                },
                {
                  "value": "CNY",
                  "label": "CNY",
                  "sample": "CNY"
                },
                {
                  "value": "COP",
                  "label": "COP",
                  "sample": "COP"
                },
                {
                  "value": "CRC",
                  "label": "CRC",
                  "sample": "CRC"
                },
                {
                  "value": "CUC",
                  "label": "CUC",
                  "sample": "CUC"
                },
                {
                  "value": "CUP",
                  "label": "CUP",
                  "sample": "CUP"
                },
                {
                  "value": "CVE",
                  "label": "CVE",
                  "sample": "CVE"
                },
                {
                  "value": "CZK",
                  "label": "CZK",
                  "sample": "CZK"
                },
                {
                  "value": "DJF",
                  "label": "DJF",
                  "sample": "DJF"
                },
                {
                  "value": "DKK",
                  "label": "DKK",
                  "sample": "DKK"
                },
                {
                  "value": "DOP",
                  "label": "DOP",
                  "sample": "DOP"
                },
                {
                  "value": "DZD",
                  "label": "DZD",
                  "sample": "DZD"
                },
                {
                  "value": "EEK",
                  "label": "EEK",
                  "sample": "EEK"
                },
                {
                  "value": "EGP",
                  "label": "EGP",
                  "sample": "EGP"
                },
                {
                  "value": "ERN",
                  "label": "ERN",
                  "sample": "ERN"
                },
                {
                  "value": "ETB",
                  "label": "ETB",
                  "sample": "ETB"
                },
                {
                  "value": "EUR",
                  "label": "EUR",
                  "sample": "EUR"
                },
                {
                  "value": "FJD",
                  "label": "FJD",
                  "sample": "FJD"
                },
                {
                  "value": "FKP",
                  "label": "FKP",
                  "sample": "FKP"
                },
                {
                  "value": "GBP",
                  "label": "GBP",
                  "sample": "GBP"
                },
                {
                  "value": "GEL",
                  "label": "GEL",
                  "sample": "GEL"
                },
                {
                  "value": "GHS",
                  "label": "GHS",
                  "sample": "GHS"
                },
                {
                  "value": "GIP",
                  "label": "GIP",
                  "sample": "GIP"
                },
                {
                  "value": "GMD",
                  "label": "GMD",
                  "sample": "GMD"
                },
                {
                  "value": "GNF",
                  "label": "GNF",
                  "sample": "GNF"
                },
                {
                  "value": "GTQ",
                  "label": "GTQ",
                  "sample": "GTQ"
                },
                {
                  "value": "GYD",
                  "label": "GYD",
                  "sample": "GYD"
                },
                {
                  "value": "HKD",
                  "label": "HKD",
                  "sample": "HKD"
                },
                {
                  "value": "HNL",
                  "label": "HNL",
                  "sample": "HNL"
                },
                {
                  "value": "HRK",
                  "label": "HRK",
                  "sample": "HRK"
                },
                {
                  "value": "HTG",
                  "label": "HTG",
                  "sample": "HTG"
                },
                {
                  "value": "HUF",
                  "label": "HUF",
                  "sample": "HUF"
                },
                {
                  "value": "IDR",
                  "label": "IDR",
                  "sample": "IDR"
                },
                {
                  "value": "ILS",
                  "label": "ILS",
                  "sample": "ILS"
                },
                {
                  "value": "INR",
                  "label": "INR",
                  "sample": "INR"
                },
                {
                  "value": "IQD",
                  "label": "IQD",
                  "sample": "IQD"
                },
                {
                  "value": "IRR",
                  "label": "IRR",
                  "sample": "IRR"
                },
                {
                  "value": "ISK",
                  "label": "ISK",
                  "sample": "ISK"
                },
                {
                  "value": "JMD",
                  "label": "JMD",
                  "sample": "JMD"
                },
                {
                  "value": "JOD",
                  "label": "JOD",
                  "sample": "JOD"
                },
                {
                  "value": "JPY",
                  "label": "JPY",
                  "sample": "JPY"
                },
                {
                  "value": "KES",
                  "label": "KES",
                  "sample": "KES"
                },
                {
                  "value": "KGS",
                  "label": "KGS",
                  "sample": "KGS"
                },
                {
                  "value": "KHR",
                  "label": "KHR",
                  "sample": "KHR"
                },
                {
                  "value": "KMF",
                  "label": "KMF",
                  "sample": "KMF"
                },
                {
                  "value": "KPW",
                  "label": "KPW",
                  "sample": "KPW"
                },
                {
                  "value": "KRW",
                  "label": "KRW",
                  "sample": "KRW"
                },
                {
                  "value": "KWD",
                  "label": "KWD",
                  "sample": "KWD"
                },
                {
                  "value": "KYD",
                  "label": "KYD",
                  "sample": "KYD"
                },
                {
                  "value": "KZT",
                  "label": "KZT",
                  "sample": "KZT"
                },
                {
                  "value": "LAK",
                  "label": "LAK",
                  "sample": "LAK"
                },
                {
                  "value": "LBP",
                  "label": "LBP",
                  "sample": "LBP"
                },
                {
                  "value": "LKR",
                  "label": "LKR",
                  "sample": "LKR"
                },
                {
                  "value": "LRD",
                  "label": "LRD",
                  "sample": "LRD"
                },
                {
                  "value": "LSL",
                  "label": "LSL",
                  "sample": "LSL"
                },
                {
                  "value": "LTL",
                  "label": "LTL",
                  "sample": "LTL"
                },
                {
                  "value": "LVL",
                  "label": "LVL",
                  "sample": "LVL"
                },
                {
                  "value": "LYD",
                  "label": "LYD",
                  "sample": "LYD"
                },
                {
                  "value": "MAD",
                  "label": "MAD",
                  "sample": "MAD"
                },
                {
                  "value": "MDL",
                  "label": "MDL",
                  "sample": "MDL"
                },
                {
                  "value": "MGA",
                  "label": "MGA",
                  "sample": "MGA"
                },
                {
                  "value": "MKD",
                  "label": "MKD",
                  "sample": "MKD"
                },
                {
                  "value": "MMK",
                  "label": "MMK",
                  "sample": "MMK"
                },
                {
                  "value": "MNT",
                  "label": "MNT",
                  "sample": "MNT"
                },
                {
                  "value": "MOP",
                  "label": "MOP",
                  "sample": "MOP"
                },
                {
                  "value": "MRO",
                  "label": "MRO",
                  "sample": "MRO"
                },
                {
                  "value": "MRU",
                  "label": "MRU",
                  "sample": "MRU"
                },
                {
                  "value": "MUR",
                  "label": "MUR",
                  "sample": "MUR"
                },
                {
                  "value": "MVR",
                  "label": "MVR",
                  "sample": "MVR"
                },
                {
                  "value": "MWK",
                  "label": "MWK",
                  "sample": "MWK"
                },
                {
                  "value": "MXN",
                  "label": "MXN",
                  "sample": "MXN"
                },
                {
                  "value": "MXV",
                  "label": "MXV",
                  "sample": "MXV"
                },
                {
                  "value": "MYR",
                  "label": "MYR",
                  "sample": "MYR"
                },
                {
                  "value": "MZN",
                  "label": "MZN",
                  "sample": "MZN"
                },
                {
                  "value": "NAD",
                  "label": "NAD",
                  "sample": "NAD"
                },
                {
                  "value": "NGN",
                  "label": "NGN",
                  "sample": "NGN"
                },
                {
                  "value": "NIO",
                  "label": "NIO",
                  "sample": "NIO"
                },
                {
                  "value": "NOK",
                  "label": "NOK",
                  "sample": "NOK"
                },
                {
                  "value": "NPR",
                  "label": "NPR",
                  "sample": "NPR"
                },
                {
                  "value": "NZD",
                  "label": "NZD",
                  "sample": "NZD"
                },
                {
                  "value": "OMR",
                  "label": "OMR",
                  "sample": "OMR"
                },
                {
                  "value": "PAB",
                  "label": "PAB",
                  "sample": "PAB"
                },
                {
                  "value": "PEN",
                  "label": "PEN",
                  "sample": "PEN"
                },
                {
                  "value": "PGK",
                  "label": "PGK",
                  "sample": "PGK"
                },
                {
                  "value": "PHP",
                  "label": "PHP",
                  "sample": "PHP"
                },
                {
                  "value": "PKR",
                  "label": "PKR",
                  "sample": "PKR"
                },
                {
                  "value": "PLN",
                  "label": "PLN",
                  "sample": "PLN"
                },
                {
                  "value": "PYG",
                  "label": "PYG",
                  "sample": "PYG"
                },
                {
                  "value": "QAR",
                  "label": "QAR",
                  "sample": "QAR"
                },
                {
                  "value": "RON",
                  "label": "RON",
                  "sample": "RON"
                },
                {
                  "value": "RSD",
                  "label": "RSD",
                  "sample": "RSD"
                },
                {
                  "value": "RUB",
                  "label": "RUB",
                  "sample": "RUB"
                },
                {
                  "value": "RWF",
                  "label": "RWF",
                  "sample": "RWF"
                },
                {
                  "value": "SAR",
                  "label": "SAR",
                  "sample": "SAR"
                },
                {
                  "value": "SBD",
                  "label": "SBD",
                  "sample": "SBD"
                },
                {
                  "value": "SCR",
                  "label": "SCR",
                  "sample": "SCR"
                },
                {
                  "value": "SDG",
                  "label": "SDG",
                  "sample": "SDG"
                },
                {
                  "value": "SEK",
                  "label": "SEK",
                  "sample": "SEK"
                },
                {
                  "value": "SGD",
                  "label": "SGD",
                  "sample": "SGD"
                },
                {
                  "value": "SHP",
                  "label": "SHP",
                  "sample": "SHP"
                },
                {
                  "value": "SKK",
                  "label": "SKK",
                  "sample": "SKK"
                },
                {
                  "value": "SLE",
                  "label": "SLE",
                  "sample": "SLE"
                },
                {
                  "value": "SLL",
                  "label": "SLL",
                  "sample": "SLL"
                },
                {
                  "value": "SOS",
                  "label": "SOS",
                  "sample": "SOS"
                },
                {
                  "value": "SRD",
                  "label": "SRD",
                  "sample": "SRD"
                },
                {
                  "value": "STD",
                  "label": "STD",
                  "sample": "STD"
                },
                {
                  "value": "STN",
                  "label": "STN",
                  "sample": "STN"
                },
                {
                  "value": "SVC",
                  "label": "SVC",
                  "sample": "SVC"
                },
                {
                  "value": "SYP",
                  "label": "SYP",
                  "sample": "SYP"
                },
                {
                  "value": "SZL",
                  "label": "SZL",
                  "sample": "SZL"
                },
                {
                  "value": "THB",
                  "label": "THB",
                  "sample": "THB"
                },
                {
                  "value": "TJS",
                  "label": "TJS",
                  "sample": "TJS"
                },
                {
                  "value": "TMT",
                  "label": "TMT",
                  "sample": "TMT"
                },
                {
                  "value": "TND",
                  "label": "TND",
                  "sample": "TND"
                },
                {
                  "value": "TOP",
                  "label": "TOP",
                  "sample": "TOP"
                },
                {
                  "value": "TRY",
                  "label": "TRY",
                  "sample": "TRY"
                },
                {
                  "value": "TTD",
                  "label": "TTD",
                  "sample": "TTD"
                },
                {
                  "value": "TWD",
                  "label": "TWD",
                  "sample": "TWD"
                },
                {
                  "value": "TZS",
                  "label": "TZS",
                  "sample": "TZS"
                },
                {
                  "value": "UAH",
                  "label": "UAH",
                  "sample": "UAH"
                },
                {
                  "value": "UGX",
                  "label": "UGX",
                  "sample": "UGX"
                },
                {
                  "value": "USD",
                  "label": "USD",
                  "sample": "USD"
                },
                {
                  "value": "UYU",
                  "label": "UYU",
                  "sample": "UYU"
                },
                {
                  "value": "UZS",
                  "label": "UZS",
                  "sample": "UZS"
                },
                {
                  "value": "VEF",
                  "label": "VEF",
                  "sample": "VEF"
                },
                {
                  "value": "VES",
                  "label": "VES",
                  "sample": "VES"
                },
                {
                  "value": "VND",
                  "label": "VND",
                  "sample": "VND"
                },
                {
                  "value": "VUV",
                  "label": "VUV",
                  "sample": "VUV"
                },
                {
                  "value": "WST",
                  "label": "WST",
                  "sample": "WST"
                },
                {
                  "value": "XAF",
                  "label": "XAF",
                  "sample": "XAF"
                },
                {
                  "value": "XCD",
                  "label": "XCD",
                  "sample": "XCD"
                },
                {
                  "value": "XOF",
                  "label": "XOF",
                  "sample": "XOF"
                },
                {
                  "value": "XPF",
                  "label": "XPF",
                  "sample": "XPF"
                },
                {
                  "value": "YER",
                  "label": "YER",
                  "sample": "YER"
                },
                {
                  "value": "ZAR",
                  "label": "ZAR",
                  "sample": "ZAR"
                },
                {
                  "value": "ZMW",
                  "label": "ZMW",
                  "sample": "ZMW"
                },
                {
                  "value": "ZMK",
                  "label": "ZMK",
                  "sample": "ZMK"
                },
                {
                  "value": "ZWD",
                  "label": "ZWD",
                  "sample": "ZWD"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.BatchPayment.Account.TaxType",
              "label": "Tax Type",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The tax type from taxRates"
            },
            {
              "key": "body.BatchPayment.Account.EnablePaymentsToAccount",
              "label": "Enable Payments To Account",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Boolean – describes whether account can have payments applied to it"
            },
            {
              "key": "body.BatchPayment.Account.ShowInExpenseClaims",
              "label": "Show In Expense Claims",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Boolean – describes whether account code is available for use with expense claims"
            },
            {
              "key": "body.BatchPayment.Account.Class",
              "label": "Class",
              "type": "string",
              "validation": {
                "values": [
                  "ASSET",
                  "EQUITY",
                  "EXPENSE",
                  "LIABILITY",
                  "REVENUE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Account Class Types",
              "choices": [
                {
                  "value": "ASSET",
                  "label": "ASSET",
                  "sample": "ASSET"
                },
                {
                  "value": "EQUITY",
                  "label": "EQUITY",
                  "sample": "EQUITY"
                },
                {
                  "value": "EXPENSE",
                  "label": "EXPENSE",
                  "sample": "EXPENSE"
                },
                {
                  "value": "LIABILITY",
                  "label": "LIABILITY",
                  "sample": "LIABILITY"
                },
                {
                  "value": "REVENUE",
                  "label": "REVENUE",
                  "sample": "REVENUE"
                }
              ]
            },
            {
              "key": "body.BatchPayment.Account.SystemAccount",
              "label": "System Account",
              "type": "string",
              "validation": {
                "values": [
                  "DEBTORS",
                  "CREDITORS",
                  "BANKCURRENCYGAIN",
                  "GST",
                  "GSTONIMPORTS",
                  "HISTORICAL",
                  "REALISEDCURRENCYGAIN",
                  "RETAINEDEARNINGS",
                  "ROUNDING",
                  "TRACKINGTRANSFERS",
                  "UNPAIDEXPCLM",
                  "UNREALISEDCURRENCYGAIN",
                  "WAGEPAYABLES",
                  "CISASSETS",
                  "CISASSET",
                  "CISLABOUR",
                  "CISLABOUREXPENSE",
                  "CISLABOURINCOME",
                  "CISLIABILITY",
                  "CISMATERIALS",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "If this is a system account then this element is returned. See System Account types. Note that non-system accounts may have this element set as either “” or null.",
              "choices": [
                {
                  "value": "DEBTORS",
                  "label": "DEBTORS",
                  "sample": "DEBTORS"
                },
                {
                  "value": "CREDITORS",
                  "label": "CREDITORS",
                  "sample": "CREDITORS"
                },
                {
                  "value": "BANKCURRENCYGAIN",
                  "label": "BANKCURRENCYGAIN",
                  "sample": "BANKCURRENCYGAIN"
                },
                {
                  "value": "GST",
                  "label": "GST",
                  "sample": "GST"
                },
                {
                  "value": "GSTONIMPORTS",
                  "label": "GSTONIMPORTS",
                  "sample": "GSTONIMPORTS"
                },
                {
                  "value": "HISTORICAL",
                  "label": "HISTORICAL",
                  "sample": "HISTORICAL"
                },
                {
                  "value": "REALISEDCURRENCYGAIN",
                  "label": "REALISEDCURRENCYGAIN",
                  "sample": "REALISEDCURRENCYGAIN"
                },
                {
                  "value": "RETAINEDEARNINGS",
                  "label": "RETAINEDEARNINGS",
                  "sample": "RETAINEDEARNINGS"
                },
                {
                  "value": "ROUNDING",
                  "label": "ROUNDING",
                  "sample": "ROUNDING"
                },
                {
                  "value": "TRACKINGTRANSFERS",
                  "label": "TRACKINGTRANSFERS",
                  "sample": "TRACKINGTRANSFERS"
                },
                {
                  "value": "UNPAIDEXPCLM",
                  "label": "UNPAIDEXPCLM",
                  "sample": "UNPAIDEXPCLM"
                },
                {
                  "value": "UNREALISEDCURRENCYGAIN",
                  "label": "UNREALISEDCURRENCYGAIN",
                  "sample": "UNREALISEDCURRENCYGAIN"
                },
                {
                  "value": "WAGEPAYABLES",
                  "label": "WAGEPAYABLES",
                  "sample": "WAGEPAYABLES"
                },
                {
                  "value": "CISASSETS",
                  "label": "CISASSETS",
                  "sample": "CISASSETS"
                },
                {
                  "value": "CISASSET",
                  "label": "CISASSET",
                  "sample": "CISASSET"
                },
                {
                  "value": "CISLABOUR",
                  "label": "CISLABOUR",
                  "sample": "CISLABOUR"
                },
                {
                  "value": "CISLABOUREXPENSE",
                  "label": "CISLABOUREXPENSE",
                  "sample": "CISLABOUREXPENSE"
                },
                {
                  "value": "CISLABOURINCOME",
                  "label": "CISLABOURINCOME",
                  "sample": "CISLABOURINCOME"
                },
                {
                  "value": "CISLIABILITY",
                  "label": "CISLIABILITY",
                  "sample": "CISLIABILITY"
                },
                {
                  "value": "CISMATERIALS",
                  "label": "CISMATERIALS",
                  "sample": "CISMATERIALS"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.BatchPayment.Account.ReportingCode",
              "label": "Reporting Code",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Shown if set"
            },
            {
              "key": "body.BatchPayment.Account.ReportingCodeName",
              "label": "Reporting Code Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Shown if set"
            },
            {
              "key": "body.BatchPayment.Account.HasAttachments",
              "label": "Has Attachments",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "boolean to indicate if an account has an attachment (read only)",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.BatchPayment.Account.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "Last modified date UTC format",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.BatchPayment.Account.AddToWatchlist",
              "label": "Add To Watchlist",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Boolean – describes whether the account is shown in the watchlist widget on the dashboard"
            },
            {
              "key": "body.BatchPayment.Account.ValidationErrors",
              "label": "Validation Errors",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.BatchPayment.Reference",
              "label": "Reference",
              "type": "string",
              "validation": {
                "max": 255
              },
              "placeholder": "",
              "required": false,
              "helpText": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero."
            },
            {
              "key": "body.BatchPayment.Particulars",
              "label": "Particulars",
              "type": "string",
              "validation": {
                "max": 12
              },
              "placeholder": "",
              "required": false,
              "helpText": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero."
            },
            {
              "key": "body.BatchPayment.Code",
              "label": "Code",
              "type": "string",
              "validation": {
                "max": 12
              },
              "placeholder": "",
              "required": false,
              "helpText": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero."
            },
            {
              "key": "body.BatchPayment.Details",
              "label": "Details",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "(Non-NZ Only) These details are sent to the org’s bank as a reference for the batch payment transaction. They will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement imported into Xero. Maximum field length = 18"
            },
            {
              "key": "body.BatchPayment.Narrative",
              "label": "Narrative",
              "type": "string",
              "validation": {
                "max": 18
              },
              "placeholder": "",
              "required": false,
              "helpText": "(UK Only) Only shows on the statement line in Xero. Max length =18"
            },
            {
              "key": "body.BatchPayment.BatchPaymentID",
              "label": "Batch Payment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The Xero generated unique identifier for the bank transaction (read-only)"
            },
            {
              "key": "body.BatchPayment.DateString",
              "label": "Date String",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06"
            },
            {
              "key": "body.BatchPayment.Date",
              "label": "Date",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06"
            },
            {
              "key": "body.BatchPayment.Amount",
              "label": "Amount",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The amount of the payment. Must be less than or equal to the outstanding amount owing on the invoice e.g. 200.00"
            },
            {
              "key": "body.BatchPayment.Payments",
              "label": "Payments",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.BatchPayment.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "PAYBATCH",
                  "RECBATCH"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "PAYBATCH for bill payments or RECBATCH for sales invoice payments (read-only)",
              "choices": [
                {
                  "value": "PAYBATCH",
                  "label": "PAYBATCH",
                  "sample": "PAYBATCH"
                },
                {
                  "value": "RECBATCH",
                  "label": "RECBATCH",
                  "sample": "RECBATCH"
                }
              ]
            },
            {
              "key": "body.BatchPayment.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "AUTHORISED",
                  "DELETED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "AUTHORISED or DELETED (read-only). New batch payments will have a status of AUTHORISED. It is not possible to delete batch payments via the API.",
              "choices": [
                {
                  "value": "AUTHORISED",
                  "label": "AUTHORISED",
                  "sample": "AUTHORISED"
                },
                {
                  "value": "DELETED",
                  "label": "DELETED",
                  "sample": "DELETED"
                }
              ]
            },
            {
              "key": "body.BatchPayment.TotalAmount",
              "label": "Total Amount",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The total of the payments that make up the batch (read-only)"
            },
            {
              "key": "body.BatchPayment.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of last update to the payment",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.BatchPayment.IsReconciled",
              "label": "Is Reconciled",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Booelan that tells you if the batch payment has been reconciled (read-only)"
            },
            {
              "key": "body.BatchPayment.ValidationErrors",
              "label": "Validation Errors",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Account.Code",
              "label": "Code",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 4400",
              "required": false,
              "helpText": "Customer defined alpha numeric account code e.g 200 or SALES (max length = 10)",
              "sample": 4400
            },
            {
              "key": "body.Account.Name",
              "label": "Name",
              "type": "string",
              "validation": {
                "max": 150
              },
              "placeholder": "Example: Food Sales",
              "required": false,
              "helpText": "Name of account (max length = 150)",
              "sample": "Food Sales"
            },
            {
              "key": "body.Account.AccountID",
              "label": "Account ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "The Xero identifier for an account – specified as a string following  the endpoint name   e.g. /297c2dc5-cc47-4afd-8ec8-74990b8761e9",
              "sample": "00000000-0000-0000-0000-000000000000"
            },
            {
              "key": "body.Account.Type",
              "label": "Type",
              "type": "string",
              "validation": {
                "values": [
                  "BANK",
                  "CURRENT",
                  "CURRLIAB",
                  "DEPRECIATN",
                  "DIRECTCOSTS",
                  "EQUITY",
                  "EXPENSE",
                  "FIXED",
                  "INVENTORY",
                  "LIABILITY",
                  "NONCURRENT",
                  "OTHERINCOME",
                  "OVERHEADS",
                  "PREPAYMENT",
                  "REVENUE",
                  "SALES",
                  "TERMLIAB",
                  "PAYGLIABILITY",
                  "PAYG",
                  "SUPERANNUATIONEXPENSE",
                  "SUPERANNUATIONLIABILITY",
                  "WAGESEXPENSE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Account Types",
              "choices": [
                {
                  "value": "BANK",
                  "label": "BANK",
                  "sample": "BANK"
                },
                {
                  "value": "CURRENT",
                  "label": "CURRENT",
                  "sample": "CURRENT"
                },
                {
                  "value": "CURRLIAB",
                  "label": "CURRLIAB",
                  "sample": "CURRLIAB"
                },
                {
                  "value": "DEPRECIATN",
                  "label": "DEPRECIATN",
                  "sample": "DEPRECIATN"
                },
                {
                  "value": "DIRECTCOSTS",
                  "label": "DIRECTCOSTS",
                  "sample": "DIRECTCOSTS"
                },
                {
                  "value": "EQUITY",
                  "label": "EQUITY",
                  "sample": "EQUITY"
                },
                {
                  "value": "EXPENSE",
                  "label": "EXPENSE",
                  "sample": "EXPENSE"
                },
                {
                  "value": "FIXED",
                  "label": "FIXED",
                  "sample": "FIXED"
                },
                {
                  "value": "INVENTORY",
                  "label": "INVENTORY",
                  "sample": "INVENTORY"
                },
                {
                  "value": "LIABILITY",
                  "label": "LIABILITY",
                  "sample": "LIABILITY"
                },
                {
                  "value": "NONCURRENT",
                  "label": "NONCURRENT",
                  "sample": "NONCURRENT"
                },
                {
                  "value": "OTHERINCOME",
                  "label": "OTHERINCOME",
                  "sample": "OTHERINCOME"
                },
                {
                  "value": "OVERHEADS",
                  "label": "OVERHEADS",
                  "sample": "OVERHEADS"
                },
                {
                  "value": "PREPAYMENT",
                  "label": "PREPAYMENT",
                  "sample": "PREPAYMENT"
                },
                {
                  "value": "REVENUE",
                  "label": "REVENUE",
                  "sample": "REVENUE"
                },
                {
                  "value": "SALES",
                  "label": "SALES",
                  "sample": "SALES"
                },
                {
                  "value": "TERMLIAB",
                  "label": "TERMLIAB",
                  "sample": "TERMLIAB"
                },
                {
                  "value": "PAYGLIABILITY",
                  "label": "PAYGLIABILITY",
                  "sample": "PAYGLIABILITY"
                },
                {
                  "value": "PAYG",
                  "label": "PAYG",
                  "sample": "PAYG"
                },
                {
                  "value": "SUPERANNUATIONEXPENSE",
                  "label": "SUPERANNUATIONEXPENSE",
                  "sample": "SUPERANNUATIONEXPENSE"
                },
                {
                  "value": "SUPERANNUATIONLIABILITY",
                  "label": "SUPERANNUATIONLIABILITY",
                  "sample": "SUPERANNUATIONLIABILITY"
                },
                {
                  "value": "WAGESEXPENSE",
                  "label": "WAGESEXPENSE",
                  "sample": "WAGESEXPENSE"
                }
              ]
            },
            {
              "key": "body.Account.BankAccountNumber",
              "label": "Bank Account Number",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "For bank accounts only (Account Type BANK)"
            },
            {
              "key": "body.Account.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "ACTIVE",
                  "ARCHIVED",
                  "DELETED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "Accounts with a status of ACTIVE can be updated to ARCHIVED. See Account Status Codes",
              "choices": [
                {
                  "value": "ACTIVE",
                  "label": "ACTIVE",
                  "sample": "ACTIVE"
                },
                {
                  "value": "ARCHIVED",
                  "label": "ARCHIVED",
                  "sample": "ARCHIVED"
                },
                {
                  "value": "DELETED",
                  "label": "DELETED",
                  "sample": "DELETED"
                }
              ]
            },
            {
              "key": "body.Account.Description",
              "label": "Description",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Description of the Account. Valid for all types of accounts except bank accounts (max length = 4000)"
            },
            {
              "key": "body.Account.BankAccountType",
              "label": "Bank Account Type",
              "type": "string",
              "validation": {
                "values": [
                  "BANK",
                  "CREDITCARD",
                  "PAYPAL",
                  "NONE",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "For bank accounts only. See Bank Account types",
              "choices": [
                {
                  "value": "BANK",
                  "label": "BANK",
                  "sample": "BANK"
                },
                {
                  "value": "CREDITCARD",
                  "label": "CREDITCARD",
                  "sample": "CREDITCARD"
                },
                {
                  "value": "PAYPAL",
                  "label": "PAYPAL",
                  "sample": "PAYPAL"
                },
                {
                  "value": "NONE",
                  "label": "NONE",
                  "sample": "NONE"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.Account.CurrencyCode",
              "label": "Currency Code",
              "type": "string",
              "validation": {
                "values": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BYR",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EEK",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LTL",
                  "LVL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MXV",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SKK",
                  "SLE",
                  "SLL",
                  "SOS",
                  "SRD",
                  "STD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VES",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "3 letter alpha code for the currency – see list of currency codes",
              "choices": [
                {
                  "value": "AED",
                  "label": "AED",
                  "sample": "AED"
                },
                {
                  "value": "AFN",
                  "label": "AFN",
                  "sample": "AFN"
                },
                {
                  "value": "ALL",
                  "label": "ALL",
                  "sample": "ALL"
                },
                {
                  "value": "AMD",
                  "label": "AMD",
                  "sample": "AMD"
                },
                {
                  "value": "ANG",
                  "label": "ANG",
                  "sample": "ANG"
                },
                {
                  "value": "AOA",
                  "label": "AOA",
                  "sample": "AOA"
                },
                {
                  "value": "ARS",
                  "label": "ARS",
                  "sample": "ARS"
                },
                {
                  "value": "AUD",
                  "label": "AUD",
                  "sample": "AUD"
                },
                {
                  "value": "AWG",
                  "label": "AWG",
                  "sample": "AWG"
                },
                {
                  "value": "AZN",
                  "label": "AZN",
                  "sample": "AZN"
                },
                {
                  "value": "BAM",
                  "label": "BAM",
                  "sample": "BAM"
                },
                {
                  "value": "BBD",
                  "label": "BBD",
                  "sample": "BBD"
                },
                {
                  "value": "BDT",
                  "label": "BDT",
                  "sample": "BDT"
                },
                {
                  "value": "BGN",
                  "label": "BGN",
                  "sample": "BGN"
                },
                {
                  "value": "BHD",
                  "label": "BHD",
                  "sample": "BHD"
                },
                {
                  "value": "BIF",
                  "label": "BIF",
                  "sample": "BIF"
                },
                {
                  "value": "BMD",
                  "label": "BMD",
                  "sample": "BMD"
                },
                {
                  "value": "BND",
                  "label": "BND",
                  "sample": "BND"
                },
                {
                  "value": "BOB",
                  "label": "BOB",
                  "sample": "BOB"
                },
                {
                  "value": "BRL",
                  "label": "BRL",
                  "sample": "BRL"
                },
                {
                  "value": "BSD",
                  "label": "BSD",
                  "sample": "BSD"
                },
                {
                  "value": "BTN",
                  "label": "BTN",
                  "sample": "BTN"
                },
                {
                  "value": "BWP",
                  "label": "BWP",
                  "sample": "BWP"
                },
                {
                  "value": "BYN",
                  "label": "BYN",
                  "sample": "BYN"
                },
                {
                  "value": "BYR",
                  "label": "BYR",
                  "sample": "BYR"
                },
                {
                  "value": "BZD",
                  "label": "BZD",
                  "sample": "BZD"
                },
                {
                  "value": "CAD",
                  "label": "CAD",
                  "sample": "CAD"
                },
                {
                  "value": "CDF",
                  "label": "CDF",
                  "sample": "CDF"
                },
                {
                  "value": "CHF",
                  "label": "CHF",
                  "sample": "CHF"
                },
                {
                  "value": "CLF",
                  "label": "CLF",
                  "sample": "CLF"
                },
                {
                  "value": "CLP",
                  "label": "CLP",
                  "sample": "CLP"
                },
                {
                  "value": "CNY",
                  "label": "CNY",
                  "sample": "CNY"
                },
                {
                  "value": "COP",
                  "label": "COP",
                  "sample": "COP"
                },
                {
                  "value": "CRC",
                  "label": "CRC",
                  "sample": "CRC"
                },
                {
                  "value": "CUC",
                  "label": "CUC",
                  "sample": "CUC"
                },
                {
                  "value": "CUP",
                  "label": "CUP",
                  "sample": "CUP"
                },
                {
                  "value": "CVE",
                  "label": "CVE",
                  "sample": "CVE"
                },
                {
                  "value": "CZK",
                  "label": "CZK",
                  "sample": "CZK"
                },
                {
                  "value": "DJF",
                  "label": "DJF",
                  "sample": "DJF"
                },
                {
                  "value": "DKK",
                  "label": "DKK",
                  "sample": "DKK"
                },
                {
                  "value": "DOP",
                  "label": "DOP",
                  "sample": "DOP"
                },
                {
                  "value": "DZD",
                  "label": "DZD",
                  "sample": "DZD"
                },
                {
                  "value": "EEK",
                  "label": "EEK",
                  "sample": "EEK"
                },
                {
                  "value": "EGP",
                  "label": "EGP",
                  "sample": "EGP"
                },
                {
                  "value": "ERN",
                  "label": "ERN",
                  "sample": "ERN"
                },
                {
                  "value": "ETB",
                  "label": "ETB",
                  "sample": "ETB"
                },
                {
                  "value": "EUR",
                  "label": "EUR",
                  "sample": "EUR"
                },
                {
                  "value": "FJD",
                  "label": "FJD",
                  "sample": "FJD"
                },
                {
                  "value": "FKP",
                  "label": "FKP",
                  "sample": "FKP"
                },
                {
                  "value": "GBP",
                  "label": "GBP",
                  "sample": "GBP"
                },
                {
                  "value": "GEL",
                  "label": "GEL",
                  "sample": "GEL"
                },
                {
                  "value": "GHS",
                  "label": "GHS",
                  "sample": "GHS"
                },
                {
                  "value": "GIP",
                  "label": "GIP",
                  "sample": "GIP"
                },
                {
                  "value": "GMD",
                  "label": "GMD",
                  "sample": "GMD"
                },
                {
                  "value": "GNF",
                  "label": "GNF",
                  "sample": "GNF"
                },
                {
                  "value": "GTQ",
                  "label": "GTQ",
                  "sample": "GTQ"
                },
                {
                  "value": "GYD",
                  "label": "GYD",
                  "sample": "GYD"
                },
                {
                  "value": "HKD",
                  "label": "HKD",
                  "sample": "HKD"
                },
                {
                  "value": "HNL",
                  "label": "HNL",
                  "sample": "HNL"
                },
                {
                  "value": "HRK",
                  "label": "HRK",
                  "sample": "HRK"
                },
                {
                  "value": "HTG",
                  "label": "HTG",
                  "sample": "HTG"
                },
                {
                  "value": "HUF",
                  "label": "HUF",
                  "sample": "HUF"
                },
                {
                  "value": "IDR",
                  "label": "IDR",
                  "sample": "IDR"
                },
                {
                  "value": "ILS",
                  "label": "ILS",
                  "sample": "ILS"
                },
                {
                  "value": "INR",
                  "label": "INR",
                  "sample": "INR"
                },
                {
                  "value": "IQD",
                  "label": "IQD",
                  "sample": "IQD"
                },
                {
                  "value": "IRR",
                  "label": "IRR",
                  "sample": "IRR"
                },
                {
                  "value": "ISK",
                  "label": "ISK",
                  "sample": "ISK"
                },
                {
                  "value": "JMD",
                  "label": "JMD",
                  "sample": "JMD"
                },
                {
                  "value": "JOD",
                  "label": "JOD",
                  "sample": "JOD"
                },
                {
                  "value": "JPY",
                  "label": "JPY",
                  "sample": "JPY"
                },
                {
                  "value": "KES",
                  "label": "KES",
                  "sample": "KES"
                },
                {
                  "value": "KGS",
                  "label": "KGS",
                  "sample": "KGS"
                },
                {
                  "value": "KHR",
                  "label": "KHR",
                  "sample": "KHR"
                },
                {
                  "value": "KMF",
                  "label": "KMF",
                  "sample": "KMF"
                },
                {
                  "value": "KPW",
                  "label": "KPW",
                  "sample": "KPW"
                },
                {
                  "value": "KRW",
                  "label": "KRW",
                  "sample": "KRW"
                },
                {
                  "value": "KWD",
                  "label": "KWD",
                  "sample": "KWD"
                },
                {
                  "value": "KYD",
                  "label": "KYD",
                  "sample": "KYD"
                },
                {
                  "value": "KZT",
                  "label": "KZT",
                  "sample": "KZT"
                },
                {
                  "value": "LAK",
                  "label": "LAK",
                  "sample": "LAK"
                },
                {
                  "value": "LBP",
                  "label": "LBP",
                  "sample": "LBP"
                },
                {
                  "value": "LKR",
                  "label": "LKR",
                  "sample": "LKR"
                },
                {
                  "value": "LRD",
                  "label": "LRD",
                  "sample": "LRD"
                },
                {
                  "value": "LSL",
                  "label": "LSL",
                  "sample": "LSL"
                },
                {
                  "value": "LTL",
                  "label": "LTL",
                  "sample": "LTL"
                },
                {
                  "value": "LVL",
                  "label": "LVL",
                  "sample": "LVL"
                },
                {
                  "value": "LYD",
                  "label": "LYD",
                  "sample": "LYD"
                },
                {
                  "value": "MAD",
                  "label": "MAD",
                  "sample": "MAD"
                },
                {
                  "value": "MDL",
                  "label": "MDL",
                  "sample": "MDL"
                },
                {
                  "value": "MGA",
                  "label": "MGA",
                  "sample": "MGA"
                },
                {
                  "value": "MKD",
                  "label": "MKD",
                  "sample": "MKD"
                },
                {
                  "value": "MMK",
                  "label": "MMK",
                  "sample": "MMK"
                },
                {
                  "value": "MNT",
                  "label": "MNT",
                  "sample": "MNT"
                },
                {
                  "value": "MOP",
                  "label": "MOP",
                  "sample": "MOP"
                },
                {
                  "value": "MRO",
                  "label": "MRO",
                  "sample": "MRO"
                },
                {
                  "value": "MRU",
                  "label": "MRU",
                  "sample": "MRU"
                },
                {
                  "value": "MUR",
                  "label": "MUR",
                  "sample": "MUR"
                },
                {
                  "value": "MVR",
                  "label": "MVR",
                  "sample": "MVR"
                },
                {
                  "value": "MWK",
                  "label": "MWK",
                  "sample": "MWK"
                },
                {
                  "value": "MXN",
                  "label": "MXN",
                  "sample": "MXN"
                },
                {
                  "value": "MXV",
                  "label": "MXV",
                  "sample": "MXV"
                },
                {
                  "value": "MYR",
                  "label": "MYR",
                  "sample": "MYR"
                },
                {
                  "value": "MZN",
                  "label": "MZN",
                  "sample": "MZN"
                },
                {
                  "value": "NAD",
                  "label": "NAD",
                  "sample": "NAD"
                },
                {
                  "value": "NGN",
                  "label": "NGN",
                  "sample": "NGN"
                },
                {
                  "value": "NIO",
                  "label": "NIO",
                  "sample": "NIO"
                },
                {
                  "value": "NOK",
                  "label": "NOK",
                  "sample": "NOK"
                },
                {
                  "value": "NPR",
                  "label": "NPR",
                  "sample": "NPR"
                },
                {
                  "value": "NZD",
                  "label": "NZD",
                  "sample": "NZD"
                },
                {
                  "value": "OMR",
                  "label": "OMR",
                  "sample": "OMR"
                },
                {
                  "value": "PAB",
                  "label": "PAB",
                  "sample": "PAB"
                },
                {
                  "value": "PEN",
                  "label": "PEN",
                  "sample": "PEN"
                },
                {
                  "value": "PGK",
                  "label": "PGK",
                  "sample": "PGK"
                },
                {
                  "value": "PHP",
                  "label": "PHP",
                  "sample": "PHP"
                },
                {
                  "value": "PKR",
                  "label": "PKR",
                  "sample": "PKR"
                },
                {
                  "value": "PLN",
                  "label": "PLN",
                  "sample": "PLN"
                },
                {
                  "value": "PYG",
                  "label": "PYG",
                  "sample": "PYG"
                },
                {
                  "value": "QAR",
                  "label": "QAR",
                  "sample": "QAR"
                },
                {
                  "value": "RON",
                  "label": "RON",
                  "sample": "RON"
                },
                {
                  "value": "RSD",
                  "label": "RSD",
                  "sample": "RSD"
                },
                {
                  "value": "RUB",
                  "label": "RUB",
                  "sample": "RUB"
                },
                {
                  "value": "RWF",
                  "label": "RWF",
                  "sample": "RWF"
                },
                {
                  "value": "SAR",
                  "label": "SAR",
                  "sample": "SAR"
                },
                {
                  "value": "SBD",
                  "label": "SBD",
                  "sample": "SBD"
                },
                {
                  "value": "SCR",
                  "label": "SCR",
                  "sample": "SCR"
                },
                {
                  "value": "SDG",
                  "label": "SDG",
                  "sample": "SDG"
                },
                {
                  "value": "SEK",
                  "label": "SEK",
                  "sample": "SEK"
                },
                {
                  "value": "SGD",
                  "label": "SGD",
                  "sample": "SGD"
                },
                {
                  "value": "SHP",
                  "label": "SHP",
                  "sample": "SHP"
                },
                {
                  "value": "SKK",
                  "label": "SKK",
                  "sample": "SKK"
                },
                {
                  "value": "SLE",
                  "label": "SLE",
                  "sample": "SLE"
                },
                {
                  "value": "SLL",
                  "label": "SLL",
                  "sample": "SLL"
                },
                {
                  "value": "SOS",
                  "label": "SOS",
                  "sample": "SOS"
                },
                {
                  "value": "SRD",
                  "label": "SRD",
                  "sample": "SRD"
                },
                {
                  "value": "STD",
                  "label": "STD",
                  "sample": "STD"
                },
                {
                  "value": "STN",
                  "label": "STN",
                  "sample": "STN"
                },
                {
                  "value": "SVC",
                  "label": "SVC",
                  "sample": "SVC"
                },
                {
                  "value": "SYP",
                  "label": "SYP",
                  "sample": "SYP"
                },
                {
                  "value": "SZL",
                  "label": "SZL",
                  "sample": "SZL"
                },
                {
                  "value": "THB",
                  "label": "THB",
                  "sample": "THB"
                },
                {
                  "value": "TJS",
                  "label": "TJS",
                  "sample": "TJS"
                },
                {
                  "value": "TMT",
                  "label": "TMT",
                  "sample": "TMT"
                },
                {
                  "value": "TND",
                  "label": "TND",
                  "sample": "TND"
                },
                {
                  "value": "TOP",
                  "label": "TOP",
                  "sample": "TOP"
                },
                {
                  "value": "TRY",
                  "label": "TRY",
                  "sample": "TRY"
                },
                {
                  "value": "TTD",
                  "label": "TTD",
                  "sample": "TTD"
                },
                {
                  "value": "TWD",
                  "label": "TWD",
                  "sample": "TWD"
                },
                {
                  "value": "TZS",
                  "label": "TZS",
                  "sample": "TZS"
                },
                {
                  "value": "UAH",
                  "label": "UAH",
                  "sample": "UAH"
                },
                {
                  "value": "UGX",
                  "label": "UGX",
                  "sample": "UGX"
                },
                {
                  "value": "USD",
                  "label": "USD",
                  "sample": "USD"
                },
                {
                  "value": "UYU",
                  "label": "UYU",
                  "sample": "UYU"
                },
                {
                  "value": "UZS",
                  "label": "UZS",
                  "sample": "UZS"
                },
                {
                  "value": "VEF",
                  "label": "VEF",
                  "sample": "VEF"
                },
                {
                  "value": "VES",
                  "label": "VES",
                  "sample": "VES"
                },
                {
                  "value": "VND",
                  "label": "VND",
                  "sample": "VND"
                },
                {
                  "value": "VUV",
                  "label": "VUV",
                  "sample": "VUV"
                },
                {
                  "value": "WST",
                  "label": "WST",
                  "sample": "WST"
                },
                {
                  "value": "XAF",
                  "label": "XAF",
                  "sample": "XAF"
                },
                {
                  "value": "XCD",
                  "label": "XCD",
                  "sample": "XCD"
                },
                {
                  "value": "XOF",
                  "label": "XOF",
                  "sample": "XOF"
                },
                {
                  "value": "XPF",
                  "label": "XPF",
                  "sample": "XPF"
                },
                {
                  "value": "YER",
                  "label": "YER",
                  "sample": "YER"
                },
                {
                  "value": "ZAR",
                  "label": "ZAR",
                  "sample": "ZAR"
                },
                {
                  "value": "ZMW",
                  "label": "ZMW",
                  "sample": "ZMW"
                },
                {
                  "value": "ZMK",
                  "label": "ZMK",
                  "sample": "ZMK"
                },
                {
                  "value": "ZWD",
                  "label": "ZWD",
                  "sample": "ZWD"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.Account.TaxType",
              "label": "Tax Type",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The tax type from taxRates"
            },
            {
              "key": "body.Account.EnablePaymentsToAccount",
              "label": "Enable Payments To Account",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Boolean – describes whether account can have payments applied to it"
            },
            {
              "key": "body.Account.ShowInExpenseClaims",
              "label": "Show In Expense Claims",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Boolean – describes whether account code is available for use with expense claims"
            },
            {
              "key": "body.Account.Class",
              "label": "Class",
              "type": "string",
              "validation": {
                "values": [
                  "ASSET",
                  "EQUITY",
                  "EXPENSE",
                  "LIABILITY",
                  "REVENUE"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Account Class Types",
              "choices": [
                {
                  "value": "ASSET",
                  "label": "ASSET",
                  "sample": "ASSET"
                },
                {
                  "value": "EQUITY",
                  "label": "EQUITY",
                  "sample": "EQUITY"
                },
                {
                  "value": "EXPENSE",
                  "label": "EXPENSE",
                  "sample": "EXPENSE"
                },
                {
                  "value": "LIABILITY",
                  "label": "LIABILITY",
                  "sample": "LIABILITY"
                },
                {
                  "value": "REVENUE",
                  "label": "REVENUE",
                  "sample": "REVENUE"
                }
              ]
            },
            {
              "key": "body.Account.SystemAccount",
              "label": "System Account",
              "type": "string",
              "validation": {
                "values": [
                  "DEBTORS",
                  "CREDITORS",
                  "BANKCURRENCYGAIN",
                  "GST",
                  "GSTONIMPORTS",
                  "HISTORICAL",
                  "REALISEDCURRENCYGAIN",
                  "RETAINEDEARNINGS",
                  "ROUNDING",
                  "TRACKINGTRANSFERS",
                  "UNPAIDEXPCLM",
                  "UNREALISEDCURRENCYGAIN",
                  "WAGEPAYABLES",
                  "CISASSETS",
                  "CISASSET",
                  "CISLABOUR",
                  "CISLABOUREXPENSE",
                  "CISLABOURINCOME",
                  "CISLIABILITY",
                  "CISMATERIALS",
                  ""
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "If this is a system account then this element is returned. See System Account types. Note that non-system accounts may have this element set as either “” or null.",
              "choices": [
                {
                  "value": "DEBTORS",
                  "label": "DEBTORS",
                  "sample": "DEBTORS"
                },
                {
                  "value": "CREDITORS",
                  "label": "CREDITORS",
                  "sample": "CREDITORS"
                },
                {
                  "value": "BANKCURRENCYGAIN",
                  "label": "BANKCURRENCYGAIN",
                  "sample": "BANKCURRENCYGAIN"
                },
                {
                  "value": "GST",
                  "label": "GST",
                  "sample": "GST"
                },
                {
                  "value": "GSTONIMPORTS",
                  "label": "GSTONIMPORTS",
                  "sample": "GSTONIMPORTS"
                },
                {
                  "value": "HISTORICAL",
                  "label": "HISTORICAL",
                  "sample": "HISTORICAL"
                },
                {
                  "value": "REALISEDCURRENCYGAIN",
                  "label": "REALISEDCURRENCYGAIN",
                  "sample": "REALISEDCURRENCYGAIN"
                },
                {
                  "value": "RETAINEDEARNINGS",
                  "label": "RETAINEDEARNINGS",
                  "sample": "RETAINEDEARNINGS"
                },
                {
                  "value": "ROUNDING",
                  "label": "ROUNDING",
                  "sample": "ROUNDING"
                },
                {
                  "value": "TRACKINGTRANSFERS",
                  "label": "TRACKINGTRANSFERS",
                  "sample": "TRACKINGTRANSFERS"
                },
                {
                  "value": "UNPAIDEXPCLM",
                  "label": "UNPAIDEXPCLM",
                  "sample": "UNPAIDEXPCLM"
                },
                {
                  "value": "UNREALISEDCURRENCYGAIN",
                  "label": "UNREALISEDCURRENCYGAIN",
                  "sample": "UNREALISEDCURRENCYGAIN"
                },
                {
                  "value": "WAGEPAYABLES",
                  "label": "WAGEPAYABLES",
                  "sample": "WAGEPAYABLES"
                },
                {
                  "value": "CISASSETS",
                  "label": "CISASSETS",
                  "sample": "CISASSETS"
                },
                {
                  "value": "CISASSET",
                  "label": "CISASSET",
                  "sample": "CISASSET"
                },
                {
                  "value": "CISLABOUR",
                  "label": "CISLABOUR",
                  "sample": "CISLABOUR"
                },
                {
                  "value": "CISLABOUREXPENSE",
                  "label": "CISLABOUREXPENSE",
                  "sample": "CISLABOUREXPENSE"
                },
                {
                  "value": "CISLABOURINCOME",
                  "label": "CISLABOURINCOME",
                  "sample": "CISLABOURINCOME"
                },
                {
                  "value": "CISLIABILITY",
                  "label": "CISLIABILITY",
                  "sample": "CISLIABILITY"
                },
                {
                  "value": "CISMATERIALS",
                  "label": "CISMATERIALS",
                  "sample": "CISMATERIALS"
                },
                {
                  "value": "",
                  "label": "",
                  "sample": ""
                }
              ]
            },
            {
              "key": "body.Account.ReportingCode",
              "label": "Reporting Code",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Shown if set"
            },
            {
              "key": "body.Account.ReportingCodeName",
              "label": "Reporting Code Name",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Shown if set"
            },
            {
              "key": "body.Account.HasAttachments",
              "label": "Has Attachments",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "boolean to indicate if an account has an attachment (read only)",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.Account.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "Last modified date UTC format",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.Account.AddToWatchlist",
              "label": "Add To Watchlist",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Boolean – describes whether the account is shown in the watchlist widget on the dashboard"
            },
            {
              "key": "body.Account.ValidationErrors",
              "label": "Validation Errors",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "body.Code",
              "label": "Code",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Code of account you are using to make the payment e.g. 001 (note- not all accounts have a code value)"
            },
            {
              "key": "body.Date",
              "label": "Date",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06"
            },
            {
              "key": "body.CurrencyRate",
              "label": "Currency Rate",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Exchange rate when payment is received. Only used for non base currency invoices and credit notes e.g. 0.7500"
            },
            {
              "key": "body.Amount",
              "label": "Amount",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The amount of the payment. Must be less than or equal to the outstanding amount owing on the invoice e.g. 200.00"
            },
            {
              "key": "body.BankAmount",
              "label": "Bank Amount",
              "type": "number",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The amount of the payment in the currency of the bank account."
            },
            {
              "key": "body.Reference",
              "label": "Reference",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "An optional description for the payment e.g. Direct Debit"
            },
            {
              "key": "body.IsReconciled",
              "label": "Is Reconciled",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "An optional parameter for the payment. A boolean indicating whether you would like the payment to be created as reconciled when using PUT, or whether a payment has been reconciled when using GET"
            },
            {
              "key": "body.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "AUTHORISED",
                  "DELETED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The status of the payment.",
              "choices": [
                {
                  "value": "AUTHORISED",
                  "label": "AUTHORISED",
                  "sample": "AUTHORISED"
                },
                {
                  "value": "DELETED",
                  "label": "DELETED",
                  "sample": "DELETED"
                }
              ]
            },
            {
              "key": "body.PaymentType",
              "label": "Payment Type",
              "type": "string",
              "validation": {
                "values": [
                  "ACCRECPAYMENT",
                  "ACCPAYPAYMENT",
                  "ARCREDITPAYMENT",
                  "APCREDITPAYMENT",
                  "AROVERPAYMENTPAYMENT",
                  "ARPREPAYMENTPAYMENT",
                  "APPREPAYMENTPAYMENT",
                  "APOVERPAYMENTPAYMENT"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "See Payment Types.",
              "choices": [
                {
                  "value": "ACCRECPAYMENT",
                  "label": "ACCRECPAYMENT",
                  "sample": "ACCRECPAYMENT"
                },
                {
                  "value": "ACCPAYPAYMENT",
                  "label": "ACCPAYPAYMENT",
                  "sample": "ACCPAYPAYMENT"
                },
                {
                  "value": "ARCREDITPAYMENT",
                  "label": "ARCREDITPAYMENT",
                  "sample": "ARCREDITPAYMENT"
                },
                {
                  "value": "APCREDITPAYMENT",
                  "label": "APCREDITPAYMENT",
                  "sample": "APCREDITPAYMENT"
                },
                {
                  "value": "AROVERPAYMENTPAYMENT",
                  "label": "AROVERPAYMENTPAYMENT",
                  "sample": "AROVERPAYMENTPAYMENT"
                },
                {
                  "value": "ARPREPAYMENTPAYMENT",
                  "label": "ARPREPAYMENTPAYMENT",
                  "sample": "ARPREPAYMENTPAYMENT"
                },
                {
                  "value": "APPREPAYMENTPAYMENT",
                  "label": "APPREPAYMENTPAYMENT",
                  "sample": "APPREPAYMENTPAYMENT"
                },
                {
                  "value": "APOVERPAYMENTPAYMENT",
                  "label": "APOVERPAYMENTPAYMENT",
                  "sample": "APOVERPAYMENTPAYMENT"
                }
              ]
            },
            {
              "key": "body.UpdatedDateUTC",
              "label": "Updated Date UTC",
              "type": "string",
              "validation": {},
              "placeholder": "Example: /Date(1573755038314)/",
              "required": false,
              "helpText": "UTC timestamp of last update to the payment",
              "sample": "/Date(1573755038314)/"
            },
            {
              "key": "body.PaymentID",
              "label": "Payment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "The Xero identifier for an Payment e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
              "sample": "00000000-0000-0000-0000-000000000000"
            },
            {
              "key": "body.BatchPaymentID",
              "label": "Batch Payment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "Present if the payment was created as part of a batch.",
              "sample": "00000000-0000-0000-0000-000000000000"
            },
            {
              "key": "body.BankAccountNumber",
              "label": "Bank Account Number",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The suppliers bank account number the payment is being made to"
            },
            {
              "key": "body.Particulars",
              "label": "Particulars",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The suppliers bank account number the payment is being made to"
            },
            {
              "key": "body.Details",
              "label": "Details",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The information to appear on the supplier's bank account"
            },
            {
              "key": "body.HasAccount",
              "label": "Has Account",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "A boolean to indicate if a contact has an validation errors",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.HasValidationErrors",
              "label": "Has Validation Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "A boolean to indicate if a contact has an validation errors",
              "default": "false",
              "sample": "false"
            },
            {
              "key": "body.StatusAttributeString",
              "label": "Status Attribute String",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "A string to indicate if a invoice status"
            },
            {
              "key": "body.ValidationErrors",
              "label": "Validation Errors",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Payments\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getpayment_payments_paymentid_get",
        "name": "Retrieves a specific payment for invoices and credit notes using a unique payment Id",
        "display": {
          "label": "Retrieves a specific payment for invoices and credit notes using a unique payment Id",
          "description": "Retrieves a specific payment for invoices and credit notes using a unique payment Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PaymentID",
              "label": "Payment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Payment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "deletepayment_payments_paymentid_post",
        "name": "Updates a specific payment for invoices and credit notes",
        "display": {
          "label": "Updates a specific payment for invoices and credit notes",
          "description": "Updates a specific payment for invoices and credit notes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PaymentID",
              "label": "Payment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Payment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.Status",
              "label": "Status",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "helpText": "The status of the payment.",
              "default": "DELETED"
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Payments/{PaymentID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getpaymenthistory_payments_paymentid_history_get",
        "name": "Retrieves history records of a specific payment",
        "display": {
          "label": "Retrieves history records of a specific payment",
          "description": "Retrieves history records of a specific payment",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PaymentID",
              "label": "Payment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Payment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createpaymenthistory_payments_paymentid_history_put",
        "name": "Creates a history record for a specific payment",
        "display": {
          "label": "Creates a history record for a specific payment",
          "description": "Creates a history record for a specific payment",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PaymentID",
              "label": "Payment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Payment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Payments/{PaymentID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getpaymentservices_paymentservices_get",
        "name": "Retrieves payment services",
        "display": {
          "label": "Retrieves payment services",
          "description": "Retrieves payment services",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createpaymentservice_paymentservices_put",
        "name": "Creates a payment service",
        "display": {
          "label": "Creates a payment service",
          "description": "Creates a payment service",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body.PaymentServices",
              "label": "Payment Services",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/PaymentServices\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getprepayments_prepayments_get",
        "name": "Retrieves prepayments",
        "display": {
          "label": "Retrieves prepayments",
          "description": "Retrieves prepayments",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"AUTHORISED\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"AUTHORISED\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Reference ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Reference ASC",
              "computed": false
            },
            {
              "key": "query.page",
              "label": "Page",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 1",
              "required": false,
              "helpText": "e.g. page=1 – Up to 100 prepayments will be returned in a single API call with line items shown for each overpayment",
              "sample": 1,
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getprepayment_prepayments_prepaymentid_get",
        "name": "Allows you to retrieve a specified prepayments",
        "display": {
          "label": "Allows you to retrieve a specified prepayments",
          "description": "Allows you to retrieve a specified prepayments",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PrepaymentID",
              "label": "Prepayment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a PrePayment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createprepaymentallocations_prepayments_prepaymentid_allocations_put",
        "name": "Allows you to create an Allocation for prepayments",
        "display": {
          "label": "Allows you to create an Allocation for prepayments",
          "description": "Allows you to create an Allocation for prepayments",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PrepaymentID",
              "label": "Prepayment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a PrePayment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.Allocations",
              "label": "Allocations",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": true,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Prepayments/{PrepaymentID}/Allocations\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getprepaymenthistory_prepayments_prepaymentid_history_get",
        "name": "Retrieves history record for a specific prepayment",
        "display": {
          "label": "Retrieves history record for a specific prepayment",
          "description": "Retrieves history record for a specific prepayment",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PrepaymentID",
              "label": "Prepayment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a PrePayment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createprepaymenthistory_prepayments_prepaymentid_history_put",
        "name": "Creates a history record for a specific prepayment",
        "display": {
          "label": "Creates a history record for a specific prepayment",
          "description": "Creates a history record for a specific prepayment",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PrepaymentID",
              "label": "Prepayment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a PrePayment",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Prepayments/{PrepaymentID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getpurchaseorders_purchaseorders_get",
        "name": "Retrieves purchase orders",
        "display": {
          "label": "Retrieves purchase orders",
          "description": "Retrieves purchase orders",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "DRAFT",
                  "SUBMITTED",
                  "AUTHORISED",
                  "BILLED",
                  "DELETED"
                ]
              },
              "placeholder": "Example: SUBMITTED",
              "required": false,
              "helpText": "Filter by purchase order status",
              "sample": "SUBMITTED",
              "choices": [
                {
                  "value": "DRAFT",
                  "label": "DRAFT",
                  "sample": "DRAFT"
                },
                {
                  "value": "SUBMITTED",
                  "label": "SUBMITTED",
                  "sample": "SUBMITTED"
                },
                {
                  "value": "AUTHORISED",
                  "label": "AUTHORISED",
                  "sample": "AUTHORISED"
                },
                {
                  "value": "BILLED",
                  "label": "BILLED",
                  "sample": "BILLED"
                },
                {
                  "value": "DELETED",
                  "label": "DELETED",
                  "sample": "DELETED"
                }
              ],
              "computed": false
            },
            {
              "key": "query.DateFrom",
              "label": "Date From",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-12-01",
              "required": false,
              "helpText": "Filter by purchase order date (e.g. GET https://.../PurchaseOrders?DateFrom=2015-12-01&DateTo=2015-12-31",
              "sample": "2019-12-01",
              "computed": false
            },
            {
              "key": "query.DateTo",
              "label": "Date To",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-12-31",
              "required": false,
              "helpText": "Filter by purchase order date (e.g. GET https://.../PurchaseOrders?DateFrom=2015-12-01&DateTo=2015-12-31",
              "sample": "2019-12-31",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: PurchaseOrderNumber ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "PurchaseOrderNumber ASC",
              "computed": false
            },
            {
              "key": "query.page",
              "label": "Page",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 1",
              "required": false,
              "helpText": "To specify a page, append the page parameter to the URL e.g. ?page=1. If there are 100 records in the response you will need to check if there is any more data by fetching the next page e.g ?page=2 and continuing this process until no more results are returned.",
              "sample": 1,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createpurchaseorders_purchaseorders_put",
        "name": "Creates one or more purchase orders",
        "display": {
          "label": "Creates one or more purchase orders",
          "description": "Creates one or more purchase orders",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.PurchaseOrders",
              "label": "Purchase Orders",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/PurchaseOrders\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateorcreatepurchaseorders_purchaseorders_post",
        "name": "Updates or creates one or more purchase orders",
        "display": {
          "label": "Updates or creates one or more purchase orders",
          "description": "Updates or creates one or more purchase orders",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.PurchaseOrders",
              "label": "Purchase Orders",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/PurchaseOrders\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getpurchaseorderaspdf_purchaseorders_purchaseorderid_pdf_get",
        "name": "Retrieves specific purchase order as PDF files using a unique purchase order Id",
        "display": {
          "label": "Retrieves specific purchase order as PDF files using a unique purchase order Id",
          "description": "Retrieves specific purchase order as PDF files using a unique purchase order Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PurchaseOrderID",
              "label": "Purchase Order ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Purchase Order",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getpurchaseorder_purchaseorders_purchaseorderid_get",
        "name": "Retrieves a specific purchase order using a unique purchase order Id",
        "display": {
          "label": "Retrieves a specific purchase order using a unique purchase order Id",
          "description": "Retrieves a specific purchase order using a unique purchase order Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PurchaseOrderID",
              "label": "Purchase Order ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Purchase Order",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatepurchaseorder_purchaseorders_purchaseorderid_post",
        "name": "Updates a specific purchase order",
        "display": {
          "label": "Updates a specific purchase order",
          "description": "Updates a specific purchase order",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PurchaseOrderID",
              "label": "Purchase Order ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Purchase Order",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.PurchaseOrders",
              "label": "Purchase Orders",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/PurchaseOrders/{PurchaseOrderID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getpurchaseorderbynumber_purchaseorders_purchaseordernumber_get",
        "name": "Retrieves a specific purchase order using purchase order number",
        "display": {
          "label": "Retrieves a specific purchase order using purchase order number",
          "description": "Retrieves a specific purchase order using purchase order number",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PurchaseOrderNumber",
              "label": "Purchase Order Number",
              "type": "string",
              "validation": {},
              "placeholder": "Example: PO1234",
              "required": true,
              "helpText": "Unique identifier for a PurchaseOrder",
              "sample": "PO1234",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getpurchaseorderhistory_purchaseorders_purchaseorderid_history_get",
        "name": "Retrieves history for a specific purchase order",
        "display": {
          "label": "Retrieves history for a specific purchase order",
          "description": "Retrieves history for a specific purchase order",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PurchaseOrderID",
              "label": "Purchase Order ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Purchase Order",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createpurchaseorderhistory_purchaseorders_purchaseorderid_history_put",
        "name": "Creates a history record for a specific purchase orders",
        "display": {
          "label": "Creates a history record for a specific purchase orders",
          "description": "Creates a history record for a specific purchase orders",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PurchaseOrderID",
              "label": "Purchase Order ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Purchase Order",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/PurchaseOrders/{PurchaseOrderID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getpurchaseorderattachments_purchaseorders_purchaseorderid_attachments_get",
        "name": "Retrieves attachments for a specific purchase order",
        "display": {
          "label": "Retrieves attachments for a specific purchase order",
          "description": "Retrieves attachments for a specific purchase order",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PurchaseOrderID",
              "label": "Purchase Order ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Purchase Order",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getpurchaseorderattachmentbyid_purchaseorders_purchaseorderid_attachments_attachmentid_get",
        "name": "Retrieves specific attachment for a specific purchase order using a unique attachment Id",
        "display": {
          "label": "Retrieves specific attachment for a specific purchase order using a unique attachment Id",
          "description": "Retrieves specific attachment for a specific purchase order using a unique attachment Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PurchaseOrderID",
              "label": "Purchase Order ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Purchase Order",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.AttachmentID",
              "label": "Attachment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Attachment object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getpurchaseorder_attachmentbyfilename_purchaseorders_purchaseorderid_attachments_filename_get",
        "name": "Retrieves a specific attachment for a specific purchase order by filename",
        "display": {
          "label": "Retrieves a specific attachment for a specific purchase order by filename",
          "description": "Retrieves a specific attachment for a specific purchase order by filename",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PurchaseOrderID",
              "label": "Purchase Order ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Purchase Order",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatepurchaseorderattachmentbyfilename_purchaseorders_purchaseorderid_attachments_filename_post",
        "name": "Updates a specific attachment for a specific purchase order by filename",
        "display": {
          "label": "Updates a specific attachment for a specific purchase order by filename",
          "description": "Updates a specific attachment for a specific purchase order by filename",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PurchaseOrderID",
              "label": "Purchase Order ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Purchase Order",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createpurchaseorderattachmentbyfilename_purchaseorders_purchaseorderid_attachments_filename_put",
        "name": "Creates attachment for a specific purchase order",
        "display": {
          "label": "Creates attachment for a specific purchase order",
          "description": "Creates attachment for a specific purchase order",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.PurchaseOrderID",
              "label": "Purchase Order ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Purchase Order",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getquotes_quotes_get",
        "name": "Retrieves sales quotes",
        "display": {
          "label": "Retrieves sales quotes",
          "description": "Retrieves sales quotes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.DateFrom",
              "label": "Date From",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "Filter for quotes after a particular date",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.DateTo",
              "label": "Date To",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "Filter for quotes before a particular date",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.ExpiryDateFrom",
              "label": "Expiry Date From",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "Filter for quotes expiring after a particular date",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.ExpiryDateTo",
              "label": "Expiry Date To",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "Filter for quotes before a particular date",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.ContactID",
              "label": "Contact ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "Filter for quotes belonging to a particular contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.Status",
              "label": "Status",
              "type": "string",
              "validation": {},
              "placeholder": "Example: DRAFT",
              "required": false,
              "helpText": "Filter for quotes of a particular Status",
              "sample": "DRAFT",
              "computed": false
            },
            {
              "key": "query.page",
              "label": "Page",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 1",
              "required": false,
              "helpText": "e.g. page=1 – Up to 100 Quotes will be returned in a single API call with line items shown for each quote",
              "sample": 1,
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Status ASC",
              "computed": false
            },
            {
              "key": "query.QuoteNumber",
              "label": "Quote Number",
              "type": "string",
              "validation": {},
              "placeholder": "Example: QU-0001",
              "required": false,
              "helpText": "Filter by quote number (e.g. GET https://.../Quotes?QuoteNumber=QU-0001)",
              "sample": "QU-0001",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createquotes_quotes_put",
        "name": "Create one or more quotes",
        "display": {
          "label": "Create one or more quotes",
          "description": "Create one or more quotes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.Quotes",
              "label": "Quotes",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Quotes\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateorcreatequotes_quotes_post",
        "name": "Updates or creates one or more quotes",
        "display": {
          "label": "Updates or creates one or more quotes",
          "description": "Updates or creates one or more quotes",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.Quotes",
              "label": "Quotes",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Quotes\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getquote_quotes_quoteid_get",
        "name": "Retrieves a specific quote using a unique quote Id",
        "display": {
          "label": "Retrieves a specific quote using a unique quote Id",
          "description": "Retrieves a specific quote using a unique quote Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.QuoteID",
              "label": "Quote ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Quote",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatequote_quotes_quoteid_post",
        "name": "Updates a specific quote",
        "display": {
          "label": "Updates a specific quote",
          "description": "Updates a specific quote",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.QuoteID",
              "label": "Quote ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Quote",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.Quotes",
              "label": "Quotes",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Quotes/{QuoteID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getquotehistory_quotes_quoteid_history_get",
        "name": "Retrieves history records of a specific quote",
        "display": {
          "label": "Retrieves history records of a specific quote",
          "description": "Retrieves history records of a specific quote",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.QuoteID",
              "label": "Quote ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Quote",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createquotehistory_quotes_quoteid_history_put",
        "name": "Creates a history record for a specific quote",
        "display": {
          "label": "Creates a history record for a specific quote",
          "description": "Creates a history record for a specific quote",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.QuoteID",
              "label": "Quote ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Quote",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Quotes/{QuoteID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getquoteaspdf_quotes_quoteid_pdf_get",
        "name": "Retrieves a specific quote as a PDF file using a unique quote Id",
        "display": {
          "label": "Retrieves a specific quote as a PDF file using a unique quote Id",
          "description": "Retrieves a specific quote as a PDF file using a unique quote Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.QuoteID",
              "label": "Quote ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Quote",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getquoteattachments_quotes_quoteid_attachments_get",
        "name": "Retrieves attachments for a specific quote",
        "display": {
          "label": "Retrieves attachments for a specific quote",
          "description": "Retrieves attachments for a specific quote",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.QuoteID",
              "label": "Quote ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Quote",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getquoteattachmentbyid_quotes_quoteid_attachments_attachmentid_get",
        "name": "Retrieves a specific attachment from a specific quote using a unique attachment Id",
        "display": {
          "label": "Retrieves a specific attachment from a specific quote using a unique attachment Id",
          "description": "Retrieves a specific attachment from a specific quote using a unique attachment Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.QuoteID",
              "label": "Quote ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Quote",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.AttachmentID",
              "label": "Attachment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Attachment object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getquoteattachmentbyfilename_quotes_quoteid_attachments_filename_get",
        "name": "Retrieves a specific attachment from a specific quote by filename",
        "display": {
          "label": "Retrieves a specific attachment from a specific quote by filename",
          "description": "Retrieves a specific attachment from a specific quote by filename",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.QuoteID",
              "label": "Quote ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Quote",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatequoteattachmentbyfilename_quotes_quoteid_attachments_filename_post",
        "name": "Updates a specific attachment from a specific quote by filename",
        "display": {
          "label": "Updates a specific attachment from a specific quote by filename",
          "description": "Updates a specific attachment from a specific quote by filename",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.QuoteID",
              "label": "Quote ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Quote",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Quotes/{QuoteID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createquoteattachmentbyfilename_quotes_quoteid_attachments_filename_put",
        "name": "Creates attachment for a specific quote",
        "display": {
          "label": "Creates attachment for a specific quote",
          "description": "Creates attachment for a specific quote",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.QuoteID",
              "label": "Quote ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for an Quote",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Quotes/{QuoteID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreceipts_receipts_get",
        "name": "Retrieves draft expense claim receipts for any user",
        "display": {
          "label": "Retrieves draft expense claim receipts for any user",
          "description": "Retrieves draft expense claim receipts for any user",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"DRAFT\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"DRAFT\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: ReceiptNumber ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "ReceiptNumber ASC",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createreceipt_receipts_put",
        "name": "Creates draft expense claim receipts for any user",
        "display": {
          "label": "Creates draft expense claim receipts for any user",
          "description": "Creates draft expense claim receipts for any user",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.Receipts",
              "label": "Receipts",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Receipts\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreceipt_receipts_receiptid_get",
        "name": "Retrieves a specific draft expense claim receipt by using a unique receipt Id",
        "display": {
          "label": "Retrieves a specific draft expense claim receipt by using a unique receipt Id",
          "description": "Retrieves a specific draft expense claim receipt by using a unique receipt Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ReceiptID",
              "label": "Receipt ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Receipt",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatereceipt_receipts_receiptid_post",
        "name": "Updates a specific draft expense claim receipts",
        "display": {
          "label": "Updates a specific draft expense claim receipts",
          "description": "Updates a specific draft expense claim receipts",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ReceiptID",
              "label": "Receipt ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Receipt",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.unitdp",
              "label": "Unitdp",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 4",
              "required": false,
              "helpText": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
              "sample": 4,
              "computed": false
            },
            {
              "key": "body.Receipts",
              "label": "Receipts",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Receipts/{ReceiptID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreceiptattachments_receipts_receiptid_attachments_get",
        "name": "Retrieves attachments for a specific expense claim receipt",
        "display": {
          "label": "Retrieves attachments for a specific expense claim receipt",
          "description": "Retrieves attachments for a specific expense claim receipt",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ReceiptID",
              "label": "Receipt ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Receipt",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreceiptattachmentbyid_receipts_receiptid_attachments_attachmentid_get",
        "name": "Retrieves a specific attachments from a specific expense claim receipts by using a unique attachment Id",
        "display": {
          "label": "Retrieves a specific attachments from a specific expense claim receipts by using a unique attachment Id",
          "description": "Retrieves a specific attachments from a specific expense claim receipts by using a unique attachment Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ReceiptID",
              "label": "Receipt ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Receipt",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.AttachmentID",
              "label": "Attachment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Attachment object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreceiptattachmentbyfilename_receipts_receiptid_attachments_filename_get",
        "name": "Retrieves a specific attachment from a specific expense claim receipts by file name",
        "display": {
          "label": "Retrieves a specific attachment from a specific expense claim receipts by file name",
          "description": "Retrieves a specific attachment from a specific expense claim receipts by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ReceiptID",
              "label": "Receipt ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Receipt",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatereceiptattachmentbyfilename_receipts_receiptid_attachments_filename_post",
        "name": "Updates a specific attachment on a specific expense claim receipts by file name",
        "display": {
          "label": "Updates a specific attachment on a specific expense claim receipts by file name",
          "description": "Updates a specific attachment on a specific expense claim receipts by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ReceiptID",
              "label": "Receipt ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Receipt",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Receipts/{ReceiptID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createreceiptattachmentbyfilename_receipts_receiptid_attachments_filename_put",
        "name": "Creates an attachment on a specific expense claim receipts by file name",
        "display": {
          "label": "Creates an attachment on a specific expense claim receipts by file name",
          "description": "Creates an attachment on a specific expense claim receipts by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ReceiptID",
              "label": "Receipt ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Receipt",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Receipts/{ReceiptID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreceipthistory_receipts_receiptid_history_get",
        "name": "Retrieves a history record for a specific receipt",
        "display": {
          "label": "Retrieves a history record for a specific receipt",
          "description": "Retrieves a history record for a specific receipt",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ReceiptID",
              "label": "Receipt ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Receipt",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createreceipthistory_receipts_receiptid_history_put",
        "name": "Creates a history record for a specific receipt",
        "display": {
          "label": "Creates a history record for a specific receipt",
          "description": "Creates a history record for a specific receipt",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ReceiptID",
              "label": "Receipt ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Receipt",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/Receipts/{ReceiptID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getrepeatinginvoices_repeatinginvoices_get",
        "name": "Retrieves repeating invoices",
        "display": {
          "label": "Retrieves repeating invoices",
          "description": "Retrieves repeating invoices",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"DRAFT\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"DRAFT\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Total ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Total ASC",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createrepeatinginvoices_repeatinginvoices_put",
        "name": "Creates one or more repeating invoice templates",
        "display": {
          "label": "Creates one or more repeating invoice templates",
          "description": "Creates one or more repeating invoice templates",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.RepeatingInvoices",
              "label": "Repeating Invoices",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/RepeatingInvoices\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updateorcreaterepeatinginvoices_repeatinginvoices_post",
        "name": "Creates or deletes one or more repeating invoice templates",
        "display": {
          "label": "Creates or deletes one or more repeating invoice templates",
          "description": "Creates or deletes one or more repeating invoice templates",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.summarizeErrors",
              "label": "Summarize Errors",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "If false return 200 OK and mix of successfully created objects and any with validation errors",
              "sample": true,
              "computed": false
            },
            {
              "key": "body.RepeatingInvoices",
              "label": "Repeating Invoices",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/RepeatingInvoices\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getrepeatinginvoice_repeatinginvoices_repeatinginvoiceid_get",
        "name": "Retrieves a specific repeating invoice by using a unique repeating invoice Id",
        "display": {
          "label": "Retrieves a specific repeating invoice by using a unique repeating invoice Id",
          "description": "Retrieves a specific repeating invoice by using a unique repeating invoice Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.RepeatingInvoiceID",
              "label": "Repeating Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Repeating Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updaterepeatinginvoice_repeatinginvoices_repeatinginvoiceid_post",
        "name": "Deletes a specific repeating invoice template",
        "display": {
          "label": "Deletes a specific repeating invoice template",
          "description": "Deletes a specific repeating invoice template",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.RepeatingInvoiceID",
              "label": "Repeating Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Repeating Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.RepeatingInvoices",
              "label": "Repeating Invoices",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/RepeatingInvoices/{RepeatingInvoiceID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getrepeatinginvoiceattachments_repeatinginvoices_repeatinginvoiceid_attachments_get",
        "name": "Retrieves attachments from a specific repeating invoice",
        "display": {
          "label": "Retrieves attachments from a specific repeating invoice",
          "description": "Retrieves attachments from a specific repeating invoice",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.RepeatingInvoiceID",
              "label": "Repeating Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Repeating Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getrepeatinginvoiceattachmentbyid_repeatinginvoices_repeatinginvoiceid_attachments_attachmentid_get",
        "name": "Retrieves a specific attachment from a specific repeating invoice",
        "display": {
          "label": "Retrieves a specific attachment from a specific repeating invoice",
          "description": "Retrieves a specific attachment from a specific repeating invoice",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.RepeatingInvoiceID",
              "label": "Repeating Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Repeating Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.AttachmentID",
              "label": "Attachment ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for Attachment object",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getrepeatinginvoiceattachmentbyfilename_repeatinginvoices_repeatinginvoiceid_attachments_filename_get",
        "name": "Retrieves a specific attachment from a specific repeating invoices by file name",
        "display": {
          "label": "Retrieves a specific attachment from a specific repeating invoices by file name",
          "description": "Retrieves a specific attachment from a specific repeating invoices by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.RepeatingInvoiceID",
              "label": "Repeating Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Repeating Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "header.contentType",
              "label": "Content Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: image/jpg",
              "required": true,
              "helpText": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
              "sample": "image/jpg",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updaterepeatinginvoiceattachmentbyfilename_repeatinginvoices_repeatinginvoiceid_attachments_filename_post",
        "name": "Updates a specific attachment from a specific repeating invoices by file name",
        "display": {
          "label": "Updates a specific attachment from a specific repeating invoices by file name",
          "description": "Updates a specific attachment from a specific repeating invoices by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.RepeatingInvoiceID",
              "label": "Repeating Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Repeating Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createrepeatinginvoiceattachmentbyfilename_repeatinginvoices_repeatinginvoiceid_attachments_filename_put",
        "name": "Creates an attachment from a specific repeating invoices by file name",
        "display": {
          "label": "Creates an attachment from a specific repeating invoices by file name",
          "description": "Creates an attachment from a specific repeating invoices by file name",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.RepeatingInvoiceID",
              "label": "Repeating Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Repeating Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.FileName",
              "label": "File Name",
              "type": "string",
              "validation": {},
              "placeholder": "Example: xero-dev.jpg",
              "required": true,
              "helpText": "Name of the attachment",
              "sample": "xero-dev.jpg",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "placeholder": "",
              "required": true,
              "helpText": "Enter request body.",
              "default": "",
              "computed": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}\",\"header\":{\"content-type\":\"application/octet-stream\"},\"bodyType\":\"rawString\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getrepeatinginvoicehistory_repeatinginvoices_repeatinginvoiceid_history_get",
        "name": "Retrieves history record for a specific repeating invoice",
        "display": {
          "label": "Retrieves history record for a specific repeating invoice",
          "description": "Retrieves history record for a specific repeating invoice",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.RepeatingInvoiceID",
              "label": "Repeating Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Repeating Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createrepeatinginvoicehistory_repeatinginvoices_repeatinginvoiceid_history_put",
        "name": "Creates a  history record for a specific repeating invoice",
        "display": {
          "label": "Creates a  history record for a specific repeating invoice",
          "description": "Creates a  history record for a specific repeating invoice",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.RepeatingInvoiceID",
              "label": "Repeating Invoice ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Repeating Invoice",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.HistoryRecords",
              "label": "History Records",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/RepeatingInvoices/{RepeatingInvoiceID}/History\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreporttenninetynine_reports_tenninetynine_get",
        "name": "Retrieve reports for 1099",
        "display": {
          "label": "Retrieve reports for 1099",
          "description": "Retrieve reports for 1099",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.reportYear",
              "label": "Report Year",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019",
              "required": false,
              "helpText": "The year of the 1099 report",
              "sample": "2019",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreportagedpayablesbycontact_reports_agedpayablesbycontact_get",
        "name": "Retrieves report for aged payables by contact",
        "display": {
          "label": "Retrieves report for aged payables by contact",
          "description": "Retrieves report for aged payables by contact",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.contactId",
              "label": "Contact Id",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.date",
              "label": "Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "The date of the Aged Payables By Contact report",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.fromDate",
              "label": "From Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "filter by the from date of the report e.g. 2021-02-01",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.toDate",
              "label": "To Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "filter by the to date of the report e.g. 2021-02-28",
              "sample": "2019-10-31",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreportagedreceivablesbycontact_reports_agedreceivablesbycontact_get",
        "name": "Retrieves report for aged receivables by contact",
        "display": {
          "label": "Retrieves report for aged receivables by contact",
          "description": "Retrieves report for aged receivables by contact",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.contactId",
              "label": "Contact Id",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Contact",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.date",
              "label": "Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "The date of the Aged Receivables By Contact report",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.fromDate",
              "label": "From Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "filter by the from date of the report e.g. 2021-02-01",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.toDate",
              "label": "To Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "filter by the to date of the report e.g. 2021-02-28",
              "sample": "2019-10-31",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreportbalancesheet_reports_balancesheet_get",
        "name": "Retrieves report for balancesheet",
        "display": {
          "label": "Retrieves report for balancesheet",
          "description": "Retrieves report for balancesheet",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.date",
              "label": "Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-11-01",
              "required": false,
              "helpText": "The date of the Balance Sheet report",
              "sample": "2019-11-01",
              "computed": false
            },
            {
              "key": "query.periods",
              "label": "Periods",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 3",
              "required": false,
              "helpText": "The number of periods for the Balance Sheet report",
              "sample": 3,
              "computed": false
            },
            {
              "key": "query.timeframe",
              "label": "Timeframe",
              "type": "string",
              "validation": {
                "values": [
                  "MONTH",
                  "QUARTER",
                  "YEAR"
                ]
              },
              "placeholder": "Example: MONTH",
              "required": false,
              "helpText": "The period size to compare to (MONTH, QUARTER, YEAR)",
              "sample": "MONTH",
              "choices": [
                {
                  "value": "MONTH",
                  "label": "MONTH",
                  "sample": "MONTH"
                },
                {
                  "value": "QUARTER",
                  "label": "QUARTER",
                  "sample": "QUARTER"
                },
                {
                  "value": "YEAR",
                  "label": "YEAR",
                  "sample": "YEAR"
                }
              ],
              "computed": false
            },
            {
              "key": "query.trackingOptionID1",
              "label": "Tracking Option ID1",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "The tracking option 1 for the Balance Sheet report",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.trackingOptionID2",
              "label": "Tracking Option ID2",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "The tracking option 2 for the Balance Sheet report",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.standardLayout",
              "label": "Standard Layout",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "The standard layout boolean for the Balance Sheet report",
              "sample": true,
              "computed": false
            },
            {
              "key": "query.paymentsOnly",
              "label": "Payments Only",
              "type": "boolean",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "return a cash basis for the Balance Sheet report",
              "sample": false,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreportbanksummary_reports_banksummary_get",
        "name": "Retrieves report for bank summary",
        "display": {
          "label": "Retrieves report for bank summary",
          "description": "Retrieves report for bank summary",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.fromDate",
              "label": "From Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "filter by the from date of the report e.g. 2021-02-01",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.toDate",
              "label": "To Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "filter by the to date of the report e.g. 2021-02-28",
              "sample": "2019-10-31",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreportfromid_reports_reportid_get",
        "name": "Retrieves a specific report using a unique ReportID",
        "display": {
          "label": "Retrieves a specific report using a unique ReportID",
          "description": "Retrieves a specific report using a unique ReportID",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.ReportID",
              "label": "Report ID",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Report",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreportbudgetsummary_reports_budgetsummary_get",
        "name": "Retrieves report for budget summary",
        "display": {
          "label": "Retrieves report for budget summary",
          "description": "Retrieves report for budget summary",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.date",
              "label": "Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-03-31",
              "required": false,
              "helpText": "The date for the Bank Summary report e.g. 2018-03-31",
              "sample": "2019-03-31",
              "computed": false
            },
            {
              "key": "query.periods",
              "label": "Periods",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 2",
              "required": false,
              "helpText": "The number of periods to compare (integer between 1 and 12)",
              "sample": 2,
              "computed": false
            },
            {
              "key": "query.timeframe",
              "label": "Timeframe",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 3",
              "required": false,
              "helpText": "The period size to compare to (1=month, 3=quarter, 12=year)",
              "sample": 3,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreportexecutivesummary_reports_executivesummary_get",
        "name": "Retrieves report for executive summary",
        "display": {
          "label": "Retrieves report for executive summary",
          "description": "Retrieves report for executive summary",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.date",
              "label": "Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-03-31",
              "required": false,
              "helpText": "The date for the Bank Summary report e.g. 2018-03-31",
              "sample": "2019-03-31",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreportslist_reports_get",
        "name": "Retrieves a list of the organistaions unique reports that require a uuid to fetch",
        "display": {
          "label": "Retrieves a list of the organistaions unique reports that require a uuid to fetch",
          "description": "Retrieves a list of the organistaions unique reports that require a uuid to fetch",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreportprofitandloss_reports_profitandloss_get",
        "name": "Retrieves report for profit and loss",
        "display": {
          "label": "Retrieves report for profit and loss",
          "description": "Retrieves report for profit and loss",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.fromDate",
              "label": "From Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "filter by the from date of the report e.g. 2021-02-01",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.toDate",
              "label": "To Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "filter by the to date of the report e.g. 2021-02-28",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.periods",
              "label": "Periods",
              "type": "number",
              "validation": {
                "integer": true
              },
              "placeholder": "Example: 3",
              "required": false,
              "helpText": "The number of periods to compare (integer between 1 and 12)",
              "sample": 3,
              "computed": false
            },
            {
              "key": "query.timeframe",
              "label": "Timeframe",
              "type": "string",
              "validation": {
                "values": [
                  "MONTH",
                  "QUARTER",
                  "YEAR"
                ]
              },
              "placeholder": "Example: MONTH",
              "required": false,
              "helpText": "The period size to compare to (MONTH, QUARTER, YEAR)",
              "sample": "MONTH",
              "choices": [
                {
                  "value": "MONTH",
                  "label": "MONTH",
                  "sample": "MONTH"
                },
                {
                  "value": "QUARTER",
                  "label": "QUARTER",
                  "sample": "QUARTER"
                },
                {
                  "value": "YEAR",
                  "label": "YEAR",
                  "sample": "YEAR"
                }
              ],
              "computed": false
            },
            {
              "key": "query.trackingCategoryID",
              "label": "Tracking Category ID",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "The trackingCategory 1 for the ProfitAndLoss report",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.trackingCategoryID2",
              "label": "Tracking Category ID2",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "The trackingCategory 2 for the ProfitAndLoss report",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.trackingOptionID",
              "label": "Tracking Option ID",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "The tracking option 1 for the ProfitAndLoss report",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.trackingOptionID2",
              "label": "Tracking Option ID2",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": false,
              "helpText": "The tracking option 2 for the ProfitAndLoss report",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "query.standardLayout",
              "label": "Standard Layout",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "Return the standard layout for the ProfitAndLoss report",
              "sample": "true",
              "computed": false
            },
            {
              "key": "query.paymentsOnly",
              "label": "Payments Only",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: false",
              "required": false,
              "helpText": "Return cash only basis for the ProfitAndLoss report",
              "sample": "false",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getreporttrialbalance_reports_trialbalance_get",
        "name": "Retrieves report for trial balance",
        "display": {
          "label": "Retrieves report for trial balance",
          "description": "Retrieves report for trial balance",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.date",
              "label": "Date",
              "type": "string",
              "validation": {},
              "placeholder": "Example: 2019-10-31",
              "required": false,
              "helpText": "The date for the Trial Balance report e.g. 2018-03-31",
              "sample": "2019-10-31",
              "computed": false
            },
            {
              "key": "query.paymentsOnly",
              "label": "Payments Only",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "Return cash only basis for the Trial Balance report",
              "sample": "true",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "postsetup_setup_post",
        "name": "Sets the chart of accounts, the conversion date and conversion balances",
        "display": {
          "label": "Sets the chart of accounts, the conversion date and conversion balances",
          "description": "Sets the chart of accounts, the conversion date and conversion balances",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body",
              "label": "Body",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/Setup\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "gettaxrates_taxrates_get",
        "name": "Retrieves tax rates",
        "display": {
          "label": "Retrieves tax rates",
          "description": "Retrieves tax rates",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"ACTIVE\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"ACTIVE\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Name ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Name ASC",
              "computed": false
            },
            {
              "key": "query.TaxType",
              "label": "Tax Type",
              "type": "string",
              "validation": {},
              "placeholder": "Example: INPUT",
              "required": false,
              "helpText": "Filter by tax type",
              "sample": "INPUT",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createtaxrates_taxrates_put",
        "name": "Creates one or more tax rates",
        "display": {
          "label": "Creates one or more tax rates",
          "description": "Creates one or more tax rates",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body.TaxRates",
              "label": "Tax Rates",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/TaxRates\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatetaxrate_taxrates_post",
        "name": "Updates tax rates",
        "display": {
          "label": "Updates tax rates",
          "description": "Updates tax rates",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body.TaxRates",
              "label": "Tax Rates",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/TaxRates\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "gettrackingcategories_trackingcategories_get",
        "name": "Retrieves tracking categories and options",
        "display": {
          "label": "Retrieves tracking categories and options",
          "description": "Retrieves tracking categories and options",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Status==\"ACTIVE\"",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "Status==\"ACTIVE\"",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: Name ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "Name ASC",
              "computed": false
            },
            {
              "key": "query.includeArchived",
              "label": "Include Archived",
              "type": "boolean",
              "validation": {},
              "placeholder": "Example: true",
              "required": false,
              "helpText": "e.g. includeArchived=true - Categories and options with a status of ARCHIVED will be included in the response",
              "sample": true,
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createtrackingcategory_trackingcategories_put",
        "name": "Create tracking categories",
        "display": {
          "label": "Create tracking categories",
          "description": "Create tracking categories",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "body.TrackingCategoryID",
              "label": "Tracking Category ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The Xero identifier for a tracking category e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9"
            },
            {
              "key": "body.TrackingOptionID",
              "label": "Tracking Option ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The Xero identifier for a tracking option e.g. dc54c220-0140-495a-b925-3246adc0075f"
            },
            {
              "key": "body.Name",
              "label": "Name",
              "type": "string",
              "validation": {
                "max": 100
              },
              "placeholder": "",
              "required": false,
              "helpText": "The name of the tracking category e.g. Department, Region (max length = 100)"
            },
            {
              "key": "body.Option",
              "label": "Option",
              "type": "string",
              "validation": {
                "max": 100
              },
              "placeholder": "",
              "required": false,
              "helpText": "The option name of the tracking option e.g. East, West (max length = 100)"
            },
            {
              "key": "body.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "ACTIVE",
                  "ARCHIVED",
                  "DELETED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The status of a tracking category",
              "choices": [
                {
                  "value": "ACTIVE",
                  "label": "ACTIVE",
                  "sample": "ACTIVE"
                },
                {
                  "value": "ARCHIVED",
                  "label": "ARCHIVED",
                  "sample": "ARCHIVED"
                },
                {
                  "value": "DELETED",
                  "label": "DELETED",
                  "sample": "DELETED"
                }
              ]
            },
            {
              "key": "body.Options",
              "label": "Options",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/TrackingCategories\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "gettrackingcategory_trackingcategories_trackingcategoryid_get",
        "name": "Retrieves specific tracking categories and options using a unique tracking category Id",
        "display": {
          "label": "Retrieves specific tracking categories and options using a unique tracking category Id",
          "description": "Retrieves specific tracking categories and options using a unique tracking category Id",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.TrackingCategoryID",
              "label": "Tracking Category ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a TrackingCategory",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatetrackingcategory_trackingcategories_trackingcategoryid_post",
        "name": "Updates a specific tracking category",
        "display": {
          "label": "Updates a specific tracking category",
          "description": "Updates a specific tracking category",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.TrackingCategoryID",
              "label": "Tracking Category ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a TrackingCategory",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.TrackingCategoryID",
              "label": "Tracking Category ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The Xero identifier for a tracking category e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9"
            },
            {
              "key": "body.TrackingOptionID",
              "label": "Tracking Option ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The Xero identifier for a tracking option e.g. dc54c220-0140-495a-b925-3246adc0075f"
            },
            {
              "key": "body.Name",
              "label": "Name",
              "type": "string",
              "validation": {
                "max": 100
              },
              "placeholder": "",
              "required": false,
              "helpText": "The name of the tracking category e.g. Department, Region (max length = 100)"
            },
            {
              "key": "body.Option",
              "label": "Option",
              "type": "string",
              "validation": {
                "max": 100
              },
              "placeholder": "",
              "required": false,
              "helpText": "The option name of the tracking option e.g. East, West (max length = 100)"
            },
            {
              "key": "body.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "ACTIVE",
                  "ARCHIVED",
                  "DELETED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The status of a tracking category",
              "choices": [
                {
                  "value": "ACTIVE",
                  "label": "ACTIVE",
                  "sample": "ACTIVE"
                },
                {
                  "value": "ARCHIVED",
                  "label": "ARCHIVED",
                  "sample": "ARCHIVED"
                },
                {
                  "value": "DELETED",
                  "label": "DELETED",
                  "sample": "DELETED"
                }
              ]
            },
            {
              "key": "body.Options",
              "label": "Options",
              "type": "string",
              "validation": {},
              "placeholder": "",
              "required": false,
              "list": true
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/TrackingCategories/{TrackingCategoryID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "deletetrackingcategory_trackingcategories_trackingcategoryid_delete",
        "name": "Deletes a specific tracking category",
        "display": {
          "label": "Deletes a specific tracking category",
          "description": "Deletes a specific tracking category",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.TrackingCategoryID",
              "label": "Tracking Category ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a TrackingCategory",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "createtrackingoptions_trackingcategories_trackingcategoryid_options_put",
        "name": "Creates options for a specific tracking category",
        "display": {
          "label": "Creates options for a specific tracking category",
          "description": "Creates options for a specific tracking category",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.TrackingCategoryID",
              "label": "Tracking Category ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a TrackingCategory",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.TrackingOptionID",
              "label": "Tracking Option ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The Xero identifier for a tracking option e.g. ae777a87-5ef3-4fa0-a4f0-d10e1f13073a"
            },
            {
              "key": "body.Name",
              "label": "Name",
              "type": "string",
              "validation": {
                "max": 100
              },
              "placeholder": "",
              "required": false,
              "helpText": "The name of the tracking option e.g. Marketing, East (max length = 100)"
            },
            {
              "key": "body.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "ACTIVE",
                  "ARCHIVED",
                  "DELETED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The status of a tracking option",
              "choices": [
                {
                  "value": "ACTIVE",
                  "label": "ACTIVE",
                  "sample": "ACTIVE"
                },
                {
                  "value": "ARCHIVED",
                  "label": "ARCHIVED",
                  "sample": "ARCHIVED"
                },
                {
                  "value": "DELETED",
                  "label": "DELETED",
                  "sample": "DELETED"
                }
              ]
            },
            {
              "key": "body.TrackingCategoryID",
              "label": "Tracking Category ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Filter by a tracking category e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9"
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"put\",\"url\":\"https://api.xero.com/api.xro/2.0/TrackingCategories/{TrackingCategoryID}/Options\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "updatetrackingoptions_trackingcategories_trackingcategoryid_options_trackingoptionid_post",
        "name": "Updates a specific option for a specific tracking category",
        "display": {
          "label": "Updates a specific option for a specific tracking category",
          "description": "Updates a specific option for a specific tracking category",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.TrackingCategoryID",
              "label": "Tracking Category ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a TrackingCategory",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.TrackingOptionID",
              "label": "Tracking Option ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Tracking Option",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "body.TrackingOptionID",
              "label": "Tracking Option ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "The Xero identifier for a tracking option e.g. ae777a87-5ef3-4fa0-a4f0-d10e1f13073a"
            },
            {
              "key": "body.Name",
              "label": "Name",
              "type": "string",
              "validation": {
                "max": 100
              },
              "placeholder": "",
              "required": false,
              "helpText": "The name of the tracking option e.g. Marketing, East (max length = 100)"
            },
            {
              "key": "body.Status",
              "label": "Status",
              "type": "string",
              "validation": {
                "values": [
                  "ACTIVE",
                  "ARCHIVED",
                  "DELETED"
                ]
              },
              "placeholder": "",
              "required": false,
              "helpText": "The status of a tracking option",
              "choices": [
                {
                  "value": "ACTIVE",
                  "label": "ACTIVE",
                  "sample": "ACTIVE"
                },
                {
                  "value": "ARCHIVED",
                  "label": "ARCHIVED",
                  "sample": "ARCHIVED"
                },
                {
                  "value": "DELETED",
                  "label": "DELETED",
                  "sample": "DELETED"
                }
              ]
            },
            {
              "key": "body.TrackingCategoryID",
              "label": "Tracking Category ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "",
              "required": false,
              "helpText": "Filter by a tracking category e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9"
            },
            {
              "key": "_serializedPreset",
              "label": "Request configuration",
              "type": "string",
              "default": "{\"method\":\"post\",\"url\":\"https://api.xero.com/api.xro/2.0/TrackingCategories/{TrackingCategoryID}/Options/{TrackingOptionID}\",\"header\":{\"content-type\":\"application/json\"},\"bodyType\":\"json\"}",
              "computed": true
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "deletetrackingoptions_trackingcategories_trackingcategoryid_options_trackingoptionid_delete",
        "name": "Deletes a specific option for a specific tracking category",
        "display": {
          "label": "Deletes a specific option for a specific tracking category",
          "description": "Deletes a specific option for a specific tracking category",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.TrackingCategoryID",
              "label": "Tracking Category ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a TrackingCategory",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            },
            {
              "key": "path.TrackingOptionID",
              "label": "Tracking Option ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a Tracking Option",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getusers_users_get",
        "name": "Retrieves users",
        "display": {
          "label": "Retrieves users",
          "description": "Retrieves users",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "header.If-Modified-Since",
              "label": "If-Modified-Since",
              "type": "datetime",
              "validation": {},
              "placeholder": "Example: 2020-02-06T12:17:43.202-08:00",
              "required": false,
              "helpText": "Only records created or modified since this timestamp will be returned",
              "sample": "2020-02-06T12:17:43.202-08:00",
              "computed": false
            },
            {
              "key": "query.where",
              "label": "Where",
              "type": "string",
              "validation": {},
              "placeholder": "Example: IsSubscriber==true",
              "required": false,
              "helpText": "Filter by an any element",
              "sample": "IsSubscriber==true",
              "computed": false
            },
            {
              "key": "query.order",
              "label": "Order",
              "type": "string",
              "validation": {},
              "placeholder": "Example: LastName ASC",
              "required": false,
              "helpText": "Order by an any element",
              "sample": "LastName ASC",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      },
      {
        "key": "getuser_users_userid_get",
        "name": "Retrieves a specific user",
        "display": {
          "label": "Retrieves a specific user",
          "description": "Retrieves a specific user",
          "instructions": ""
        },
        "operation": {
          "type": "api",
          "operation": {
            "url": "ws://grindery-nexus-connector-generic-http:3000/"
          },
          "inputFields": [
            {
              "key": "header.xero-tenant-id",
              "label": "Xero-tenant-id",
              "type": "string",
              "validation": {},
              "placeholder": "Example: YOUR_XERO_TENANT_ID",
              "required": true,
              "helpText": "Xero identifier for Tenant",
              "sample": "YOUR_XERO_TENANT_ID",
              "computed": false
            },
            {
              "key": "path.UserID",
              "label": "User ID",
              "type": "uuid",
              "validation": {},
              "placeholder": "Example: 00000000-0000-0000-0000-000000000000",
              "required": true,
              "helpText": "Unique identifier for a User",
              "sample": "00000000-0000-0000-0000-000000000000",
              "computed": false
            }
          ],
          "outputFields": [
            {
              "key": "status",
              "label": "HTTP status code",
              "type": "number"
            },
            {
              "key": "headers",
              "label": "Response headers",
              "type": "string",
              "dict": true
            }
          ]
        }
      }
    ],
    "triggers": [],
    "type": "web2",
    "authentication": {
      "type": "oauth2",
      "authenticatedRequestTemplate": {
        "headers": {
          "Authorization": "Bearer {{ auth.access_token }}"
        }
      },
      "allowedHosts": [
        "api.xero.com"
      ],
      "oauth2Config": {
        "authorizeUrl": "https://login.xero.com/identity/connect/authorize?response_type=code&client_id={{ secrets.client_id|urlencode }}&scope=email+openid+profile+offline_access+accounting.attachments+accounting.contacts+accounting.transactions",
        "getAccessToken": {
          "method": "POST",
          "url": "https://identity.xero.com/connect/token",
          "headers": {
            "Content-Type": "application/x-www-form-urlencoded"
          },
          "body": "code={{ code|urlencode }}&client_id={{ secrets.client_id|urlencode }}&client_secret={{ secrets.client_secret|urlencode }}&redirect_uri={{ redirect_uri|urlencode }}&grant_type=authorization_code"
        },
        "autoRefresh": true,
        "refreshAccessToken": {
          "method": "POST",
          "url": "https://identity.xero.com/connect/token",
          "headers": {
            "Content-Type": "application/x-www-form-urlencoded"
          },
          "body": "refresh_token={{ auth.refresh_token|urlencode }}&client_id={{ secrets.client_id|urlencode }}&client_secret={{ secrets.client_secret|urlencode }}&grant_type=refresh_token"
        }
      }
    }
  }